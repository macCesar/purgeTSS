{
  "version": 3,
  "sdkVersion": "12.7.1.GA",
  "properties": {
    "ACCURACY_AUTHORIZATION_FULL": {
      "description": "The user authorized the app to access location data with full accuracy.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_AUTHORIZATION_REDUCED": {
      "description": "The user authorized the app to access location data with reduced accuracy.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_BEST": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request the best\naccuracy available.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_BEST_FOR_NAVIGATION": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request highest possible\naccuracy and combine it with additional sensor data.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_HIGH": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request more\naccurate location updates with higher battery usage.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_HUNDRED_METERS": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request location\nupdates accurate to the nearest 100 meters.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_KILOMETER": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request location\nupdates accurate to the nearest kilometer.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_LOW": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request less\naccurate location updates with lower battery usage.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_NEAREST_TEN_METERS": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request location\nupdates accurate to the nearest 10 meters.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_REDUCED": {
      "description": "The level of accuracy used when an app isnâ€™t authorized for full accuracy location data.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACCURACY_THREE_KILOMETERS": {
      "description": "Use with <a href=\"Titanium.Geolocation.accuracy\">accuracy</a> to request location\nupdates accurate to the nearest three kilometers.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTION": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify an <strong>Action</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTION_AIRPLANE_MODE_CHANGED": {
      "description": "User switched airplane mode on or off.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_ALL_APPS": {
      "description": "List all applications.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_ANSWER": {
      "description": "Handle an incoming phone call.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_ATTACH_DATA": {
      "description": "Used to indicate that the data is an attachment.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_BATTERY_CHANGED": {
      "description": "Listen to battery state change status.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_BATTERY_LOW": {
      "description": "Indicates low battery condition on the device.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_BATTERY_OKAY": {
      "description": "Inidicates the battery is now okay after being low.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_BOOT_COMPLETED": {
      "description": "Indicates the system has finished booting.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_BUG_REPORT": {
      "description": "Show activity for reporting a bug.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_CALL": {
      "description": "Perform a call to someone specified by the <code>data</code> property.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_CALL_BUTTON": {
      "description": "User pressed the call button.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_CAMERA_BUTTON": {
      "description": "The camera button was pressed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_CHOOSER": {
      "description": "Display an activity chooser.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_CLOSE_SYSTEM_DIALOGS": {
      "description": "User dismissed a temporary system dialog, such as the notification drawer or recent-app drawer.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_CONFIGURATION_CHANGED": {
      "description": "The device's configuration changed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_CREATE_SHORTCUT": {
      "description": "Create a shortcut.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_DATE_CHANGED": {
      "description": "Date changed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_DEFAULT": {
      "description": "Default action, which is <code>Titanium.Android.ACTION_VIEW</code>",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_DELETE": {
      "description": "Delete the data specified by the Intent's <code>data</code> property.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_DEVICE_STORAGE_LOW": {
      "description": "Indicates a low memory condition on the device.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_DIAL": {
      "description": "Dial a number specified by the Intent's <code>data</code> property.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_EDIT": {
      "description": "Provide editable access to the data specified by the Intent's <code>data</code> property.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_GET_CONTENT": {
      "description": "Allow the user to select a particular kind of data specified by the Intent's <code>type</code> property.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_GTALK_SERVICE_CONNECTED": {
      "description": "GTalk connection has been established.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_GTALK_SERVICE_DISCONNECTED": {
      "description": "GTalk connection has been disconnected.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_HEADSET_PLUG": {
      "description": "A wired headset has been plugged in or unplugged.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_INPUT_METHOD_CHANGED": {
      "description": "An input method has been changed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_INSERT": {
      "description": "Insert an empty item into the given container.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_INSERT_OR_EDIT": {
      "description": "Pick an existing item or insert an empty item, then edit it.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MAIN": {
      "description": "Start as the main entry point.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MANAGE_PACKAGE_STORAGE": {
      "description": "Indicates low memory condition notification acknowledged by user and package management should be started.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_BAD_REMOVAL": {
      "description": "External media was removed from SD card slot, but mount point was not unmounted.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_BUTTON": {
      "description": "The media button was pressed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_CHECKING": {
      "description": "External media is present and being disk-checked.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_EJECT": {
      "description": "User has expressed the desire to remove the external storage media.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_MOUNTED": {
      "description": "External media is present and mounted at its mount point.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_NOFS": {
      "description": "External media is present, but is using an incompatible filesystem or is blank.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_REMOVED": {
      "description": "External media has been removed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_SCANNER_FINISHED": {
      "description": "The media scanner has finished scanning a directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_SCANNER_SCAN_FILE": {
      "description": "Request the media scanner to scan a file and add it to the media database.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_SCANNER_STARTED": {
      "description": "The media scanner has started scanning a directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_SHARED": {
      "description": "External media is unmounted because it is being shared via USB mass storage.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_UNMOUNTABLE": {
      "description": "Corresponds to the Android <code>Intent.ACTION_MEDIA_UNMOUNTABLE</code> constant.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_MEDIA_UNMOUNTED": {
      "description": "External media is present, but not mounted at its mount point.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_NEW_OUTGOING_CALL": {
      "description": "An outgoing call is about to be placed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PACKAGE_ADDED": {
      "description": "A new application package has been installed on the device.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PACKAGE_CHANGED": {
      "description": "An existing application package has been changed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PACKAGE_DATA_CLEARED": {
      "description": "The user has cleared the data of a package.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PACKAGE_REMOVED": {
      "description": "An existing application package has been removed from the device.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PACKAGE_REPLACED": {
      "description": "A new version of an application package has been installed, replacing an existing version that was previously installed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PACKAGE_RESTARTED": {
      "description": "The user has restarted a package, and all of its processes have been killed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PICK": {
      "description": "Pick an item from the directory indicated by the Intent's <code>data</code> property.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PICK_ACTIVITY": {
      "description": "Pick an activity given an intent.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_POLICY_ALLOW": {
      "description": "Allow the navigation to continue.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTION_POLICY_CANCEL": {
      "description": "Cancel the navigation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTION_POWER_CONNECTED": {
      "description": "External power has been connected to the device.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_POWER_DISCONNECTED": {
      "description": "External power has been disconnected from the device.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_POWER_USAGE_SUMMARY": {
      "description": "Show power usage information to the user.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_PROVIDER_CHANGED": {
      "description": "Content provider published new events or items.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_REBOOT": {
      "description": "Device rebooted.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_RUN": {
      "description": "Run the data.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SCREEN_OFF": {
      "description": "Sent when the device goes to sleep and becomes non-interactive.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SCREEN_ON": {
      "description": "Sent when the device wakes up and becomes interactive.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SEARCH": {
      "description": "Perform a search.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SEARCH_LONG_PRESS": {
      "description": "Start action associated with long pressing on the search key.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SEND": {
      "description": "Deliver data to another activity.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SENDTO": {
      "description": "Deliver data to the recipient specified by the Intent's <code>data</code> property.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SEND_MULTIPLE": {
      "description": "Deliver multiple data to another activity.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SET_WALLPAPER": {
      "description": "Show settings for choosing the system wallpaper.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SHUTDOWN": {
      "description": "Device is shutting down.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SYNC": {
      "description": "Perform data synchronization.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_SYSTEM_TUTORIAL": {
      "description": "Start the platform-defined tutorial.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_TIME_CHANGED": {
      "description": "The time was set.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_TIME_TICK": {
      "description": "The current time changed.  Sent every minute.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_UID_REMOVED": {
      "description": "A user ID was removed from the system.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_USER_PRESENT": {
      "description": "Sent when the user is present after device wakes up.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_VIEW": {
      "description": "Display data to the user.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_VOICE_COMMAND": {
      "description": "Start voice command.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_WALLPAPER_CHANGED": {
      "description": "The current system wallpaper has changed.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTION_WEB_SEARCH": {
      "description": "Perform a web search.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTIVATION_STATE_ACTIVATED": {
      "description": "The watch is currently activated.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTIVATION_STATE_INACTIVE": {
      "description": "The watch is currently inactive.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTIVATION_STATE_NOT_ACTIVATED": {
      "description": "The watch is currently not activated.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTIVITY": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to create an activity indicator that\ncan be used in navigation bars and toolbars.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION": {
      "description": "The location data is used for tracking location changes to the automobile specifically during vehicular navigation.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTIVITYTYPE_FITNESS": {
      "description": "The location data is used for tracking any pedestrian-related activity.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTIVITYTYPE_OTHER": {
      "description": "The location data is being used for an unknown activity.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ACTIVITYTYPE_OTHER_NAVIGATION": {
      "description": "The location data is used for tracking movements of other types of vehicular\nnavigation that are not automobile related.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ADD": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify an <strong>Add</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ALERT_SEVERITY_CRITICAL": {
      "description": "Indicates that the system should present the alert using the\ncritical, or caution, style.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ALERT_SEVERITY_DEFAULT": {
      "description": "Indicates that the system should present the alert using the standard\nalert style.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ANIMATION_CURVE_EASE_IN": {
      "description": "Use with <a href=\"Titanium.UI.Animation.curve\">Animation.curve</a> to specify an animation that starts\nslowly and speeds up.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ANIMATION_CURVE_EASE_IN_OUT": {
      "description": "Use with <a href=\"Titanium.UI.Animation.curve\">Animation.curve</a> to specify an animation that starts\nslowly, and speeds up, then slows down at the end of the animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ANIMATION_CURVE_EASE_OUT": {
      "description": "Use with <a href=\"Titanium.UI.Animation.curve\">Animation.curve</a> to specify an animation that starts\nquickly, then slows down at the end of the animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ANIMATION_CURVE_LINEAR": {
      "description": "Use with <a href=\"Titanium.UI.Animation.curve\">Animation.curve</a> to specify an animation that proceeds\nat a constant rate.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ANIMATION_STYLE_FADE": {
      "description": "Fade animation style, when the status bar is hidden or shown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ANIMATION_STYLE_NONE": {
      "description": "No animation style, when the status bar is hidden or shown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ANIMATION_STYLE_SLIDE": {
      "description": "Slide animation style, when the status bar is hidden or shown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "API_LEVEL": {
      "description": "Android API level identifier of the Operating System.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ASPECT_RATIO_16_9": {
      "description": "Aspect ratio 16:9",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ASPECT_RATIO_4_3": {
      "description": "Aspect ratio 4:3",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_ROLE_CHAIR": {
      "description": "Attendee role is chair.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_ROLE_NON_PARTICIPANT": {
      "description": "Attendee is not a participant.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_ROLE_OPTIONAL": {
      "description": "Attendee role is optional.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_ROLE_REQUIRED": {
      "description": "Attendee role is required.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_ROLE_UNKNOWN": {
      "description": "Attendee role is unknown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_ACCEPTED": {
      "description": "Attendee status is accepted.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_DECLINED": {
      "description": "Attendee status is declined.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_DELEGATED": {
      "description": "Attendee status is delegated.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_INVITED": {
      "description": "Attendee status is invited.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_IN_PROCESS": {
      "description": "Attendee status is in process.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_NONE": {
      "description": "There is no Attendee status.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_PENDING": {
      "description": "Attendee status is pending.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_TENTATIVE": {
      "description": "Attendee status is tentative.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_STATUS_UNKNOWN": {
      "description": "Attendee status is unknown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_TYPE_GROUP": {
      "description": "Attendee type is group.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_TYPE_NONE": {
      "description": "There is not attendee type.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_TYPE_PERSON": {
      "description": "Attendee type is person.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_TYPE_REQUIRED": {
      "description": "Attendee type is required.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_TYPE_RESOURCE": {
      "description": "Attendee type is resource.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_TYPE_ROOM": {
      "description": "Attendee type is room.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTENDEE_TYPE_UNKNOWN": {
      "description": "Attendee type is unknown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_BACKGROUND_COLOR": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to specify a background color.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_BASELINE_OFFSET": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to apply a different baseline to the text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_EXPANSION": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to stretch the text horizontally.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_FONT": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to specify a font.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_FOREGROUND_COLOR": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to specify a font color.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_KERN": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to specify kerning (space between characters).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LETTERPRESS_STYLE": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to use a letterpress text effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LIGATURE": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to enable or disable ligatures.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINE_BREAK": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to wrap and truncate the text.\n<strong>Deprecated since 7.5.0. Use <a href=\"ParagraphAttribute.lineBreakMode\">ParagraphAttribute.lineBreakMode</a> instead.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINE_BREAK_BY_CHAR_WRAPPING": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to wrap words at word boundaries.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINE_BREAK_BY_CLIPPING": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to set lines to not draw past the edge of the text container.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_HEAD": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to use ellipsis glyph at the beginning of the line for missing text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_MIDDLE": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to use ellipsis glyph at the middle of the line for missing text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_TAIL": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to use ellipsis glyph at the end of the line for missing text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINE_BREAK_BY_WORD_WRAPPING": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to wrap words at word boundaries.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_LINK": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to create a link.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify an\n<a href=\"Titanium.XML.Attr\">Attr</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_OBLIQUENESS": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to skew the text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_PARAGRAPH_STYLE": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to manages the behaviour of string set.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_SHADOW": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to display a shadow behind the text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_STRIKETHROUGH_COLOR": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to change the color of the horizontal line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_STRIKETHROUGH_STYLE": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to place a horizontal line through the text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_STROKE_COLOR": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to specify a color for the stroke text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_STROKE_WIDTH": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to specify the width of the stroke text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_SUBSCRIPT_STYLE": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to place the text in a lower position.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_SUPERSCRIPT_STYLE": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to place the text in an upper position.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_TEXT_EFFECT": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to apply a text effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINES_STYLE": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to place a horizontal line under the text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_BY_WORD": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw a line only underneath or through words.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_COLOR": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to change the color of the horizontal line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_PATTERN_DASH": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw a dashed line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw an alternating line of dashes and dots.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT_DOT": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw an alternating line of dashes and two dots.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_PATTERN_DOT": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw a dotted line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_PATTERN_SOLID": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw a solid line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_STYLE_DOUBLE": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw a double line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_STYLE_NONE": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to not draw a line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_STYLE_SINGLE": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw a single line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_UNDERLINE_STYLE_THICK": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to draw a thick line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_WRITING_DIRECTION": {
      "description": "Use with <a href=\"Attribute.type\">Attribute.type</a> to control the direction of the text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_WRITING_DIRECTION_EMBEDDING": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to use the embedded text direction.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_WRITING_DIRECTION_LEFT_TO_RIGHT": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to write text left to right.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_WRITING_DIRECTION_NATURAL": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to use the\n<a href=\"http://www.unicode.org/reports/tr9/#The_Paragraph_Level\">Unicode Bidirection Algorithm rules P2 and P3</a>\nto determine which direction to use.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_WRITING_DIRECTION_OVERRIDE": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to override the text direction.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ATTRIBUTE_WRITING_DIRECTION_RIGHT_TO_LEFT": {
      "description": "Use with <a href=\"Attribute.value\">Attribute.value</a> to write text right to left.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIOVISUAL_MEDIA_TYPE_ALL": {
      "description": "All media types require a user gesture to begin playing.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIOVISUAL_MEDIA_TYPE_AUDIO": {
      "description": "Media types containing audio require a user gesture to begin playing.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIOVISUAL_MEDIA_TYPE_NONE": {
      "description": "No media types require a user gesture to begin playing.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIOVISUAL_MEDIA_TYPE_VIDEO": {
      "description": "Media types containing video require a user gesture to begin playing.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_3GP2": {
      "description": "Audio file format 3GPP2.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_3GPP": {
      "description": "Audio file format 3GPP.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_AIFF": {
      "description": "Audio file format Audio Interchange File Format (AIFF).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_AMR": {
      "description": "Audio file format Adaptive Multi-Rate (AMR).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_CAF": {
      "description": "Audio file format Apple Compressed Audio Format (CAF).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_MP3": {
      "description": "Audio file format MP3.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_MP4": {
      "description": "Audio file format MP4.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_MP4A": {
      "description": "Audio file format MP4A.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FILEFORMAT_WAVE": {
      "description": "Audio file format WAVE.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FORMAT_AAC": {
      "description": "Audio format MPEG4 AAC encoding.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FORMAT_ALAW": {
      "description": "Audio format 8-bit <a href=\"https://en.wikipedia.org/wiki/A-law_algorithm\">aLaw encoding</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FORMAT_APPLE_LOSSLESS": {
      "description": "Audio format Apple lossless encoding.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FORMAT_ILBC": {
      "description": "Audio format <a href=\"https://en.wikipedia.org/wiki/Internet_Low_Bitrate_Codec\">iLBC encoding</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FORMAT_IMA4": {
      "description": "Audio format Apple IMA4 encoding.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FORMAT_LINEAR_PCM": {
      "description": "Audio format 16-bit, <a href=\"https://en.wikipedia.org/wiki/Pulse-code_modulation\">linear PCM encoding</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_FORMAT_ULAW": {
      "description": "Audio format 8-bit <a href=\"https://en.wikipedia.org/wiki/M-law_algorithm\">muLaw encoding</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_CATEGORY_AMBIENT": {
      "description": "For long-duration sounds such as rain, car engine noise, and so on.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_CATEGORY_PLAYBACK": {
      "description": "Session mode for playing recorded music or other sounds that are central to the successful use of your application.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_CATEGORY_PLAY_AND_RECORD": {
      "description": "Session mode for recording (input) and playback (output) of audio, such as for a VOIP (voice over IP) application.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_CATEGORY_RECORD": {
      "description": "Session mode for recording audio; it silences playback audio.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_CATEGORY_SOLO_AMBIENT": {
      "description": "Session mode for long-duration sounds such as rain, car engine noise, and so on.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_OVERRIDE_ROUTE_NONE": {
      "description": "Constant that specifies audio should output to the default audio route. See <a href=\"Titanium.Media.setOverrideAudioRoute\">Titanium.Media.setOverrideAudioRoute</a> for more information.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_OVERRIDE_ROUTE_SPEAKER": {
      "description": "Constant that specifies audio should output to the speaker. See <a href=\"Titanium.Media.setOverrideAudioRoute\">Titanium.Media.setOverrideAudioRoute</a> for more information.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_AIRPLAY": {
      "description": "Constant for output on a remote Air Play device. This is an output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_BLUETOOTHA2DP": {
      "description": "Constant for output on a Bluetooth A2DP device. This is an output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_BLUETOOTHHFP": {
      "description": "Constant for input or output on a Bluetooth Hands-Free Profile device. This can be both an input and output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_BLUETOOTHLE": {
      "description": "Constant for output on a Bluetooth Low Energy device. This is an output port. This is available on iOS7 and later.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_BUILTINMIC": {
      "description": "Constant for built-in microphone on an iOS device. This is an input port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_BUILTINRECEIVER": {
      "description": "Constant for the speaker you hold to your ear when on a phone call. This is an output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_BUILTINSPEAKER": {
      "description": "Constant for built-in speaker on an iOS device. This is an output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_CARAUDIO": {
      "description": "Constant for Input or output via Car Audio. This can be both an input and output port. This is available on iOS7 and later.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_HDMI": {
      "description": "Constant for output via High-Definition Multimedia Interface. This is an output port",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_HEADPHONES": {
      "description": "Constant for headphone or headset output. This is an output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_HEADSETMIC": {
      "description": "Constant for microphone on a wired headset. This is an input port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_LINEIN": {
      "description": "Constant for line level input on a dock connector. This is an input port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_LINEOUT": {
      "description": "Constant for line level output on a dock connector. This is an output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_SESSION_PORT_USBAUDIO": {
      "description": "Constant for input or output on a Universal Serial Bus device. This can be both an input and output port.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_BUFFERING": {
      "description": "Audio data is being buffered from the network.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_INITIALIZED": {
      "description": "Audio playback is being initialized.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_PAUSED": {
      "description": "Playback is paused.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_PLAYING": {
      "description": "Audio playback is active.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_STARTING": {
      "description": "Audio playback is starting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_STOPPED": {
      "description": "Audio playback is stopped.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_STOPPING": {
      "description": "Audio playback is stopping.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_STATE_WAITING_FOR_DATA": {
      "description": "Player is waiting for audio data from the network.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_TYPE_ALARM": {
      "description": "Used to identify the volume of audio streams for alarms.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_TYPE_MEDIA": {
      "description": "Used to identify the volume of audio streams for media playback.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_TYPE_NOTIFICATION": {
      "description": "Used to identify the volume of audio streams for notifications.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_TYPE_RING": {
      "description": "Used to identify the volume of audio streams for the phone ring.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_TYPE_SIGNALLING": {
      "description": "Used to identify the volume of audio streams for DTMF tones or beeps.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUDIO_TYPE_VOICE": {
      "description": "Used to identify the volume of audio streams for voice calls.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTHORIZATION_ALWAYS": {
      "description": "A <a href=\"Titanium.Geolocation.locationServicesAuthorization\">locationServicesAuthorization</a> value\nindicating that the application is authorized to start location services at any time. This authorization\nincludes the use of all location services, including monitoring regions and significant location changes.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTHORIZATION_AUTHORIZED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTHORIZATION_DENIED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTHORIZATION_RESTRICTED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTHORIZATION_UNKNOWN": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTHORIZATION_WHEN_IN_USE": {
      "description": "A <a href=\"Titanium.Geolocation.locationServicesAuthorization\">locationServicesAuthorization</a> value\nindicating that the application is authorized to start most location services only while running in the foreground.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ADDRESS": {
      "description": "Specifies the expectation of an address.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ADDRESS_CITY": {
      "description": "Specifies the expectation of a city name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ADDRESS_CITY_STATE": {
      "description": "Specifies the expectation of a city name combined with a state name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ADDRESS_LINE1": {
      "description": "Specifies the expectation of the first line of a street address.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ADDRESS_LINE2": {
      "description": "Specifies the expectation of the second line of a street address.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ADDRESS_STATE": {
      "description": "Specifies the expectation of a state name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_CARD_EXPIRATION_DATE": {
      "description": "Specifies the expectation of a card expiration date.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_CARD_EXPIRATION_DAY": {
      "description": "Specifies the expectation of a card expiration day.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_CARD_EXPIRATION_MONTH": {
      "description": "Specifies the expectation of a card expiration month.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_CARD_EXPIRATION_YEAR": {
      "description": "Specifies the expectation of a card expiration year.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_CARD_NUMBER": {
      "description": "Specifies the expectation of a card number.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_CARD_SECURITY_CODE": {
      "description": "Specifies the expectation of a card security code.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_COUNTRY_NAME": {
      "description": "Specifies the expectation of a country name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_EMAIL": {
      "description": "Specifies the expectation of an email address.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_FAMILY_NAME": {
      "description": "Specifies the expectation of a family name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_GIVEN_NAME": {
      "description": "Specifies the expectation of a given name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_JOB_TITLE": {
      "description": "Specifies the expectation of a job title.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_LOCATION": {
      "description": "Specifies the expectation of a location, such as a point of interest, an address, or another way to identify a location.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_MIDDLE_NAME": {
      "description": "Specifies the expectation of a middle name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_NAME": {
      "description": "Specifies the expectation of a name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_NAME_PREFIX": {
      "description": "Specifies the expectation of a prefix or title, such as 'Dr.'",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_NAME_SUFFIX": {
      "description": "Specifies the expectation of a suffix, such as 'Jr.'",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_NEW_PASSWORD": {
      "description": "Specifies the expectation of a new password.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_NICKNAME": {
      "description": "Specifies the expectation of a nickname.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ONE_TIME_CODE": {
      "description": "Specifies the expectation of a single-factor SMS login code.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_ORGANIZATION_NAME": {
      "description": "Specifies the expectation of an organization name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_PASSWORD": {
      "description": "Specifies the expectation of a password.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_PHONE": {
      "description": "Specifies the expectation of a telephone number.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_POSTAL_CODE": {
      "description": "Specifies the expectation of a postal code.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_SUBLOCALITY": {
      "description": "Specifies the expectation of a sublocality.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_URL": {
      "description": "Specifies the expectation of a URL.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOFILL_TYPE_USERNAME": {
      "description": "Specifies the expectation of an account or login name.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_ALL": {
      "description": "Converts all detectable types of data into clickable links.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_CALENDAR": {
      "description": "Converts strings formatted as calendar events into clickable links.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_EMAIL_ADDRESSES": {
      "description": "Converts strings formatted as email addresses into clickable links.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_FLIGHT_NUMBER": {
      "description": "An option to detect strings with the format of a flight number from an airline.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_LOOKUP_SUGGESTION": {
      "description": "An option to detect strings with the format of information that the user might want to look up.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_MAP_ADDRESSES": {
      "description": "Converts strings formatted as addresses into clickable links.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_MONEY": {
      "description": "An option to detect strings with the format of money amounts.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_NONE": {
      "description": "Disables converting strings into clickable links.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_PHONE_NUMBERS": {
      "description": "Converts strings formatted as phone numbers into clickable links.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_PHYSICAL_VALUE": {
      "description": "An option to detect strings with the format of physical values (length, temperatures, etc...)",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_SHIPMENT_TRACKING_NUMBER": {
      "description": "An option to detect strings with the format of a tracking number from a package delivery company.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AUTOLINK_URLS": {
      "description": "Converts strings formatted as URLs into clickable links.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AVAILABILITY_BUSY": {
      "description": "Event has a busy availability setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AVAILABILITY_FREE": {
      "description": "Event has a free availability setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AVAILABILITY_NOTSUPPORTED": {
      "description": "Availability settings are not supported by the event's calendar.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AVAILABILITY_TENTATIVE": {
      "description": "Event has a tentative availability setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AVAILABILITY_UNAVAILABLE": {
      "description": "Event has a tentative availability setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "AssertionError": {
      "description": "extension of <code>Error</code>",
      "type": "assert.AssertionError",
      "readOnly": true,
      "values": []
    },
    "BACKGROUNDFETCHINTERVAL_MIN": {
      "description": "Use with <a href=\"Titanium.App.iOS.setMinimumBackgroundFetchInterval\">setMinimumBackgroundFetchInterval</a> method.\nSpecifies the smallest fetch interval supported by the system.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BACKGROUNDFETCHINTERVAL_NEVER": {
      "description": "Use with <a href=\"Titanium.App.iOS.setMinimumBackgroundFetchInterval\">setMinimumBackgroundFetchInterval</a> method.\nUsed to specify a fetch interval large enough to prevent fetch operations from occurring.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BAR": {
      "description": "The style of progress view that is used in a toolbar.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BATTERY_STATE_CHARGING": {
      "description": "Constant to indicate that the system is plugged in and currently being charged.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BATTERY_STATE_FULL": {
      "description": "Constant to indicate that the battery is fully charged.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BATTERY_STATE_UNKNOWN": {
      "description": "Constant to indicate that the battery state is not known or monitoring is disabled.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BATTERY_STATE_UNPLUGGED": {
      "description": "Constant to indicate that the system is unplugged.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BIG": {
      "description": "Large white spinning indicator.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BIG_DARK": {
      "description": "Large gray spinning indicator.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BIG_ENDIAN": {
      "description": "Big endian (network) byte order -- that is, the most significant byte first.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLACK": {
      "description": "A style of indicator which is black smaller than the default style. This style is good\nagainst a white content background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_CLEAR": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_COLOR": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_COLOR_BURN": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_COLOR_DODGE": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_COPY": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_DARKEN": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_DESTINATION_ATOP": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_DESTINATION_IN": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_DESTINATION_OUT": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_DESTINATION_OVER": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_DIFFERENCE": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_EXCLUSION": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_HARD_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_HUE": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_LIGHTEN": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_LUMINOSITY": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_MULTIPLY": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_NORMAL": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_OVERLAY": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_PLUS_DARKER": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_PLUS_LIGHTER": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_SATURATION": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_SCREEN": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_SOFT_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_SOURCE_ATOP": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_SOURCE_IN": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_SOURCE_OUT": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLEND_MODE_XOR": {
      "description": "Use with <a href=\"Titanium.UI.MaskedImage.mode\">MaskedImage.mode</a> to specify a blend mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_DARK": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_EXTRA_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_PROMINENT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_REGULAR": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL_DARK": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_MATERIAL": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_MATERIAL_DARK": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_MATERIAL_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL_DARK": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL_DARK": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL_DARK": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.iOS.BlurView.effect\">BlurView.effect</a> to specify a blur effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BOOKMARKS": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BOTTOM": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BREAK_BALANCED": {
      "description": "Line breaking strategy balances line lengths.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BREAK_HIGH_QUALITY": {
      "description": "Line breaking uses high-quality strategy, including hyphenation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BREAK_SIMPLE": {
      "description": "Line breaking uses simple strategy.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BUTTON_STYLE_FILLED": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to show a solid filled button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BUTTON_STYLE_OPTION_NEGATIVE": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to show a negative themed escape button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BUTTON_STYLE_OPTION_NEUTRAL": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to show a normal themed option button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BUTTON_STYLE_OPTION_POSITIVE": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to show a positive themed accept button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BUTTON_STYLE_OUTLINED": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to show an unfilled rounded border button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "BUTTON_STYLE_TEXT": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to show a text-only button without a background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "Buffer": {
      "description": "a global reference to the <a href=\"buffer.Buffer\">Buffer</a> class.",
      "type": "buffer.Buffer",
      "readOnly": true,
      "values": []
    },
    "CACHE_POLICY_RELOAD_IGNORING_LOCAL_CACHE_DATA": {
      "description": "Specifies that the data for the URL load should be loaded from the originating source.\nNo existing cache data should be used to satisfy a URL load request.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CACHE_POLICY_RETURN_CACHE_DATA_DONT_LOAD": {
      "description": "Specifies that the existing cache data should be used to satisfy a request,\nregardless of its age or expiration date.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CACHE_POLICY_RETURN_CACHE_DATA_ELSE_LOAD": {
      "description": "Specifies that the existing cached data should be used to satisfy the request,\nregardless of its age or expiration date.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CACHE_POLICY_USE_PROTOCOL_CACHE_POLICY": {
      "description": "Specifies that the caching logic defined in the protocol implementation, if any,\nis used for a particular URL load request.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Camera</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_AUTHORIZATION_AUTHORIZED": {
      "description": "Constant specifying that app is authorized to use camera. This is available on iOS7 and later.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_AUTHORIZATION_DENIED": {
      "description": "Constant specifying that app is denied usage of camera. This is available on iOS7 and later.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_AUTHORIZATION_RESTRICTED": {
      "description": "Constant specifying that app is restricted from using camera. This is available on iOS7 and later.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_AUTHORIZATION_UNKNOWN": {
      "description": "Constant specifying that app is not yet authorized to use camera. This is available on iOS7 and later.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_FLASH_AUTO": {
      "description": "Constant specifying to have the device determine to use the flash or not.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_FLASH_OFF": {
      "description": "Constant specifying to never fire the flash.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_FLASH_ON": {
      "description": "Constant specifying to always fire the flash.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_FRONT": {
      "description": "Constant specifying the front camera.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CAMERA_REAR": {
      "description": "Constant indicating the rear camera.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CANCEL": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Cancel</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CANCELLED": {
      "description": "Constant for the <code>CANCELLED</code> status result. On Android, this property exists but is not used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_ALARM": {
      "description": "Notification category indicating an alarm or timer.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_ALTERNATIVE": {
      "description": "Set if the activity should be considered as an alternative action to the data the user is currently viewing.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_BROWSABLE": {
      "description": "Activity can browse the Internet.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_CALL": {
      "description": "Notification category indicating an incoming call (voice or video) or similar synchronous\ncommunication request.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_DEFAULT": {
      "description": "Activity should be used as the default action to perform on a piece of data.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_DEVELOPMENT_PREFERENCE": {
      "description": "Activity is in the development preference panel.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_EMAIL": {
      "description": "Notification category indicating an asynchronous bulk message (email).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_EMBED": {
      "description": "Activity can run inside a parent activity.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_ERROR": {
      "description": "Notification category indicating an error in background operation or authentication status.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_EVENT": {
      "description": "Notification category indicating a calendar event.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST": {
      "description": "To be used as test code for framework instrumentation tests.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_HOME": {
      "description": "Home activity, the first activity that is displayed when the device boots.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_INFO": {
      "description": "Provides information about the package it is in.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_LAUNCHER": {
      "description": "Activity is in the device's launcher.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_MESSAGE": {
      "description": "Notification category indicating an incoming direct message (SMS, instant message, etc.).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_MONKEY": {
      "description": "This activity may be exercised by the monkey or other automated test tools.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_OPENABLE": {
      "description": "Activity can open raw <code>file://</code> or <code>scheme://</code> URIs.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_PREFERENCE": {
      "description": "This activity is a preference panel.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_PROGRESS": {
      "description": "Notification category indicating the progress of a long-running background operation.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_PROMO": {
      "description": "Notification category indicating a promotion or advertisement.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_RECOMMENDATION": {
      "description": "Notification category indicating a specific, timely recommendation for a single thing.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_SAMPLE_CODE": {
      "description": "To be used as a sample code example (not part of the normal user experience).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_SELECTED_ALTERNATIVE": {
      "description": "Activity should be considered as an alternative selection action to the data the user\nhas currently selected.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_SERVICE": {
      "description": "Notification category for a running background service.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_SOCIAL": {
      "description": "Notification category for a social network or sharing update.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_STATUS": {
      "description": "Notification category indicating ongoing information about device or contextual status.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_TAB": {
      "description": "Activity to be used in a tab activity.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_TEST": {
      "description": "To be used as a test (not part of the normal user experience).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_TRANSPORT": {
      "description": "Notification category indicating media transport control for playback.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CATEGORY_UNIT_TEST": {
      "description": "To be used as a unit test (run through the Test Harness).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CDATA_SECTION_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.CDATASection\">CDATASection</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CHARSET_ASCII": {
      "description": "ASCII character encoding..",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CHARSET_ISO_LATIN_1": {
      "description": "ISO 8859-1 (Latin-1) character encoding.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CHARSET_UTF16": {
      "description": "UTF-16 character encoding with default byte order.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CHARSET_UTF16BE": {
      "description": "UTF-16 character encoding with big endian byte order.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CHARSET_UTF16LE": {
      "description": "UTF-16 character encoding with little endian byte order.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CHARSET_UTF8": {
      "description": "UTF-8 character encoding.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CLIPBOARD_OPTION_EXPIRATION_DATE": {
      "description": "Specifies the time and date that you want the system to remove the clipboard items from the clipboard.\nNote that on macOS, setting a date in the past does not appear to invalidate items immediately, while on iOS it does.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CLIPBOARD_OPTION_LOCAL_ONLY": {
      "description": "Specifies that the clipboard items should not be available to other devices through Handoff.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "CLIP_MODE_DEFAULT": {
      "description": "Use with <a href=\"Titanium.UI.View.clipMode\">Titanium.UI.View.clipMode</a> to specify clipping behavior.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CLIP_MODE_DISABLED": {
      "description": "Use with <a href=\"Titanium.UI.View.clipMode\">Titanium.UI.View.clipMode</a> to specify clipping behavior.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CLIP_MODE_ENABLED": {
      "description": "Use with <a href=\"Titanium.UI.View.clipMode\">Titanium.UI.View.clipMode</a> to specify clipping behavior.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CLOSED": {
      "description": "State value representing a closed socket.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "COLLISION_MODE_ALL": {
      "description": "Use with <a href=\"Titanium.UI.iOS.CollisionBehavior.collisionMode\">Titanium.UI.iOS.CollisionBehavior.collisionMode</a> to specify collisions with both items and\nboundaries.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "COLLISION_MODE_BOUNDARY": {
      "description": "Use with <a href=\"Titanium.UI.iOS.CollisionBehavior.collisionMode\">Titanium.UI.iOS.CollisionBehavior.collisionMode</a> to specify collisions with\nboundaries only.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "COLLISION_MODE_ITEM": {
      "description": "Use with <a href=\"Titanium.UI.iOS.CollisionBehavior.collisionMode\">Titanium.UI.iOS.CollisionBehavior.collisionMode</a> to specify collisions with items only.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "COMMENT_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.Comment\">Comment</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "COMPOSE": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Compose</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CONNECTED": {
      "description": "State value representing a connected socket.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CONTACTS": {
      "description": "Contacts style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CONTACTS_KIND_ORGANIZATION": {
      "description": "Specifies that a contact is an organization.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CONTACTS_KIND_PERSON": {
      "description": "Specifies that a contact is a person.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CONTACTS_SORT_FIRST_NAME": {
      "description": "Specifies that group members will be sorted by first name.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CONTACTS_SORT_LAST_NAME": {
      "description": "Specifies that group members will be sorted by last name.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CONTACT_ADD": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to specify a <strong>ContactAdd</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "COPYFILE_EXCL": {
      "description": "The copy operation will fail if dest already exists.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "CREDENTIAL_PERSISTENCE_FOR_SESSION": {
      "description": "Credential should be stored only for this session.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CREDENTIAL_PERSISTENCE_NONE": {
      "description": "Credential should not be stored.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CREDENTIAL_PERSISTENCE_PERMANENT": {
      "description": "Credential should be stored in the keychain.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CREDENTIAL_PERSISTENCE_SYNCHRONIZABLE": {
      "description": "Credential should be stored permanently in the keychain, and in addition should be\ndistributed to other devices based on the owning AppleID.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CROSS_DISSOLVE": {
      "description": "A transition that dissolves from one view to the next.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CURL_DOWN": {
      "description": "Curl downwards during a transition animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "CURL_UP": {
      "description": "Curl upwards during a transition animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DARK": {
      "description": "Small gray spinning indicator.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DARK_CONTENT": {
      "description": "Status bar style to use with light backgrounds.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DATE_PICKER_STYLE_AUTOMATIC": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DATE_PICKER_STYLE_COMPACT": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DATE_PICKER_STYLE_INLINE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DATE_PICKER_STYLE_WHEELS": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DEFAULT": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DEFAULT_ALL": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DEFAULT_LIGHTS": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DEFAULT_SOUND": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DEFAULT_VIBRATE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DEVICE_BUSY": {
      "description": "Constant for media device busy error.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DISCLOSURE": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to specify a <strong>Disclosure</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DIST_ADHOC": {
      "description": "A special constant that is replaced during the app build with a boolean <code>true</code>/<code>false</code> value, based on whether build target is <code>'dist-adhoc'</code>.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "DIST_STORE": {
      "description": "A special constant that is replaced during the app build with a boolean <code>true</code>/<code>false</code> value, based on whether build target is <code>'dist-appstore'</code> or <code>'dist-playstore'</code>.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "DOCUMENT_FRAGMENT_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.DocumentFragment\">DocumentFragment</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DOCUMENT_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.Document\">Document</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DOCUMENT_TYPE_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.DocumentType\">DocumentType</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DONE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "DOWNLOADS": {
      "description": "Downloads style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EDIT": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify an <strong>Edit</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ELEMENT_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify an\n<a href=\"Titanium.XML.Element\">Element</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ENTITY_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify an\n<a href=\"Titanium.XML.Entity\">Entity</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ENTITY_REFERENCE_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify an\n<a href=\"Titanium.XML.EntityReference\">EntityReference</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ENV_DEV": {
      "description": "Alias for <a href=\"Global.ENV_DEVELOPMENT\">Global.ENV_DEVELOPMENT</a>",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "ENV_DEVELOPMENT": {
      "description": "A special constant that is replaced during the app build with a boolean <code>true</code>/<code>false</code> value, based on whether deploy type is <code>'development'</code>. Typically true for simulator/emulator builds.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "ENV_PROD": {
      "description": "Alias for <a href=\"Global.ENV_PRODUCTION\">Global.ENV_PRODUCTION</a>",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "ENV_PRODUCTION": {
      "description": "A special constant that is replaced during the app build with a boolean <code>true</code>/<code>false</code> value, based on whether deploy type is <code>'production'</code>. Typically true for app store/ad-hoc builds.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "ENV_TEST": {
      "description": "A special constant that is replaced during the app build with a boolean <code>true</code>/<code>false</code> value, based on whether deploy type is <code>'test'</code>. Typically true for device builds.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "EOL": {
      "description": "The operating system-specific end-of-line marker.\n<code>\\n</code> on POSIX\n<code>\\r\\n</code> on Windows",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "ERROR": {
      "description": "State value indicating an error has occurred on the socket.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ERROR_DENIED": {
      "description": "Error code indicating that the user denied access to the location service.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ERROR_HEADING_FAILURE": {
      "description": "Error code indicating that the heading could not be determined.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ERROR_LOCATION_UNKNOWN": {
      "description": "Error code indicating that the user's location could not be determined.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ERROR_NETWORK": {
      "description": "Error code indicating that the network was unavailable.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ERROR_REGION_MONITORING_DELAYED": {
      "description": "Error code indicating that region monitoring is delayed.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ERROR_REGION_MONITORING_DENIED": {
      "description": "Error code indicating that region monitoring is denied.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ERROR_REGION_MONITORING_FAILURE": {
      "description": "Error code indicating a region monitoring failure.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EVENT_ACCESSIBILITY_ANNOUNCEMENT": {
      "description": "Convenience constant for system event &quot;accessibilityannouncement&quot;.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EVENT_ACCESSIBILITY_CHANGED": {
      "description": "Convenience constant for system event &quot;accessibilitychanged&quot;.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EVENT_ACCESSIBILITY_LAYOUT_CHANGED": {
      "description": "Convenience constant for system event &quot;accessibilitylayoutchanged&quot;.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EVENT_ACCESSIBILITY_SCREEN_CHANGED": {
      "description": "Convenience constant for system event &quot;accessibilityscreenchanged&quot;.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTEND_EDGE_ALL": {
      "description": "Specifies that all the edges of the window can extend.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EXTEND_EDGE_BOTTOM": {
      "description": "Specifies that the bottom edge of the window can extend.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EXTEND_EDGE_LEFT": {
      "description": "Specifies that the left edge of the window can extend.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EXTEND_EDGE_NONE": {
      "description": "Specifies that none of the edges of the window can extend.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EXTEND_EDGE_RIGHT": {
      "description": "Specifies that the right edge of the window can extend.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EXTEND_EDGE_TOP": {
      "description": "Specifies that the top edge of the window can extend.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "EXTRA_ALARM_COUNT": {
      "description": "Integer indicating how many pending alarms are being delivered with the intent.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_BCC": {
      "description": "String array containing e-mail addresses for blind carbon copying.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_CC": {
      "description": "String array containing e-mail addresses for carbon copying.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_DATA_REMOVED": {
      "description": "Boolean indicating full uninstall (true) or partial uninstall (false).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_DONT_KILL_APP": {
      "description": "Boolean indicating to restart the application or not.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_EMAIL": {
      "description": "String array containing e-mail addresses.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_INTENT": {
      "description": "An Intent describing the choices you would like shown.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_KEY_EVENT": {
      "description": "A KeyEvent object containing the event that triggered the creation of the Intent it is in.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_PHONE_NUMBER": {
      "description": "String holding the phone number to call or number that was called.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_REPLACING": {
      "description": "Boolean indicating if the package is being replaced.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_SHORTCUT_ICON": {
      "description": "Bitmap icon.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_SHORTCUT_ICON_RESOURCE": {
      "description": "Resource of the shortcut.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_SHORTCUT_INTENT": {
      "description": "Intent of a shortcut.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_SHORTCUT_NAME": {
      "description": "Name of the shortcut.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_STREAM": {
      "description": "URI containing the stream data.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_SUBJECT": {
      "description": "Subject line of a message.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_TEMPLATE": {
      "description": "Initial data to place in a newly created record.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_TEXT": {
      "description": "Corresponds to the Android <code>Intent.EXTRA_TEXT</code> constant.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_TITLE": {
      "description": "Corresponds to the Android <code>Intent.EXTRA_TITLE</code> constant.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EXTRA_UID": {
      "description": "UID of the assigned packaged.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "EventEmitter": {
      "description": "The <code>EventEmitter</code> class is defined and exposed by the <code>events</code> module:\n<pre><code class=\"language-javascript\">const EventEmitter = require('events');\n</code></pre>\nAll <code>EventEmitter</code>s emit the event <code>'newListener'</code> when new listeners are added and <code>'removeListener'</code> when existing listeners are removed.",
      "type": "EventEmitter",
      "readOnly": true,
      "values": []
    },
    "FACE_DOWN": {
      "description": "Constant value for face-down orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FACE_UP": {
      "description": "Constant value for face-up orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FADE": {
      "description": "The inserted or deleted row or rows fades into or out of the table view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FAILED": {
      "description": "Constant for the <code>FAILED</code> status result.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FAST_FORWARD": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Fast Forward</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FAVORITES": {
      "description": "Favorites style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEATURED": {
      "description": "Featured style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_IMPACT_STYLE_HEAVY": {
      "description": "The heavy impact style used as the <code>style</code> argument when creating a <a href=\"Titanium.UI.iOS.FeedbackGenerator\">Titanium.UI.iOS.FeedbackGenerator</a> with the\ntype <a href=\"Titanium.UI.iOS.FEEDBACK_GENERATOR_TYPE_IMPACT\">Titanium.UI.iOS.FEEDBACK_GENERATOR_TYPE_IMPACT</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_IMPACT_STYLE_LIGHT": {
      "description": "The light impact style used as the <code>style</code> argument when creating a <a href=\"Titanium.UI.iOS.FeedbackGenerator\">Titanium.UI.iOS.FeedbackGenerator</a> with the\ntype <a href=\"Titanium.UI.iOS.FEEDBACK_GENERATOR_TYPE_IMPACT\">Titanium.UI.iOS.FEEDBACK_GENERATOR_TYPE_IMPACT</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_IMPACT_STYLE_MEDIUM": {
      "description": "The medium impact style used as the <code>style</code> argument when creating a <a href=\"Titanium.UI.iOS.FeedbackGenerator\">Titanium.UI.iOS.FeedbackGenerator</a> with the\ntype <a href=\"Titanium.UI.iOS.FEEDBACK_GENERATOR_TYPE_IMPACT\">Titanium.UI.iOS.FEEDBACK_GENERATOR_TYPE_IMPACT</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_NOTIFICATION_TYPE_ERROR": {
      "description": "The error notification type used as the argument in <a href=\"Titanium.UI.iOS.FeedbackGenerator.notificationOccurred\">Titanium.UI.iOS.FeedbackGenerator.notificationOccurred</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_NOTIFICATION_TYPE_SUCCESS": {
      "description": "The success notification type used as the argument in <a href=\"Titanium.UI.iOS.FeedbackGenerator.notificationOccurred\">Titanium.UI.iOS.FeedbackGenerator.notificationOccurred</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_NOTIFICATION_TYPE_WARNING": {
      "description": "The warning notification type used as the argument in <a href=\"Titanium.UI.iOS.FeedbackGenerator.notificationOccurred\">Titanium.UI.iOS.FeedbackGenerator.notificationOccurred</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_TYPE_IMPACT": {
      "description": "The feedback type to be used when specifying an impact in <a href=\"Titanium.UI.iOS.FeedbackGenerator\">Titanium.UI.iOS.FeedbackGenerator</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_TYPE_NOTIFICATION": {
      "description": "The feedback type to be used when specifying a received notification in <a href=\"Titanium.UI.iOS.FeedbackGenerator\">Titanium.UI.iOS.FeedbackGenerator</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FEEDBACK_GENERATOR_TYPE_SELECTION": {
      "description": "The feedback type to be used when specifying a selection in <a href=\"Titanium.UI.iOS.FeedbackGenerator\">Titanium.UI.iOS.FeedbackGenerator</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FIELD_TYPE_DOUBLE": {
      "description": "Constant for requesting a column's value returned in double form.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FIELD_TYPE_FLOAT": {
      "description": "Constant for requesting a column's value returned in float form.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FIELD_TYPE_INT": {
      "description": "Constant for requesting a column's value returned in integer form.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FIELD_TYPE_STRING": {
      "description": "Constant for requesting a column's value returned in string form.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FILL": {
      "description": "FILL behavior for UI layout.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "FILL_IN_ACTION": {
      "description": "Not used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FILL_IN_CATEGORIES": {
      "description": "Not used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FILL_IN_COMPONENT": {
      "description": "Not used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FILL_IN_DATA": {
      "description": "Not used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FILL_IN_PACKAGE": {
      "description": "Not used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FIXED_SPACE": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to create a fixed-width blank space\nfor spacing items in toolbars.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_BROUGHT_TO_FRONT": {
      "description": "If activity is already running, bring it to the foreground.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_CLEAR_TOP": {
      "description": "If the activity is present, removes any activities on top of it to make it the foreground activity.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET": {
      "description": "Corresponds to the Android <code>Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET</code> constant.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS": {
      "description": "Exclude the activity from recently launched activities.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_FORWARD_RESULT": {
      "description": "Return result to the original calling activity.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY": {
      "description": "Activity was launched from history.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_MULTIPLE_TASK": {
      "description": "Start the activity as a new task even if it exists.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_NEW_TASK": {
      "description": "Activity will be the start of a new task (collection of activities).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_NO_ANIMATION": {
      "description": "Prevent transition animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_NO_HISTORY": {
      "description": "Do not keep the activity in the history stack.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_NO_USER_ACTION": {
      "description": "Disables the <a href=\"https://developer.android.com/reference/android/app/Activity.html#onUserLeaveHint()\">onUserLeaveHint()</a> callback.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_PREVIOUS_IS_TOP": {
      "description": "Corresponds to the Android <code>Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP</code> constant.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_REORDER_TO_FRONT": {
      "description": "If the activity already exists, place it at the top of the history stack.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED": {
      "description": "If the task already exists, resets the task to its initial state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ACTIVITY_SINGLE_TOP": {
      "description": "Do not launch the activity if it is already running.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_AUTO_CANCEL": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_CANCEL_CURRENT": {
      "description": "Cancel the current pending intent before creating a new one.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_DEBUG_LOG_RESOLUTION": {
      "description": "Enable a log message to print out the resolution of the intent.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_FROM_BACKGROUND": {
      "description": "Indicates the intent is coming from a background operation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_GRANT_READ_URI_PERMISSION": {
      "description": "Grant read permission on the URI in the Intent's data or clipboard.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_GRANT_WRITE_URI_PERMISSION": {
      "description": "Grants write permission on the URI in the Intent's data or clipboard.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_IMMUTABLE": {
      "description": "Pending intent should be immutable.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_INSISTENT": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_LAYOUT_NO_LIMITS": {
      "description": "Flag allowing window to extend into the status bar and navigation bar.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_MUTABLE": {
      "description": "Pending intent should be mutable.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_NO_CLEAR": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_NO_CREATE": {
      "description": "If the current intent does not exist, do not create it.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ONE_SHOT": {
      "description": "The pending intent can only be used once.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ONGOING_EVENT": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_ONLY_ALERT_ONCE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_RECEIVER_REGISTERED_ONLY": {
      "description": "When sending a broadcast, only registered receivers will be called.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_SHOW_LIGHTS": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_TRANSLUCENT_NAVIGATION": {
      "description": "Window flag which makes the Android system's navigation bar semi-transparent.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_TRANSLUCENT_STATUS": {
      "description": "Window flag which makes the Android system's top status bar semi-transparent.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLAG_UPDATE_CURRENT": {
      "description": "If the current pending intent already exists, only update the current intent's extra data.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLEXIBLE_SPACE": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to create a flexible blank space\nfor spacing items in toolbars.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLIP_FROM_BOTTOM": {
      "description": "Flip from bottom to top during a transition animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLIP_FROM_LEFT": {
      "description": "Flip from left to right during a transition animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLIP_FROM_RIGHT": {
      "description": "Flip from right to left during a transition animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FLIP_FROM_TOP": {
      "description": "Flip from top to bottom during a transition animation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_CAMERA": {
      "description": "Allows the camera to be used while the app is in the background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE": {
      "description": "Allows connecting to Android Auto, bluetooth, TV or other devices while app is in the background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_LOCATION": {
      "description": "Allows accessing location from the GPS, map, etc. while the app is in the background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_MANIFEST": {
      "description": "A special value indicates to use all types set in manifest file.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK": {
      "description": "Allows music, video, news or other media playback while the app is in the background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION": {
      "description": "Allows managing a media projection session for screen recording or taking screenshots\nwhile app is in the background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_MICROPHONE": {
      "description": "Allows the microphone to be used while the app is in the background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_NONE": {
      "description": "The default foreground service type.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "FOREGROUND_SERVICE_TYPE_PHONE_CALL": {
      "description": "Allows ongoing phone call or video conferencing access while the app is in the background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "F_OK": {
      "description": "Flag indicating that the file is visible to the calling process. This is useful for determining if a file exists, but says nothing about <code>rwx</code> permissions. Default if no mode is specified.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "GRAVITY_AXIS_CLIP": {
      "description": "Raw bit controlling whether the right/bottom edge is clipped to its container, based on the gravity direction being applied.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_AXIS_PULL_AFTER": {
      "description": "Raw bit controlling how the right/bottom edge is placed.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_AXIS_PULL_BEFORE": {
      "description": "Raw bit controlling how the left/top edge is placed.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_AXIS_SPECIFIED": {
      "description": "Raw bit indicating the gravity for an axis has been specified.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_AXIS_X_SHIFT": {
      "description": "Bits defining the horizontal axis.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_AXIS_Y_SHIFT": {
      "description": "Bits defining the vertical axis.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_BOTTOM": {
      "description": "Push object to the bottom of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_CENTER": {
      "description": "Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_CENTER_HORIZONTAL": {
      "description": "Place object in the horizontal center of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_CENTER_VERTICAL": {
      "description": "Place object in the vertical center of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_CLIP_HORIZONTAL": {
      "description": "Flag to clip the edges of the object to its container along the horizontal axis.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_CLIP_VERTICAL": {
      "description": "Flag to clip the edges of the object to its container along the vertical axis.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_DISPLAY_CLIP_HORIZONTAL": {
      "description": "Special constant to enable clipping to an overall display along the horizontal dimension.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_DISPLAY_CLIP_VERTICAL": {
      "description": "Special constant to enable clipping to an overall display along the vertical dimension.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_END": {
      "description": "Push object to x-axis position at the end of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_FILL": {
      "description": "Grow the horizontal and vertical size of the object if needed so it completely fills its container.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_FILL_HORIZONTAL": {
      "description": "Grow the horizontal size of the object if needed so it completely fills its container.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_FILL_VERTICAL": {
      "description": "Grow the vertical size of the object if needed so it completely fills its container.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_HORIZONTAL_GRAVITY_MASK": {
      "description": "Binary mask to get the absolute horizontal gravity of a gravity.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_LEFT": {
      "description": "Push object to the left of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_NO_GRAVITY": {
      "description": "Constant indicating that no gravity has been set",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_RELATIVE_HORIZONTAL_GRAVITY_MASK": {
      "description": "Binary mask for the horizontal gravity and script specific direction bit.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_RELATIVE_LAYOUT_DIRECTION": {
      "description": "Raw bit controlling whether the layout direction is relative or not (GRAVITY_START/GRAVITY_END instead of absolute GRAVITY_LEFT/GRAVITY_RIGHT).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_RIGHT": {
      "description": "Push object to the right of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_START": {
      "description": "Push object to x-axis position at the start of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_TOP": {
      "description": "Push object to the top of its container, not changing its size.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAVITY_VERTICAL_GRAVITY_MASK": {
      "description": "Binary mask to get the vertical gravity of a gravity.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GRAY": {
      "description": "Gray-colored status bar style. <strong>Deprecated since 9.1.0. Use <a href=\"Titanium.UI.iOS.StatusBar.DEFAULT\">Titanium.UI.iOS.StatusBar.DEFAULT</a> instead.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GREY": {
      "description": "Gray-colored status bar style. <strong>Deprecated since 9.1.0. Use <a href=\"Titanium.UI.iOS.StatusBar.DEFAULT\">Titanium.UI.iOS.StatusBar.DEFAULT</a> instead.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "GROUPED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HEADERS_RECEIVED": {
      "description": "Ready state constant indicating that response headers have been received.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HIDDEN_BEHAVIOR_GONE": {
      "description": "Release free space when hiding an object.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HIDDEN_BEHAVIOR_INVISIBLE": {
      "description": "Keeps free space when hiding an object.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HINT_TYPE_ANIMATED": {
      "description": "Use when creating a TextField to specify the hintType as animated.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HINT_TYPE_STATIC": {
      "description": "Use when creating a TextField to specify the hintType as static.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HISTORY": {
      "description": "History style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HYPHEN_FULL": {
      "description": "Standard amount of hyphenation, useful for running text and for screens with limited space for text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HYPHEN_FULL_FAST": {
      "description": "Same to hyphenationFrequency=&quot;full&quot; but using faster algorithm for measuring hyphenation break points.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HYPHEN_NONE": {
      "description": "No hyphenation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HYPHEN_NORMAL": {
      "description": "Less frequent hyphenation, useful for informal use cases, such as chat messages.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "HYPHEN_NORMAL_FAST": {
      "description": "Same to hyphenationFrequency=&quot;normal&quot; but using faster algorithm for measuring hyphenation break points.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMAGE_SCALING_ASPECT_FILL": {
      "description": "Crops the image proportionally causing its content to be clipped either horizontally or vertically.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMAGE_SCALING_ASPECT_FIT": {
      "description": "Letterbox or pillarbox scales the image proportionally to fit the container.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMAGE_SCALING_AUTO": {
      "description": "Scales the image depending on how the view container is sized.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMAGE_SCALING_FILL": {
      "description": "Stretches the image disproportionally to completely fill the container's bounds.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMAGE_SCALING_NONE": {
      "description": "Disables scaling and displays the image as-is.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMPORTANCE_DEFAULT": {
      "description": "Used with <a href=\"Titanium.Android.NotificationChannel\">NotificationChannel</a> to specify an importance level.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMPORTANCE_HIGH": {
      "description": "Used with <a href=\"Titanium.Android.NotificationChannel\">NotificationChannel</a> to specify an importance level.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMPORTANCE_LOW": {
      "description": "Used with <a href=\"Titanium.Android.NotificationChannel\">NotificationChannel</a> to specify an importance level.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMPORTANCE_MAX": {
      "description": "Used with <a href=\"Titanium.Android.NotificationChannel\">NotificationChannel</a> to specify an importance level.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMPORTANCE_MIN": {
      "description": "Used with <a href=\"Titanium.Android.NotificationChannel\">NotificationChannel</a> to specify an importance level.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMPORTANCE_NONE": {
      "description": "Used with <a href=\"Titanium.Android.NotificationChannel\">NotificationChannel</a> to specify an importance level.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "IMPORTANCE_UNSPECIFIED": {
      "description": "Used with <a href=\"Titanium.Android.NotificationChannel\">NotificationChannel</a> to specify an importance level.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INFO_DARK": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to specify a dark-colored <strong>Info</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INFO_LIGHT": {
      "description": "Use with <a href=\"Titanium.UI.Button.style\">Button.style</a> to specify a light-colored <strong>Info</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INITIALIZED": {
      "description": "State value representing an initialized socket.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INJECTION_TIME_DOCUMENT_END": {
      "description": "Inject the script after the document finishes loading, but before other subresources finish loading.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INJECTION_TIME_DOCUMENT_START": {
      "description": "Inject the script after the document element is created, but before any other content is loaded.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BORDERSTYLE_BEZEL": {
      "description": "Use a bezel-style border on the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BORDERSTYLE_FILLED": {
      "description": "Show an enclosed border with a filled background on the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BORDERSTYLE_LINE": {
      "description": "Use a simple line border on the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BORDERSTYLE_NONE": {
      "description": "Use no border on the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BORDERSTYLE_ROUNDED": {
      "description": "Use a rounded-rectangle border on the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BORDERSTYLE_UNDERLINED": {
      "description": "Show an underline instead of a border around the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BUTTONMODE_ALWAYS": {
      "description": "Always show buttons on the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BUTTONMODE_NEVER": {
      "description": "Never show buttons on the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BUTTONMODE_ONBLUR": {
      "description": "Show buttons on the input field when it loses focus.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_BUTTONMODE_ONFOCUS": {
      "description": "Show buttons on the input field when it gains focus.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_TYPE_CLASS_NUMBER": {
      "description": "Use a keyboard with a number pad only, with the pad keyboard layout. Accepts only numbers.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INPUT_TYPE_CLASS_TEXT": {
      "description": "Use an ASCII keyboard, with the standard keyboard layout.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INSET_GROUPED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "INSPECT_MAX_BYTES": {
      "description": "The maximum number of bytes that will be returned when <code>buf.inspect()</code> is called. This can be overridden by user modules.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "IOS_FILE_PROTECTION_COMPLETE": {
      "description": "Constant used to set protection key to NSFileProtectionComplete in file attributes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "IOS_FILE_PROTECTION_COMPLETE_UNLESS_OPEN": {
      "description": "Constant used to set protection key to NSFileProtectionCompleteUnlessOpen in file attributes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "IOS_FILE_PROTECTION_COMPLETE_UNTIL_FIRST_USER_AUTHENTICATION": {
      "description": "Constant used to set protection key to NSFileProtectionCompleteUntilFirstUserAuthentication in file attributes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "IOS_FILE_PROTECTION_NONE": {
      "description": "Constant used to set protection key to NSFileProtectionNone in file attributes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_APPEARANCE_DARK": {
      "description": "Use the platform-specific dark keyboard appearance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_APPEARANCE_DEFAULT": {
      "description": "Use the platform-specific default keyboard appearance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_APPEARANCE_LIGHT": {
      "description": "Use the platform-specific light keyboard appearance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_DISMISS_MODE_INTERACTIVE": {
      "description": "Use with <a href=\"Titanium.UI.ScrollView.keyboardDismissMode\">Titanium.UI.ScrollView.keyboardDismissMode</a> to control keyboard dismiss mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_DISMISS_MODE_NONE": {
      "description": "Use with <a href=\"Titanium.UI.ScrollView.keyboardDismissMode\">Titanium.UI.ScrollView.keyboardDismissMode</a> to control keyboard dismiss mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_DISMISS_MODE_ON_DRAG": {
      "description": "Use with <a href=\"Titanium.UI.ScrollView.keyboardDismissMode\">Titanium.UI.ScrollView.keyboardDismissMode</a> to control keyboard dismiss mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_ASCII": {
      "description": "Use a keyboard supporting all characters except emoji. Defaults to English letters layout on iOS.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_DECIMAL_PAD": {
      "description": "Use a number pad keyboard layout showing only numbers, decimal separator, and sign character.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_DEFAULT": {
      "description": "Use the default keyboard, depending on the platform.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_EMAIL": {
      "description": "Use a keyboard suitable for composing email, with the standard keyboard layout.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_NAMEPHONE_PAD": {
      "description": "Use a keyboard suitable for entering names and phone numbers, with the pad keyboard layout.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_NUMBERS_PUNCTUATION": {
      "description": "Use a keyboard supporting all characters except emoji, defaulting to numbers layout on iOS.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_NUMBER_PAD": {
      "description": "Use a number pad keyboard layout only showing numbers for entering positive integers.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_PHONE_PAD": {
      "description": "Use a keyboard with a phone-style number pad, with the pad keyboard layout.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_TWITTER": {
      "description": "Use a keyboard optimized for twitter text entry, with easy access to the @ and",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_URL": {
      "description": "Use a keyboard optimized for entering URLs, with the standard keyboard layout.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "KEYBOARD_TYPE_WEBSEARCH": {
      "description": "Use a keyboard optimized for web search terms and URL entry.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LANDSCAPE_LEFT": {
      "description": "Standard landscape orientation (home button on left).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LANDSCAPE_RIGHT": {
      "description": "Reverse landscape orientation (home button on right).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LARGE_TITLE_DISPLAY_MODE_ALWAYS": {
      "description": "Always use a larger title when this item is top most.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LARGE_TITLE_DISPLAY_MODE_AUTOMATIC": {
      "description": "Automatically use the large out-of-line title based on the state of the p\nrevious item in the navigation bar.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LARGE_TITLE_DISPLAY_MODE_NEVER": {
      "description": "Never use a larger title when this item is top most.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LAYER_TYPE_HARDWARE": {
      "description": "Hardware rendering mode",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LAYER_TYPE_NONE": {
      "description": "Default rendering mode",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LAYER_TYPE_SOFTWARE": {
      "description": "Software rendering mode",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LEFT": {
      "description": "The inserted row or rows slides in from the left; the deleted row or rows slides out to the\nleft.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LENGTH_INDEFINITE": {
      "description": "Use with <code>length</code> to specify the display time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LENGTH_LONG": {
      "description": "Use with <code>length</code> to specify the display time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LENGTH_SHORT": {
      "description": "Use with <code>length</code> to specify the display time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIGHT_CONTENT": {
      "description": "Status bar style to use with dark backgrounds.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LISTENING": {
      "description": "State value representing a socket that is listening for connections.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ACCESSORY_TYPE_CHECKMARK": {
      "description": "Displays a checkmark on the right side of an item in a list view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ACCESSORY_TYPE_DETAIL": {
      "description": "Displays a detail disclosure button on the right side of an item in a list view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ACCESSORY_TYPE_DISCLOSURE": {
      "description": "Displays a disclosure indicator on the right side of an item in a list view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ACCESSORY_TYPE_NONE": {
      "description": "Do not display anything on the right side of an item in a list view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ITEM_TEMPLATE_CONTACTS": {
      "description": "A built-in style for an item with a right-aligned title label on the left side of the cell,\nwhich is next to a left-aligned subtitle label.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ITEM_TEMPLATE_DEFAULT": {
      "description": "A built-in style for an item with an image view and left-aligned title label.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ITEM_TEMPLATE_SETTINGS": {
      "description": "A built-in style for a item with an image view; a left-aligned title label; and a\nright-aligned subtitle label.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIST_ITEM_TEMPLATE_SUBTITLE": {
      "description": "A built-in style for an item with an image view; a black, left-aligned title label across the\ntop of the cell and a subtitle label below it.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LITTLE_ENDIAN": {
      "description": "Little endian byte order -- that is, the least significant byte first.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIVEPHOTO_BADGE_OPTIONS_LIVE_OFF": {
      "description": "To indicate that the Live Photo aspect is turned off and it will\nbe treated as a still (e.g. for sharing).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIVEPHOTO_BADGE_OPTIONS_OVER_CONTENT": {
      "description": "Include treatments so this image can be shown directly over the content\nof the Live Photo.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIVEPHOTO_PLAYBACK_STYLE_FULL": {
      "description": "Plays back the entire motion and sound content of the Live Photo, including transition\neffects at the start and end.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LIVEPHOTO_PLAYBACK_STYLE_HINT": {
      "description": "Plays back only a brief section of the motion content of the Live Photo, without sound.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LOADING": {
      "description": "Ready state constant indicating that response data is being received from the remote server.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LOCK_MODE_LOCKED_CLOSED": {
      "description": "Use with <a href=\"Titanium.UI.Android.DrawerLayout.drawerLockMode\">DrawerLayout.drawerLockMode</a> to specify the drawer is locked closed.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LOCK_MODE_LOCKED_OPEN": {
      "description": "Use with <a href=\"Titanium.UI.Android.DrawerLayout.drawerLockMode\">DrawerLayout.drawerLockMode</a> to specify the drawer is locked opened.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LOCK_MODE_UNDEFINED": {
      "description": "Use with <a href=\"Titanium.UI.Android.DrawerLayout.drawerLockMode\">DrawerLayout.drawerLockMode</a> to specify the drawer is reset to default lock state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LOCK_MODE_UNLOCKED": {
      "description": "Use with <a href=\"Titanium.UI.Android.DrawerLayout.drawerLockMode\">DrawerLayout.drawerLockMode</a> to specify the drawer is unlocked.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "LOGIN_AND_PASSWORD_INPUT": {
      "description": "An alert dialog that allows the user to enter login identifier and password.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MEDIA_TYPE_LIVEPHOTO": {
      "description": "Media type constant for live photo media.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "MEDIA_TYPE_PHOTO": {
      "description": "Media type constant for photo media.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "MEDIA_TYPE_VIDEO": {
      "description": "Media type constant for video media.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "MENU_POPUP_ARROW_DIRECTION_DEFAULT": {
      "description": "An arrow that is automatically aligned.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MENU_POPUP_ARROW_DIRECTION_DOWN": {
      "description": "An arrow that points downward.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MENU_POPUP_ARROW_DIRECTION_LEFT": {
      "description": "An arrow that points toward the left.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MENU_POPUP_ARROW_DIRECTION_RIGHT": {
      "description": "An arrow that points toward the right.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MENU_POPUP_ARROW_DIRECTION_UP": {
      "description": "An arrow that points upward.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "METHOD_ALERT": {
      "description": "Reminder alert delivery method.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "METHOD_DEFAULT": {
      "description": "Reminder default delivery method.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "METHOD_EMAIL": {
      "description": "Reminder email delivery method.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "METHOD_SMS": {
      "description": "Reminder SMS delivery method.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MIDDLE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODAL_PRESENTATION_CURRENT_CONTEXT": {
      "description": "View presented with the same style as its parent window.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "MODAL_PRESENTATION_FORMSHEET": {
      "description": "Window width and height are smaller than those of the screen and the view is centered on\nthe screen.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODAL_PRESENTATION_FULLSCREEN": {
      "description": "Window covers the screen.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODAL_PRESENTATION_OVER_CURRENT_CONTEXT": {
      "description": "View presented over its parent window.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN": {
      "description": "Presented view covers the screen.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "MODAL_PRESENTATION_PAGESHEET": {
      "description": "Window height is the height of the screen and width is equal to screen width in a portrait\norientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODAL_TRANSITION_STYLE_COVER_VERTICAL": {
      "description": "When the window is presented, its view slides up from the bottom of the screen. On dismissal,\nthe view slides back down (default.)",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODAL_TRANSITION_STYLE_CROSS_DISSOLVE": {
      "description": "When the window is presented, the current view fades out while the new view fades in at the\nsame time. On dismissal, a similar type of cross-fade is used to return to the original view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL": {
      "description": "When the window is presented, the current view initiates a horizontal 3D flip from\nright-to-left, resulting in the revealing of the new view as if it were on the back of the\nprevious view. On dismissal, the flip occurs from left-to-right, returning to the original\nview.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODAL_TRANSITION_STYLE_PARTIAL_CURL": {
      "description": "When the window is presented, one corner of the current view curls up to reveal the modal\nview underneath. On dismissal, the curled up page unfurls itself back on top of the modal\nview.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODE_APPEND": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODE_READ": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MODE_WRITE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MORE": {
      "description": "More style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MOST_RECENT": {
      "description": "Most recent style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MOST_VIEWED": {
      "description": "Most viewed style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_ALBUM": {
      "description": "Constant for grouping query results by album.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_ALBUM_ARTIST": {
      "description": "Constant for grouping query results by album and artist.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_ARTIST": {
      "description": "Constant for grouping query results by artist.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_COMPOSER": {
      "description": "Constant for grouping query results by composer.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_GENRE": {
      "description": "Constant for grouping query results by genre.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_PLAYLIST": {
      "description": "Constant for grouping query results by playlist.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_PODCAST_TITLE": {
      "description": "Constant for grouping query results by podcast title.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_GROUP_TITLE": {
      "description": "Constant for grouping query results by title.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_TYPE_ALL": {
      "description": "Music library media containing any type of content.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_TYPE_ANY_AUDIO": {
      "description": "Music library media containing any type of audio content.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_TYPE_AUDIOBOOK": {
      "description": "Music library media containing audiobook content.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_TYPE_MUSIC": {
      "description": "Music library media containing music content.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_MEDIA_TYPE_PODCAST": {
      "description": "Music library media containing podcast content.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_REPEAT_ALL": {
      "description": "Constant for &quot;Repeat All&quot; setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_REPEAT_DEFAULT": {
      "description": "Constant for user's default repeat setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_REPEAT_NONE": {
      "description": "Constant for &quot;No Repeat&quot; setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_REPEAT_ONE": {
      "description": "Constant for &quot;Repeat one item&quot; setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_SHUFFLE_ALBUMS": {
      "description": "Constant for shuffling complete albums setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_SHUFFLE_DEFAULT": {
      "description": "Constant for user's default shuffle setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_SHUFFLE_NONE": {
      "description": "Constant for &quot;no shuffle&quot; setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_SHUFFLE_SONGS": {
      "description": "Constant for shuffling songs setting.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_STATE_INTERRUPTED": {
      "description": "Constant for interrupted state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_STATE_PAUSED": {
      "description": "Constant for paused state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_STATE_PLAYING": {
      "description": "Constant for playing state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_STATE_SEEK_BACKWARD": {
      "description": "Constant for backward seek state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_STATE_SEEK_FORWARD": {
      "description": "Constant for forward seek state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "MUSIC_PLAYER_STATE_STOPPED": {
      "description": "Constant for stopped state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NAVIGATION_MODE_STANDARD": {
      "description": "Standard Action Bar navigation mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NAVIGATION_MODE_TABS": {
      "description": "Action Bar tab navigation mode.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NETWORK_LAN": {
      "description": "A <a href=\"Titanium.Network.networkType\">networkType</a> value indicating that the device is\ncommunicating over a local-area network.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NETWORK_MOBILE": {
      "description": "A <a href=\"Titanium.Network.networkType\">networkType</a> value indicating that the device is\ncommunicating over a mobile network.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NETWORK_NONE": {
      "description": "A <a href=\"Titanium.Network.networkType\">networkType</a> value indicating that no\nnetwork is available.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NETWORK_UNKNOWN": {
      "description": "A <a href=\"Titanium.Network.networkType\">networkType</a> value indicating that the\ncurrent network type is unknown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NETWORK_WIFI": {
      "description": "A <a href=\"Titanium.Network.networkType\">networkType</a> value indicating that the\ndevice is communicating over a WiFi network.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NONE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NOTATION_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.Notation\">Notation</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NOTIFICATION_DURATION_LONG": {
      "description": "Specifies a long duration for an Android Toast notification (<a href=\"Titanium.UI.Notification\">Titanium.UI.Notification</a>).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NOTIFICATION_DURATION_SHORT": {
      "description": "Specifies a short duration for an Android Toast notification (<a href=\"Titanium.UI.Notification\">Titanium.UI.Notification</a>).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NOTIFICATION_TYPE_ALERT": {
      "description": "Constant value for an Alert style push notification.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NOTIFICATION_TYPE_BADGE": {
      "description": "Constant value for a Badge style push notification.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NOTIFICATION_TYPE_NEWSSTAND": {
      "description": "Constant value for a Newsstand style push notification. Only available on iOS5 and later",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NOTIFICATION_TYPE_SOUND": {
      "description": "Constant value for a Sound style push notification.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NO_CAMERA": {
      "description": "Constant for media no camera error.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NO_FOCUS": {
      "description": "Constant for camera didn't focus when taking a trying to take a picture.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "NO_VIDEO": {
      "description": "Constant for media no video error.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "OPENED": {
      "description": "Ready state constant indicating that the connection has been opened, but the request has\nnot yet been sent.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ORGANIZE": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify an <strong>Organize</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "OS_ANDROID": {
      "description": "A special constant that is replaced during the app build with a boolean <code>true</code>/<code>false</code> value.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "OS_IOS": {
      "description": "A special constant that is replaced during the app build with a boolean <code>true</code>/<code>false</code> value.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "OS_VERSION_MAJOR": {
      "description": "The operation system's major version number.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "OS_VERSION_MINOR": {
      "description": "The operating system's minor version number.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "OS_VERSION_PATCH": {
      "description": "The operating system's patch version number.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "OVER_SCROLL_ALWAYS": {
      "description": "Always allow a user to over-scroll this view, provided it is a view that can scroll.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "OVER_SCROLL_IF_CONTENT_SCROLLS": {
      "description": "Allow a user to over-scroll this view only if the content is large enough to meaningfully scroll, provided it is a view that can scroll.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "OVER_SCROLL_NEVER": {
      "description": "Never allow a user to over-scroll this view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "O_APPEND": {
      "description": "Flag indicating that data will be appended to the end of the file.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_CREAT": {
      "description": "Flag indicating to create the file if it does not already exist.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_DIRECTORY": {
      "description": "Flag indicating that the open should fail if the path is not a directory.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_DSYNC": {
      "description": "Flag indicating that the file is opened for synchronized I/O with write operations waiting for data integrity.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_EXCL": {
      "description": "Flag indicating that opening a file should fail if the <code>O_CREAT</code> flag is set and the file already exists.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_NOCTTY": {
      "description": "Flag indicating that if path identifies a terminal device, opening the path shall not cause that terminal to become the controlling terminal for the process (if the process does not already have one).",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_NOFOLLOW": {
      "description": "Flag indicating that the open should fail if the path is a symbolic link.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_NONBLOCK": {
      "description": "Flag indicating to open the file in nonblocking mode when possible.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_RDONLY": {
      "description": "Flag indicating to open a file for read-only access.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_RDWR": {
      "description": "Flag indicating to open a file for read-write access.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_SYMLINK": {
      "description": "Flag indicating to open the symbolic link itself rather than the resource it is pointing to.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_SYNC": {
      "description": "Flag indicating that the file is opened for synchronized I/O with write operations waiting for file integrity.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_TRUNC": {
      "description": "Flag indicating that if the file exists and is a regular file, and the file is opened successfully for write access, its length shall be truncated to zero.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "O_WRONLY": {
      "description": "Flag indicating to open a file for write-only access.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "PAUSE": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Pause</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PDF_PAGE_DIN_A1": {
      "description": "PDF paper size",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PDF_PAGE_DIN_A2": {
      "description": "PDF paper size",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PDF_PAGE_DIN_A3": {
      "description": "PDF paper size",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PDF_PAGE_DIN_A4": {
      "description": "PDF paper size",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PDF_PAGE_DIN_A5": {
      "description": "PDF paper size",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PENDING_INTENT_FOR_ACTIVITY": {
      "description": "Not used. <strong>Removed in 10.0.0.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PENDING_INTENT_FOR_BROADCAST": {
      "description": "Not used. <strong>Removed in 10.0.0.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PENDING_INTENT_FOR_SERVICE": {
      "description": "Not used. <strong>Removed in 10.0.0.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PENDING_INTENT_MAX_VALUE": {
      "description": "Not used. <strong>Removed in 10.0.0.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PHYSICAL_SIZE_CATEGORY_LARGE": {
      "description": "Constant to indicate that the physical size category of the current device/emulator is large",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PHYSICAL_SIZE_CATEGORY_NORMAL": {
      "description": "Constant to indicate that the physical size category of the current device/emulator is normal",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PHYSICAL_SIZE_CATEGORY_SMALL": {
      "description": "Constant to indicate that the physical size category of the current device/emulator is small",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PHYSICAL_SIZE_CATEGORY_UNDEFINED": {
      "description": "Constant to indicate that the physical size category of the current device/emulator is undefined",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PHYSICAL_SIZE_CATEGORY_XLARGE": {
      "description": "Constant to indicate that the physical size category of the current device/emulator is extra large",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PICKER_TYPE_COUNT_DOWN_TIMER": {
      "description": "Use a picker with a countdown timer appearance, showing hours and minutes.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PICKER_TYPE_DATE": {
      "description": "Use a date picker.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PICKER_TYPE_DATE_AND_TIME": {
      "description": "Use a date and time picker.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PICKER_TYPE_PLAIN": {
      "description": "Use a plain picker (for values other than date or time).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PICKER_TYPE_TIME": {
      "description": "Use a time picker.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_A_8": {
      "description": "Android A_8 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_LA_88": {
      "description": "Android LA_88 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_L_8": {
      "description": "Android L_8 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_OPAQUE": {
      "description": "Android OPAQUE pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_RGBA_4444": {
      "description": "Android RGBA_4444 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_RGBA_5551": {
      "description": "Android RGBA_5551 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_RGBA_8888": {
      "description": "Android RGBA_8888 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_RGBX_8888": {
      "description": "Android RGBX_8888 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_RGB_332": {
      "description": "Android RGB_332 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_RGB_565": {
      "description": "Android RGB_565 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_RGB_888": {
      "description": "Android RGB_888 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_TRANSLUCENT": {
      "description": "Android TRANSLUCENT pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_TRANSPARENT": {
      "description": "Android A_8 pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format can\nimprove image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PIXEL_FORMAT_UNKNOWN": {
      "description": "Android UNKNOWN pixel format for <a href=\"Titanium.UI.Window\">Titanium.UI.Window</a>. Selecting the correct pixel format\ncan improve image clarity and performance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PLAIN": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PLAIN_TEXT_INPUT": {
      "description": "An alert dialog that allows the user to enter text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PLAY": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Play</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "POPOVER_ARROW_DIRECTION_ANY": {
      "description": "An arrow that points in any direction.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "POPOVER_ARROW_DIRECTION_DOWN": {
      "description": "An arrow that points downward.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "POPOVER_ARROW_DIRECTION_LEFT": {
      "description": "An arrow that points toward the left.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "POPOVER_ARROW_DIRECTION_RIGHT": {
      "description": "An arrow that points toward the right.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "POPOVER_ARROW_DIRECTION_UNKNOWN": {
      "description": "The status of the arrow is currently unknown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "POPOVER_ARROW_DIRECTION_UP": {
      "description": "An arrow that points upward.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PORTRAIT": {
      "description": "Orientation constant for portrait mode orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PREVIEW_ACTION_STYLE_DEFAULT": {
      "description": "The normal style for preview actions.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PREVIEW_ACTION_STYLE_DESTRUCTIVE": {
      "description": "The destructive style for preview actions.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PREVIEW_ACTION_STYLE_SELECTED": {
      "description": "The selected style for preview actions.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PRIORITY_ABOVE_NORMAL": {
      "description": "The process scheduling priority above <code>PRIORITY_NORMAL</code> and below <code>PRIORITY_HIGH</code>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "PRIORITY_BELOW_NORMAL": {
      "description": "The process scheduling priority above <code>PRIORITY_LOW</code> and below <code>PRIORITY_NORMAL</code>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "PRIORITY_DEFAULT": {
      "description": "Default priority if it does not fit into another priority category.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PRIORITY_HIGH": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "PRIORITY_HIGHEST": {
      "description": "The highest process scheduling priority.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "PRIORITY_LOW": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "PRIORITY_MAX": {
      "description": "Use for urgent or time-critical notifications, for example, turn-by-turn directions or\nemergency alerts.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PRIORITY_MIN": {
      "description": "Use for expired events.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PRIORITY_NORMAL": {
      "description": "The default process scheduling priority.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "PROCESSING_INSTRUCTION_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.ProcessingInstruction\">ProcessingInstruction</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PROGRESS_INDICATOR_DETERMINANT": {
      "description": "Used with the <a href=\"Titanium.UI.Android.ProgressIndicator.type\">Titanium.UI.Android.ProgressIndicator.type</a> property to indicate an ongoing\nactivity of determinate length.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PROGRESS_INDICATOR_DIALOG": {
      "description": "Display <a href=\"Titanium.UI.Android.ProgressIndicator\">Titanium.UI.Android.ProgressIndicator</a> as a modal dialog. (default)",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PROGRESS_INDICATOR_INDETERMINANT": {
      "description": "Used with the <a href=\"Titanium.UI.Android.ProgressIndicator.type\">Titanium.UI.Android.ProgressIndicator.type</a> property to indicate an ongoing\nactivity of indeterminate length. (default)",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PROGRESS_INDICATOR_STATUS_BAR": {
      "description": "Display <a href=\"Titanium.UI.Android.ProgressIndicator\">Titanium.UI.Android.ProgressIndicator</a> as a horizontal progress bar in the title of\nthe window.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PROGRESS_UNKNOWN": {
      "description": "Constant value specifying that the progress of a download can not be calculated.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PROVIDER_GPS": {
      "description": "Specifies the GPS location provider.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "PROVIDER_NETWORK": {
      "description": "Specifies the network location provider.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "PROVIDER_PASSIVE": {
      "description": "Specifies the passive location provider.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "PUSH_MODE_CONTINUOUS": {
      "description": "Use with <a href=\"Titanium.UI.iOS.PushBehavior.pushMode\">Titanium.UI.iOS.PushBehavior.pushMode</a> to specifiy a continuous force.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "PUSH_MODE_INSTANTANEOUS": {
      "description": "Use with <a href=\"Titanium.UI.iOS.PushBehavior.pushMode\">Titanium.UI.iOS.PushBehavior.pushMode</a> to specifiy an instantaneous force.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_640x480": {
      "description": "Media type constant for medium-quality video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_FHD": {
      "description": "Media type constant for FHD video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_HD": {
      "description": "Media type constant for HD video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_HIGH": {
      "description": "Media type constant for high-quality video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_IFRAME_1280x720": {
      "description": "Media type constant for medium-quality video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_IFRAME_960x540": {
      "description": "Media type constant for medium-quality video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_LOW": {
      "description": "Media type constant for low-quality video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_MEDIUM": {
      "description": "Media type constant for medium-quality video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_SD": {
      "description": "Media type constant for SD video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "QUALITY_UHD": {
      "description": "Media type constant for UHD video recording.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "R": {
      "description": "",
      "type": "Titanium.Android.R",
      "readOnly": false,
      "values": []
    },
    "RECENTS": {
      "description": "Recents style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RECURRENCEFREQUENCY_DAILY": {
      "description": "Indicates a daily recurrence rule for a events reccurance frequency.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RECURRENCEFREQUENCY_MONTHLY": {
      "description": "Indicates a monthly recurrence rule for a events reccurance frequency.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RECURRENCEFREQUENCY_WEEKLY": {
      "description": "Indicates a weekly recurrence rule for a events reccurance frequency.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RECURRENCEFREQUENCY_YEARLY": {
      "description": "Indicates a yearly recurrence rule for a events reccurance frequency.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "REFRESH": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Refresh</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RELATIONSHIP_ATTENDEE": {
      "description": "Relationship is attendee.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RELATIONSHIP_NONE": {
      "description": "There is no relationship.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RELATIONSHIP_ORGANIZER": {
      "description": "Attendee is organizer.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RELATIONSHIP_PERFORMER": {
      "description": "Attendee is performer.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RELATIONSHIP_SPEAKER": {
      "description": "Attendee is speaker.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RELATIONSHIP_UNKNOWN": {
      "description": "Relationship is unknown.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "REPLY": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Reply</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RESULT_CANCELED": {
      "description": "Used with <a href=\"Titanium.Android.Activity.setResult\">setResult</a> to specify that\nan activity was canceled.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RESULT_FIRST_USER": {
      "description": "Used with <a href=\"Titanium.Android.Activity.setResult\">setResult</a> to specify a\nuser-defined result.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RESULT_OK": {
      "description": "Used with <a href=\"Titanium.Android.Activity.setResult\">setResult</a> to specify that\nan activity succeeded.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_CONTINUE": {
      "description": "Set the return key text to &quot;Continue&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_DEFAULT": {
      "description": "Use the default return key on the virtual keyboard.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_DONE": {
      "description": "Set the return key text to &quot;Done&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_EMERGENCY_CALL": {
      "description": "Set the return key text to &quot;Emergency Call&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_GO": {
      "description": "Set the return key text to &quot;Go&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_GOOGLE": {
      "description": "Set the return key text to &quot;Google&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_JOIN": {
      "description": "Set the return key text to &quot;Join&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_NEXT": {
      "description": "Set the return key text to &quot;Next&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_ROUTE": {
      "description": "Set the return key text to &quot;Route&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_SEARCH": {
      "description": "Set the return key text to &quot;Search&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_SEND": {
      "description": "Set the return key text to &quot;Send&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RETURNKEY_YAHOO": {
      "description": "Set the return key text to &quot;Yahoo&quot;.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "REWIND": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Rewind</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "RIGHT": {
      "description": "The inserted row or rows slides in from the right; the deleted row or rows slides out to\nthe right.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ROW_ACTION_STYLE_DEFAULT": {
      "description": "The default style for <a href=\"RowActionType\">RowActionType</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ROW_ACTION_STYLE_DESTRUCTIVE": {
      "description": "The destructive style for <a href=\"RowActionType\">RowActionType</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "ROW_ACTION_STYLE_NORMAL": {
      "description": "The normal style for <a href=\"RowActionType\">RowActionType</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "R_OK": {
      "description": "Flag indicating that the file can be read by the calling process.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ReadStream": {
      "description": "The class <code>fs.ReadStream</code>",
      "type": "fs.ReadStream",
      "readOnly": true,
      "values": []
    },
    "SAVE": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Save</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SAVED": {
      "description": "Constant for the <code>SAVED</code> status result. On Android, this property exists but is not used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCREEN_ORIENTATION_BEHIND": {
      "description": "Use with <a href=\"Titanium.Android.Activity.requestedOrientation\">requestedOrientation</a> to\nspecify the activity should run in the same orientation as the activity behind it\nin the activity stack.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCREEN_ORIENTATION_LANDSCAPE": {
      "description": "Use with <a href=\"Titanium.Android.Activity.requestedOrientation\">requestedOrientation</a> to\nspecify a landscape screen orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCREEN_ORIENTATION_NOSENSOR": {
      "description": "Use with <a href=\"Titanium.Android.Activity.requestedOrientation\">requestedOrientation</a> to\nspecify that the sensor should be ignored and the display should not rotate.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCREEN_ORIENTATION_PORTRAIT": {
      "description": "Use with <a href=\"Titanium.Android.Activity.requestedOrientation\">requestedOrientation</a> to\nspecify a portrait screen orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCREEN_ORIENTATION_SENSOR": {
      "description": "Use with <a href=\"Titanium.Android.Activity.requestedOrientation\">requestedOrientation</a> to\nspecify that orientation should be determined by the orientation sensor.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCREEN_ORIENTATION_UNSPECIFIED": {
      "description": "Use with <a href=\"Titanium.Android.Activity.requestedOrientation\">requestedOrientation</a> to\nspecify that the system should use its default rules for determining the best\norientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCREEN_ORIENTATION_USER": {
      "description": "Use with <a href=\"Titanium.Android.Activity.requestedOrientation\">requestedOrientation</a> to\nspecify that the system should use the user's preferred orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_DECELERATION_RATE_FAST": {
      "description": "Use with <a href=\"Titanium.UI.ScrollView.decelerationRate\">Titanium.UI.ScrollView.decelerationRate</a> to control deceleration rate.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_DECELERATION_RATE_NORMAL": {
      "description": "Use with <a href=\"Titanium.UI.ScrollView.decelerationRate\">Titanium.UI.ScrollView.decelerationRate</a> to control deceleration rate.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_FLAG_ENTER_ALWAYS": {
      "description": "When entering (scrolling on screen) the view will scroll on any downwards scroll event, regardless of whether the scrolling view is also scrolling. This is commonly referred to as the 'quick return' pattern.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED": {
      "description": "An additional flag for 'enterAlways' which modifies the returning view to only initially scroll back to it's collapsed height. Once the scrolling view has reached the end of it's scroll range, the remainder of this view will be scrolled into view. The collapsed height is defined by the view's minimum height.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_FLAG_EXIT_UNTIL_COLLAPSED": {
      "description": "When exiting (scrolling off screen) the view will be scrolled until it is 'collapsed'. The collapsed height is defined by the view's minimum height.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_FLAG_NO_SCROLL": {
      "description": "Disable scrolling on the view. This flag should not be combined with any of the other scroll flags.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_FLAG_SCROLL": {
      "description": "The view will be scroll in direct relation to scroll events. This flag needs to be set for any of the other flags to take effect. If any sibling views before this one do not have this flag, then this value has no effect.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_FLAG_SNAP": {
      "description": "Upon a scroll ending, if the view is only partially visible then it will be snapped and scrolled to its closest edge. For example, if the view only has its bottom 25% displayed, it will be scrolled off screen completely. Conversely, if its bottom 75% is visible then it will be scrolled fully into view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SCROLL_FLAG_SNAP_MARGINS": {
      "description": "An additional flag to be used with 'snap'. If set, the view will be snapped to its top and bottom margins, as opposed to the edges of the view itself.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SEARCH": {
      "description": "Search style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SEARCH_BAR_STYLE_MINIMAL": {
      "description": "Use with <a href=\"Titanium.UI.SearchBar.style\">Titanium.UI.SearchBar.style</a> to change the search bar style.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SEARCH_BAR_STYLE_PROMINENT": {
      "description": "Use with <a href=\"Titanium.UI.SearchBar.style\">Titanium.UI.SearchBar.style</a> to change the search bar style.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SECURE_TEXT_INPUT": {
      "description": "An alert dialog that allows the user to enter text. The text field is obscured.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SELECTION_GRANULARITY_CHARACTER": {
      "description": "Selection endpoints can be placed at any character boundary.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SELECTION_GRANULARITY_DYNAMIC": {
      "description": "Selection granularity varies automatically depending on the selection.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SELECTION_STYLE_DEFAULT": {
      "description": "Set the selection style to system default.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SELECTION_STYLE_NONE": {
      "description": "Set the selection style to none.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SEMANTIC_COLOR_TYPE_DARK": {
      "description": "The value returned by <a href=\"Titanium.UI.semanticColorType\">Titanium.UI.semanticColorType</a> when the device is in dark/night mode. <strong>Deprecated since 9.1.0. Use <a href=\"Titanium.UI.USER_INTERFACE_STYLE_DARK\">USER_INTERFACE_STYLE_DARK</a> instead.</strong>",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "SEMANTIC_COLOR_TYPE_LIGHT": {
      "description": "The value returned by <a href=\"Titanium.UI.semanticColorType\">Titanium.UI.semanticColorType</a> when the device is in light/normal mode. <strong>Deprecated since 9.1.0. Use <a href=\"Titanium.UI.USER_INTERFACE_STYLE_LIGHT\">USER_INTERFACE_STYLE_LIGHT</a> instead.</strong>",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "SENT": {
      "description": "Constant for the <code>SENT</code> status result.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_ADD": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_ALARM": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_AUDIO": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_BOOKMARK": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_CAPTURE_PHOTO": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_CAPTURE_VIDEO": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_CLOUD": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_COMPOSE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_CONFIRMATION": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_CONTACT": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_DATE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_FAVORITE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_HOME": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_INVITATION": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_LOCATION": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_LOVE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_MAIL": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_MARK_LOCATION": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_MESSAGE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_PAUSE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_PLAY": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_PROHIBIT": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_SEARCH": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_SHARE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_SHUFFLE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_TASK": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_TASK_COMPLETED": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_TIME": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHORTCUT_ICON_TYPE_UPDATE": {
      "description": "Number that represents the icon used for the application shortcut",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHOW_AS_ACTION_ALWAYS": {
      "description": "Always show this item as an action button in the action bar.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW": {
      "description": "The action view can collapse to a normal menu item.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHOW_AS_ACTION_IF_ROOM": {
      "description": "Show this item as an action button if the system decides there is room for it.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHOW_AS_ACTION_NEVER": {
      "description": "Never display this item as an action button in the action bar.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SHOW_AS_ACTION_WITH_TEXT": {
      "description": "When this item is in the action bar, always show it with a text label.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SIZE": {
      "description": "SIZE behavior for UI layout.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_ADJUST_NOTHING": {
      "description": "The window will not be resized, and it will not be panned to make its focus visible.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_ADJUST_PAN": {
      "description": "Pan the current heavyweight window when the input method (ie software keyboard) is shown, to\nensure that its contents are not obscured.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_ADJUST_RESIZE": {
      "description": "Resize the current heavyweight window when the input method (ie software keyboard) is shown,\nto ensure that its contents are not obscured.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_ADJUST_UNSPECIFIED": {
      "description": "Use the system-default behavior to determine how the soft input area (ie software keyboard)\nis accomodated by the current heavyweight window when it receives focus (default.)",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_STATE_ALWAYS_HIDDEN": {
      "description": "Always hide the soft input area (ie software keyboard) when the current heavyweight window\nreceives focus.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_STATE_ALWAYS_VISIBLE": {
      "description": "Always show the soft input area (ie software keyboard) when the current heavyweight window\nreceives focus.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_STATE_HIDDEN": {
      "description": "Attempt to hide the soft input area (ie software keyboard) when the current heavyweight\nwindow receives focus.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_STATE_UNSPECIFIED": {
      "description": "Use the system-default behavior to determine whether to show the soft input area\n(ie software keyboard) when the current heavyweight window receives focus.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_INPUT_STATE_VISIBLE": {
      "description": "Attempt to show the soft input area (ie software keyboard) when the current heavyweight\nwindow receives focus.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_KEYBOARD_DEFAULT_ON_FOCUS": {
      "description": "Use Android default behavior to handle keyboard visibility when a view receives focus.\n(default)",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_KEYBOARD_HIDE_ON_FOCUS": {
      "description": "Attempt to hide the soft keyboard when a view receives focus. Note: system can override\nrequest.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOFT_KEYBOARD_SHOW_ON_FOCUS": {
      "description": "Attempt to show the soft keyboard when a view receives focus. Note: system can override\nrequest.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOURCE_TYPE_BIRTHDAYS": {
      "description": "A birthday calendar source.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOURCE_TYPE_CALDAV": {
      "description": "A calDev calendar source.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOURCE_TYPE_EXCHANGE": {
      "description": "A microsoft exchange calendar source.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOURCE_TYPE_LOCAL": {
      "description": "A local calendar source.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOURCE_TYPE_MOBILEME": {
      "description": "A mobileMe calendar source.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SOURCE_TYPE_SUBSCRIBED": {
      "description": "A subscribed calendar source.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SPAN_FUTUREEVENTS": {
      "description": "A <a href=\"Titanium.Calendar.Event.save\">save</a>/<a href=\"Titanium.Calendar.Event.remove\">remove</a> event value,\nindicating modifications to this event instance should also affect future instances of this event.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SPAN_THISEVENT": {
      "description": "A <a href=\"Titanium.Calendar.Event.save\">save</a>/<a href=\"Titanium.Calendar.Event.remove\">remove</a> event value,\nindicating modifications to this event instance should affect only this instance.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SPINNER": {
      "description": "Identical to <a href=\"Titanium.UI.iOS.SystemButton.ACTIVITY\">ACTIVITY</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "START_NOT_STICKY": {
      "description": "A Service start mode indicating that if the host application is stopped by Android, the service should not be restarted automatically.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "START_REDELIVER_INTENT": {
      "description": "A Service start mode indicating that if the host application is stopped by Android, the service should be restarted automatically and the original Intent re-sent.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_BUFFERING": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_DISMISSED": {
      "description": "Alert dismissed state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_FIRED": {
      "description": "Alert fired state.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_INITIALIZED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_PAUSED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_PLAYING": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_SCHEDULED": {
      "description": "Alert scheduled status.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_STARTING": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_STOPPED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_STOPPING": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_WAITING_FOR_DATA": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATE_WAITING_FOR_QUEUE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATUS_BAR_LIGHT": {
      "description": "Sets the color of the status bar to light mode. Needs Android API level 23.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATUS_CANCELED": {
      "description": "Event canceled status.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATUS_CONFIRMED": {
      "description": "Event confirmed status.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATUS_NONE": {
      "description": "Event has no status.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STATUS_TENTATIVE": {
      "description": "Event tentative status.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STOP": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Stop</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STREAM_ALARM": {
      "description": "Use with <a href=\"Titanium.Android.Notification.audioStreamType\">audioStreamType</a> to\nrequest that the alarm stream type for notifications be used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STREAM_DEFAULT": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STREAM_MUSIC": {
      "description": "Use with <a href=\"Titanium.Android.Notification.audioStreamType\">audioStreamType</a> to\nrequest that the music stream type for notifications be used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STREAM_NOTIFICATION": {
      "description": "Use with <a href=\"Titanium.Android.Notification.audioStreamType\">audioStreamType</a> to request that the\nnotification stream type for notifications be used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STREAM_RING": {
      "description": "Use with <a href=\"Titanium.Android.Notification.audioStreamType\">audioStreamType</a> to request that the\nring stream type for notifications be used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STREAM_SYSTEM": {
      "description": "Use with <a href=\"Titanium.Android.Notification.audioStreamType\">audioStreamType</a> to request that the\nsystem stream type for notifications be used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "STREAM_VOICE_CALL": {
      "description": "Use with <a href=\"Titanium.Android.Notification.audioStreamType\">audioStreamType</a> to request that the\nvoice call stream type for notifications be used.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SWITCH_STYLE_CHECKBOX": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SWITCH_STYLE_CHIP": {
      "description": "Use with <a href=\"Titanium.UI.Switch.style\">Switch.style</a> to show a material design checkable chip widget.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SWITCH_STYLE_SLIDER": {
      "description": "Use with <a href=\"Titanium.UI.Switch.style\">Switch.style</a> to show a slidable button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SWITCH_STYLE_SWITCH": {
      "description": "Display a switch. <strong>Deprecated since 10.0.0. Use <a href=\"Titanium.UI.SWITCH_STYLE_SLIDER\">Titanium.UI.SWITCH_STYLE_SLIDER</a> instead.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SWITCH_STYLE_TOGGLEBUTTON": {
      "description": "Display a toggle button. <strong>Deprecated since 10.0.0. Use <a href=\"Titanium.UI.SWITCH_STYLE_TOGGLE_BUTTON\">Titanium.UI.SWITCH_STYLE_TOGGLE_BUTTON</a> instead.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "SWITCH_STYLE_TOGGLE_BUTTON": {
      "description": "Use with <a href=\"Titanium.UI.Switch.style\">Switch.style</a> to show a toggleable button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "S_IFBLK": {
      "description": "File type constant for a block-oriented device file.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IFCHR": {
      "description": "File type constant for a character-oriented device file.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IFDIR": {
      "description": "File type constant for a directory.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IFIFO": {
      "description": "File type constant for a FIFO/pipe.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IFLNK": {
      "description": "File type constant for a symbolic link.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IFMT": {
      "description": "Bit mask used to extract the file type code.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IFREG": {
      "description": "File type constant for a regular file.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IFSOCK": {
      "description": "File type constant for a socket.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IRGRP": {
      "description": "File mode indicating readable by group.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IROTH": {
      "description": "File mode indicating readable by others.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IRUSR": {
      "description": "File mode indicating readable by owner.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IRWXG": {
      "description": "File mode indicating readable, writable, and executable by group.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IRWXO": {
      "description": "File mode indicating readable, writable, and executable by others.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IRWXU": {
      "description": "File mode indicating readable, writable, and executable by owner.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IWGRP": {
      "description": "File mode indicating writable by group.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IWOTH": {
      "description": "File mode indicating writable by others.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IWUSR": {
      "description": "File mode indicating writable by owner.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IXGRP": {
      "description": "File mode indicating executable by group.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IXOTH": {
      "description": "File mode indicating executable by others.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "S_IXUSR": {
      "description": "File mode indicating executable by owner.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "Stats": {
      "description": "The class <code>fs.Stats</code>",
      "type": "fs.Stats",
      "readOnly": true,
      "values": []
    },
    "StringDecoder": {
      "description": "The class/constructor method for <code>StringDecoder</code> instances.",
      "type": "StringDecoder",
      "readOnly": true,
      "values": []
    },
    "TABLEVIEW_INDEX_SEARCH": {
      "description": "String that represents the magnifying glass on the table view index bar",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TABLE_VIEW_SEPARATOR_STYLE_NONE": {
      "description": "The row divider is hidden.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TABLE_VIEW_SEPARATOR_STYLE_SINGLE_LINE": {
      "description": "The row divider is shown as a single line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TABS_STYLE_BOTTOM_NAVIGATION": {
      "description": "TabGroup style taking advantage of a bottom navigation controller for switching between tabs.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TABS_STYLE_DEFAULT": {
      "description": "The default TabGroup style that places the Tabs bellow the ActionBar and above the Window content.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TAB_MODE_FIXED": {
      "description": "Set the TabGroup tab mode to fixed (default).",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "TAB_MODE_SCROLLABLE": {
      "description": "Set the TabGroup tab mode to scrollable.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "TEXT_ALIGNMENT_CENTER": {
      "description": "Center align text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ALIGNMENT_JUSTIFY": {
      "description": "Justify align text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ALIGNMENT_LEFT": {
      "description": "Left align text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ALIGNMENT_RIGHT": {
      "description": "Right align text.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_AUTOCAPITALIZATION_ALL": {
      "description": "Auto-capitalize all text in the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_AUTOCAPITALIZATION_NONE": {
      "description": "Do not auto-capitalize.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_AUTOCAPITALIZATION_SENTENCES": {
      "description": "Use sentence-style auto-capitalization in the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_AUTOCAPITALIZATION_WORDS": {
      "description": "Auto-capitalize the first letter of each word in the input field.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_CHAR_WRAP": {
      "description": "Add ellipses before the first character that doesnt fit.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_CLIP": {
      "description": "Lines are simply not drawn past the edge of the text container.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_END": {
      "description": "Add ellipses at the end of the label if the text is too large to fit.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_MARQUEE": {
      "description": "Turns on a marquee effect of the label if the text is too large to fit. (This requires <a href=\"Titanium.UI.Label.focusable\">Titanium.UI.Label.focusable</a> to be true)",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_MIDDLE": {
      "description": "Add ellipses in the middle of the label if the text is too large to fit.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_NONE": {
      "description": "Disables ellipsizing of the label. The text will be cut off if it is too long.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_START": {
      "description": "Add ellipses at the beginning of the label if the text is too large to fit.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_ELLIPSIZE_TRUNCATE_WORD_WRAP": {
      "description": "Add ellipses at word boundaries, unless the word itself doesn't fit on a single line.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_NODE": {
      "description": "Used with <a href=\"Titanium.XML.Node.nodeType\">nodeType</a> to identify a\n<a href=\"Titanium.XML.Text\">Text</a> node.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_BODY": {
      "description": "The font used for body texts.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_CALLOUT": {
      "description": "The font used for callouts.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_CAPTION1": {
      "description": "The font used for standard captions.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_CAPTION2": {
      "description": "The font used for alternate captions.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_FOOTNOTE": {
      "description": "The font used in footnotes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_HEADLINE": {
      "description": "The font used for headings.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_LARGE_TITLE": {
      "description": "Specifies the text style for the <a href=\"Font\">Font</a> Object.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_SUBHEADLINE": {
      "description": "The font used for subheadings.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_TITLE1": {
      "description": "The font used for first level hierarchical headings.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_TITLE2": {
      "description": "The font used for second level hierarchical headings.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_STYLE_TITLE3": {
      "description": "The font used for third level hierarchical headings.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TEXT_VERTICAL_ALIGNMENT_BOTTOM": {
      "description": "Align text to the bottom of the view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_VERTICAL_ALIGNMENT_CENTER": {
      "description": "Vertically align text to the center of the view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TEXT_VERTICAL_ALIGNMENT_TOP": {
      "description": "Align text to the top of the view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TILE_STATE_ACTIVE": {
      "description": "QuickSettings tile is active.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TILE_STATE_INACTIVE": {
      "description": "QuickSettings tile is inactive.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TILE_STATE_UNAVAILABLE": {
      "description": "QuickSettings tile is unavailble.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TLS_VERSION_1_0": {
      "description": "Constant value specifying TLS version 1.0 for SSL.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TLS_VERSION_1_1": {
      "description": "Constant value specifying TLS version 1.1 for SSL.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TLS_VERSION_1_2": {
      "description": "Constant value specifying TLS version 1.2 for SSL.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TLS_VERSION_1_3": {
      "description": "Constant value specifying TLS version 1.3 for SSL.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TOP": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TOP_RATED": {
      "description": "Top rated style icon",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_CHANGE_BOUNDS": {
      "description": "Captures layout bounds of target views before and after the scene change and animates those changes during the transition.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_CHANGE_CLIP_BOUNDS": {
      "description": "Captures the clip bounds before and after the scene change and animates those changes during the transition.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_CHANGE_IMAGE_TRANSFORM": {
      "description": "Captures an ImageView's matrix before and after the scene change and animates it during the transition.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_CHANGE_TRANSFORM": {
      "description": "Captures scale and rotation for Views before and after the scene change and animates those changes during the transition.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_EXPLODE": {
      "description": "Moves views in or out from the edges of the scene.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_FADE_IN": {
      "description": "Fades in the views.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_FADE_OUT": {
      "description": "Fades out the views.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_NONE": {
      "description": "Resets transition to platform default.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_SLIDE_BOTTOM": {
      "description": "Moves views to bottom.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_SLIDE_LEFT": {
      "description": "Moves views to left.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_SLIDE_RIGHT": {
      "description": "Moves views to right.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRANSITION_SLIDE_TOP": {
      "description": "Moves views to top.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TRASH": {
      "description": "Use with <a href=\"Titanium.UI.Button.systemButton\">Button.systemButton</a> to specify a <strong>Trash</strong> button.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "TYPE_BYTE": {
      "description": "8-bit integer encoding type.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TYPE_DOUBLE": {
      "description": "64-bit double precision floating-point type.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TYPE_FLOAT": {
      "description": "32-bit single precision floating-point type.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TYPE_INT": {
      "description": "32-bit integer encoding type.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TYPE_LONG": {
      "description": "64-bit integer encoding type.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "TYPE_SHORT": {
      "description": "16-bit integer encoding type.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UIApplicationOpenURLOptionUniversalLinksOnly": {
      "description": "When you include this key in the options dictionary, the method opens the URL only if the URL is a valid universal link and there is an installed app capable of opening that URL.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "UIApplicationOpenURLOptionsAnnotationKey": {
      "description": "contains the information passed to a document interaction controller object's annotation property.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "UIApplicationOpenURLOptionsOpenInPlaceKey": {
      "description": "When the value of this property is <code>false</code>, you must copy the document to maintain access to it. If the flag is not set, you also must copy the document before you can use it.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "UIApplicationOpenURLOptionsSourceApplicationKey": {
      "description": "The value of this key is an String containing the bundle ID of the app that made the request. If the request originated from another app belonging to your team, UIKit sets the value of this key to the ID of that app. If the team identifier of the originating app is different than the team identifier of the current app, the value of the key is nil.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "UNIT_CM": {
      "description": "Unit constant representing units in centimeters.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UNIT_DIP": {
      "description": "Unit constant representing units in density-independent pixels.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UNIT_IN": {
      "description": "Unit constant representing units in inches.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UNIT_MM": {
      "description": "Unit constant representing units in millimeters.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UNIT_PX": {
      "description": "Unit constant representing units in pixels.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UNKNOWN": {
      "description": "Orientation constant representing an unknown orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "UNKNOWN_ERROR": {
      "description": "Constant for unknown media error.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "UNSENT": {
      "description": "Ready state constant indicating that HTTPClient request has not been opened or sent.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "UPSIDE_PORTRAIT": {
      "description": "Orientation constant for inverted portait orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URI_INTENT_SCHEME": {
      "description": "The URI scheme used for intent URIs.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_AUTHENTICATION": {
      "description": "Authentication error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_BAD_URL": {
      "description": "Bad url error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_CONNECT": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> for a failure to connect to host.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_FILE": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> for a failure to access a file resource on a host, except &quot;file not found&quot;, which has its own constant.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_FILE_NOT_FOUND": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> when a requested file does not exist on the host.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_HOST_LOOKUP": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> when a host name cannot be resolved, such as via a DNS lookup error.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_REDIRECT_LOOP": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> when a redirect loop is detected.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_SSL_FAILED": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> for an SSL failure.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_TIMEOUT": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> when a timeout occurs.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_UNKNOWN": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> when an unknown error occurs.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "URL_ERROR_UNSUPPORTED_SCHEME": {
      "description": "Error code reported via <a href=\"Titanium.UI.WebView.error\">Titanium.UI.WebView.error</a> when a url contains an unsupported scheme.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_INTERFACE_STYLE_DARK": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_INTERFACE_STYLE_LIGHT": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_INTERFACE_STYLE_UNSPECIFIED": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND": {
      "description": "The action will execute in background. Use with the\n<a href=\"Titanium.App.iOS.UserNotificationAction.activationMode\">activationMode</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND": {
      "description": "The action will launch the application and execute in the foreground.\nUse with the <a href=\"Titanium.App.iOS.UserNotificationAction.activationMode\">activationMode</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_ALERT_STYLE_ALERT": {
      "description": "A alert dialog is presented when the notification is received.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_ALERT_STYLE_BANNER": {
      "description": "A banner is presented when the notification is received.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_ALERT_STYLE_NONE": {
      "description": "No banner or alert dialog is presented when the notification is received.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_AUTHORIZATION_STATUS_AUTHORIZED": {
      "description": "The application is authorized to post user notifications.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_AUTHORIZATION_STATUS_DENIED": {
      "description": "The application is not authorized to post user notifications.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_AUTHORIZATION_STATUS_NOT_DETERMINED": {
      "description": "The user has not yet made a choice regarding whether the application may post\nuser notifications.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_AUTHORIZATION_STATUS_PROVISIONAL": {
      "description": "The application is provisionally authorized to post non-interruptive user notifications.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_BEHAVIOR_DEFAULT": {
      "description": "Default action behavior with no additional action support.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_BEHAVIOR_TEXTINPUT": {
      "description": "Provides a textfield with the notification for the user to enter a text response.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_CATEGORY_OPTION_ALLOW_IN_CARPLAY": {
      "description": "Allow CarPlay to display notifications of this type.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_CATEGORY_OPTION_CUSTOM_DISMISS_ACTION": {
      "description": "Send dismiss actions to the UNUserNotificationCenter object's delegate for handling.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_SUBTITLE": {
      "description": "Show the notification's subtitle, even if the user has disabled notification previews for the app.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_TITLE": {
      "description": "Show the notification's title, even if the user has disabled notification previews for the app.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_CATEGORY_OPTION_NONE": {
      "description": "No options.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_SETTING_DISABLED": {
      "description": "The notification setting is turned off.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_SETTING_ENABLED": {
      "description": "The notification setting is turned on.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_SETTING_NOT_SUPPORTED": {
      "description": "The application does not support this notification type.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_TYPE_ALERT": {
      "description": "The application may display an alert upon a notification being received.\nUse with the <a href=\"UserNotificationSettings.types\">types</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_TYPE_BADGE": {
      "description": "The application may badge its icon upon a notification being received.\nUse with the <a href=\"UserNotificationSettings.types\">types</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_TYPE_CRITICAL_ALERT": {
      "description": "The ability to play sounds for critical alerts.\nUse with the <a href=\"UserNotificationSettings.types\">types</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_TYPE_NONE": {
      "description": "The application may not present any UI upon a notification being received.\nUse with the <a href=\"UserNotificationSettings.types\">types</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_TYPE_PROVIDES_APP_NOTIFICATION_SETTINGS": {
      "description": "An option indicating the system should display a button for in-app notification settings.\nUse with the <a href=\"UserNotificationSettings.types\">types</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_TYPE_PROVISIONAL": {
      "description": "The ability to post non-interrupting notifications provisionally to the Notification Center.\nUse with the <a href=\"UserNotificationSettings.types\">types</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "USER_NOTIFICATION_TYPE_SOUND": {
      "description": "The application may play a sound upon a notification being received.\nUse with the <a href=\"UserNotificationSettings.types\">types</a> property.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_APPLE_ICNS": {
      "description": "Uniform type identifier for Mac OS icon images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_APPLE_PROTECTED_MPEG4_AUDIO": {
      "description": "Uniform type identifier for protected MPEG-4 audio (iTunes music store format).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_AUDIO": {
      "description": "Uniform type identifier for all audio content.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_BMP": {
      "description": "Uniform type identifier for Windows bitmap images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_FLAT_RTFD": {
      "description": "Uniform type identifier for Rich Text with content embedding, pasteboard format.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_GIF": {
      "description": "Uniform type identifier for GIF images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_HTML": {
      "description": "Uniform type identifier for HTML.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_ICO": {
      "description": "Uniform type identifier for Windows icon images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_IMAGE": {
      "description": "Uniform type identifier for all image types.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_JPEG": {
      "description": "Uniform type identifier for JPEG images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_JPEG2000": {
      "description": "Uniform type identifier for JPEG 2000 images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_MOVIE": {
      "description": "Uniform type identifier for all audiovisual content.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_MP3": {
      "description": "Uniform type identifier for MP3 audio.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_MPEG": {
      "description": "Uniform type identifier for MPEG-1 and MPEG-2 content.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_MPEG4": {
      "description": "Uniform type identifier for MPEG-4 content.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_MPEG4_AUDIO": {
      "description": "Uniform type identifier for MPEG-4 audio.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_PDF": {
      "description": "Uniform type identifier for PDF data.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_PICT": {
      "description": "Uniform type identifier for PICT images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_PLAIN_TEXT": {
      "description": "Uniform type identifier for a plain text type, equivalent to MIME type text/plain.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_PNG": {
      "description": "Uniform type identifier for PNG images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_QUICKTIME_IMAGE": {
      "description": "Uniform type identifier for QuickTime images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_QUICKTIME_MOVIE": {
      "description": "Uniform type identifier for QuickTime movies.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_RTF": {
      "description": "Uniform type identifier for Rich Text.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_RTFD": {
      "description": "Uniform type identifier for Rich Text Format Directory, that is, Rich Text with content embedding, on-disk format.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_TEXT": {
      "description": "Uniform type identifier for all text types.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_TIFF": {
      "description": "Uniform type identifier for TIFF images.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_TXN_TEXT_AND_MULTIMEDIA_DATA": {
      "description": "Uniform type identifier for MLTE (Textension) format for mixed text and multimedia data.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_UTF16_EXTERNAL_PLAIN_TEXT": {
      "description": "Uniform type identifier for Unicode-16 with byte-order mark (BOM), or if BOM is not present,\nan external representation byte order (big-endian).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_UTF16_PLAIN_TEXT": {
      "description": "Uniform type identifier for Unicode-16, native byte order, with an optional byte-order mark (BOM).",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_UTF8_PLAIN_TEXT": {
      "description": "Uniform type identifier for Unicode-8 plain text type.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_VIDEO": {
      "description": "Uniform type identifier for all video content without audio.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_WEB_ARCHIVE": {
      "description": "Uniform type identifier for WebKit webarchive format.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UTTYPE_XML": {
      "description": "Uniform type identifier for XML.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "UV_FS_COPYFILE_EXCL": {
      "description": "alias for <code>COPYFILE_EXCL</code>?",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "VERTICAL_ALIGN_BOTTOM": {
      "description": "Vertical align center",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VERTICAL_ALIGN_CENTER": {
      "description": "Vertical align center",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VERTICAL_ALIGN_TOP": {
      "description": "Vertical align center",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_CONTROL_DEFAULT": {
      "description": "Constant for default video controls. <strong>Deprecated since 7.0.0. This property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_CONTROL_EMBEDDED": {
      "description": "Constant for video controls for an embedded view. <strong>Deprecated since 7.0.0. This property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_CONTROL_FULLSCREEN": {
      "description": "Constant for fullscreen video controls. <strong>Deprecated since 7.0.0. This property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_CONTROL_HIDDEN": {
      "description": "Constant for video controls hidden. <strong>Deprecated since 7.0.0. This property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_CONTROL_NONE": {
      "description": "Constant for no video controls. <strong>Deprecated since 7.0.0. This property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_FINISH_REASON_PLAYBACK_ENDED": {
      "description": "Video playback ended normally.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_FINISH_REASON_PLAYBACK_ERROR": {
      "description": "Video playback ended abnormally.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_FINISH_REASON_USER_EXITED": {
      "description": "Video playback ended by user action (such as clicking the <code>Done</code> button).",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_LOAD_STATE_FAILED": {
      "description": "Indicates that the player can no longer play media items because of an error.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_LOAD_STATE_PLAYABLE": {
      "description": "Current media is playable.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_LOAD_STATE_UNKNOWN": {
      "description": "Current load state is not known.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_AUDIO": {
      "description": "The media contains audio media.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_CLOSED_CAPTION": {
      "description": "The media contains closed-caption content.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_DEPTH_DATA": {
      "description": "The media contains depth data.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_METADATA": {
      "description": "The media contains metadata.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_METADATA_OBJECT": {
      "description": "The media contains metadata objects.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_MUXED": {
      "description": "The media contains muxed media.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_SUBTITLE": {
      "description": "The media contains subtitles.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_TEXT": {
      "description": "The media contains text.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_TIMECODE": {
      "description": "The media contains a time code.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_MEDIA_TYPE_VIDEO": {
      "description": "The media contains video.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_PLAYBACK_STATE_INTERRUPTED": {
      "description": "Video playback has been interrupted.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_PLAYBACK_STATE_PAUSED": {
      "description": "Video playback is paused.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_PLAYBACK_STATE_PLAYING": {
      "description": "Video is being played.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD": {
      "description": "Video playback is rewinding.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_PLAYBACK_STATE_SEEKING_FORWARD": {
      "description": "Video playback is seeking forward.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_PLAYBACK_STATE_STOPPED": {
      "description": "Video playback is stopped.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_REPEAT_MODE_NONE": {
      "description": "Constant for disabling repeat on video playback.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_REPEAT_MODE_ONE": {
      "description": "Constant for repeating one video (i.e., the one video will repeat constantly) during playback.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_SCALING_ASPECT_FILL": {
      "description": "Scale video to fill the screen, clipping edges if necessary. **Deprecated since 7.0.0. Use <a href=\"Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL\">Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL</a> instead.\nThis property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.**",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_SCALING_ASPECT_FIT": {
      "description": "Scale video to fit the screen, letterboxing if necessary. **Deprecated since 7.0.0. Use <a href=\"Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT\">Titanium.Media.VIDEO_SCALING_RESIZE_ASPECT</a> instead.\nThis property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.**",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_SCALING_MODE_FILL": {
      "description": "Video is scaled until both dimensions fit the screen exactly, stretching if necessary. **Deprecated since 7.0.0. Use &lt;Titanium.Media.VIDEO_SCALING_MODE_RESIZE&gt; instead.\nThis property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.**",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_SCALING_NONE": {
      "description": "Video scaling is disabled. <strong>Deprecated since 7.0.0. This property has been removed for iOS in Titanium SDK 7.0.0 as of the official deprecation by Apple.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_SCALING_RESIZE": {
      "description": "Specifies that the video should be stretched to fill the bounds of layer.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_SCALING_RESIZE_ASPECT": {
      "description": "Specifies that the player should preserve the aspect ratio of video and fit the video within the bounds of layer.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_SCALING_RESIZE_ASPECT_FILL": {
      "description": "Specifies that the player should preserve the aspect ratio of video and fill the bounds of layer.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "VIDEO_TIME_OPTION_CLOSEST_SYNC": {
      "description": "Use the closest sync (or key) frame at given the time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_TIME_OPTION_EXACT": {
      "description": "Use the exact time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_TIME_OPTION_NEAREST_KEYFRAME": {
      "description": "Use the closest keyframe in the time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_TIME_OPTION_NEXT_SYNC": {
      "description": "Use the sync (or key) frame located right after or at given the time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VIDEO_TIME_OPTION_PREVIOUS_SYNC": {
      "description": "Use the sync (or key) frame located right before or at given the time.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VISIBILITY_CONFIDENTIAL": {
      "description": "Event confidential visibility.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VISIBILITY_DEFAULT": {
      "description": "Event default visibility.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VISIBILITY_PRIVATE": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VISIBILITY_PUBLIC": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "VISIBILITY_SECRET": {
      "description": "Shows the most minimal information of the notification on the lockscreen.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WAKE_LOCK_ACQUIRE_CAUSES_WAKEUP": {
      "description": "Turn the screen on when the wake lock is acquired.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WAKE_LOCK_FULL": {
      "description": "Ensures that the screen and keyboard backlight are on at full brightness.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WAKE_LOCK_ON_AFTER_RELEASE": {
      "description": "When this wake lock is released, poke the user activity timer so the screen stays on for a little longer.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WAKE_LOCK_PARTIAL": {
      "description": "Ensures that the CPU is running; the screen and keyboard backlight will be allowed to go off.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WAKE_LOCK_SCREEN_BRIGHT": {
      "description": "Ensures that the screen is on at full brightness; the keyboard backlight will be allowed to go off.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WAKE_LOCK_SCREEN_DIM": {
      "description": "Ensures that the screen is on (but may be dimmed); the keyboard backlight will be allowed to go off.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_LOAD_CACHE_ELSE_NETWORK": {
      "description": "Use with <a href=\"Titanium.UI.WebView.cacheMode\">WebView.cacheMode</a> to override how the cache is used in a web view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_LOAD_CACHE_ONLY": {
      "description": "Use with <a href=\"Titanium.UI.WebView.cacheMode\">WebView.cacheMode</a> to override how the cache is used in a web view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_LOAD_DEFAULT": {
      "description": "Use with <a href=\"Titanium.UI.WebView.cacheMode\">WebView.cacheMode</a> to override how the cache is used in a web view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_LOAD_NO_CACHE": {
      "description": "Use with <a href=\"Titanium.UI.WebView.cacheMode\">WebView.cacheMode</a> to override how the cache is used in a web view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_PLUGINS_OFF": {
      "description": "Use with <a href=\"Titanium.UI.WebView.pluginState\">WebView.pluginState</a> to disable plugins in a web view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_PLUGINS_ON": {
      "description": "Use with <a href=\"Titanium.UI.WebView.pluginState\">WebView.pluginState</a> to enable plugins in a web view.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_PLUGINS_ON_DEMAND": {
      "description": "Display a placeholder and only load plugins when user selects it.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_SCROLLBARS_DEFAULT": {
      "description": "Show horizontal and vertical scrollbar in a Ti.UI.WebView.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_SCROLLBARS_HIDE_ALL": {
      "description": "Hide all scrollbars in a Ti.UI.WebView.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_SCROLLBARS_HIDE_HORIZONTAL": {
      "description": "Hide horizontal scrollbar in a Ti.UI.WebView.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WEBVIEW_SCROLLBARS_HIDE_VERTICAL": {
      "description": "Hide vertical scrollbar in a Ti.UI.WebView.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "WHITE": {
      "description": "A style of indicator is white and smaller than the default style. This style is good against\na black content background.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "W_OK": {
      "description": "Flag indicating that the file can be written by the calling process.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "WriteStream": {
      "description": "The class <code>fs.WriteStream</code>",
      "type": "fs.WriteStream",
      "readOnly": true,
      "values": []
    },
    "X_OK": {
      "description": "Flag indicating that the file can be executed by the calling process. This has no effect on Windows (will behave like <code>fs.constants.F_OK</code>).",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "a": {
      "description": "The entry at position [1,1] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "absoluteDate": {
      "description": "The absolute date for the alarm.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "absoluteX": {
      "description": "The x-axis coordinate of the position relative to the main window.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "absoluteY": {
      "description": "The y-axis coordinate of the position relative to the main window.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "accepted": {
      "description": "Callback to be fired when a listener accepts a connection.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "accessibilityDisableLongPress": {
      "description": "Boolean value to remove the long press notification for the device's accessibility service.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "accessibilityEnabled": {
      "description": "Indicates whether Accessibility is enabled by the system.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "accessibilityHidden": {
      "description": "Whether the view should be &quot;hidden&quot; from (i.e., ignored by) the accessibility service.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "accessibilityHint": {
      "description": "Briefly describes what performing an action (such as a click) on the view will do.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "accessibilityLabel": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "accessibilityValue": {
      "description": "A string describing the value (if any) of the view for the device's accessibility service.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "accessoryType": {
      "description": "Sets an accessory on the right side of an item.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.LIST_ACCESSORY_TYPE_NONE",
        "Ti.UI.LIST_ACCESSORY_TYPE_CHECKMARK",
        "Ti.UI.LIST_ACCESSORY_TYPE_DETAIL",
        "Ti.UI.LIST_ACCESSORY_TYPE_DISCLOSURE"
      ]
    },
    "accuracy": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Geolocation.ACCURACY_HIGH",
        "Ti.Geolocation.ACCURACY_BEST_FOR_NAVIGATION",
        "Ti.Geolocation.ACCURACY_LOW",
        "Ti.Geolocation.ACCURACY_BEST",
        "Ti.Geolocation.ACCURACY_NEAREST_TEN_METERS",
        "Ti.Geolocation.ACCURACY_HUNDRED_METERS",
        "Ti.Geolocation.ACCURACY_KILOMETER",
        "Ti.Geolocation.ACCURACY_THREE_KILOMETERS",
        "Ti.Geolocation.ACCURACY_REDUCED"
      ]
    },
    "accuracyAuthorization": {
      "description": "The level of location accuracy the app has granted.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Geolocation.ACCURACY_AUTHORIZATION_FULL",
        "Ti.Geolocation.ACCURACY_AUTHORIZATION_REDUCED"
      ]
    },
    "action": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "actionBar": {
      "description": "The action bar for this activity.",
      "type": "Titanium.Android.ActionBar",
      "readOnly": false,
      "values": []
    },
    "actionView": {
      "description": "Custom view that replaces the default menu item button.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "actionViewExpanded": {
      "description": "True if this menu item's action view has been expanded.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "actions": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "actionsForDefaultContext": {
      "description": "Array of notification actions to associate with the group.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "actionsForMinimalContext": {
      "description": "Array of notification actions to display for non-dialog-style notification.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "activationMode": {
      "description": "Selects how to activate the application.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND",
        "Ti.App.iOS.USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND"
      ]
    },
    "activationState": {
      "description": "Returns the current activation state of the watch.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.WatchSession.ACTIVATION_STATE_NOT_ACTIVATED",
        "Ti.WatchSession.ACTIVATION_STATE_INACTIVE",
        "Ti.WatchSession.ACTIVATION_STATE_ACTIVATED"
      ]
    },
    "active": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "activeIcon": {
      "description": "Icon URL for this tab when active.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "activeIconIsMask": {
      "description": "Defines if the active icon property of the tab must be used as a mask.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "activeTab": {
      "description": "Active tab.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "activeTabBackgroundImage": {
      "description": "Default background image for the active tab.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "activeTabIconTint": {
      "description": "Color applied to active tabs icons, as a color name or hex triplet, where the tab's activeIcon was not defined. <strong>Deprecated since 9.0.3. Deprecated in favor of <a href=\"Titanium.UI.TabGroup.activeTintColor\">Titanium.UI.TabGroup.activeTintColor</a> or alternatively <a href=\"Titanium.UI.Tab.activeTintColor\">Titanium.UI.Tab.activeTintColor</a>.</strong>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "activeTintColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "activeTitleColor": {
      "description": "Defines the color of the title of tab when it's active.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "activity": {
      "description": "",
      "type": "Titanium.Android.Activity",
      "readOnly": false,
      "values": []
    },
    "activityEnterAnimation": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "activityEnterTransition": {
      "description": "The type of transition used when activity is entering.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_EXPLODE",
        "Ti.UI.Android.TRANSITION_FADE_IN",
        "Ti.UI.Android.TRANSITION_FADE_OUT",
        "Ti.UI.Android.TRANSITION_SLIDE_TOP",
        "Ti.UI.Android.TRANSITION_SLIDE_RIGHT",
        "Ti.UI.Android.TRANSITION_SLIDE_BOTTOM",
        "Ti.UI.Android.TRANSITION_SLIDE_LEFT",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activityExitAnimation": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "activityExitTransition": {
      "description": "The type of transition used when activity is exiting.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_EXPLODE",
        "Ti.UI.Android.TRANSITION_FADE_IN",
        "Ti.UI.Android.TRANSITION_FADE_OUT",
        "Ti.UI.Android.TRANSITION_SLIDE_TOP",
        "Ti.UI.Android.TRANSITION_SLIDE_RIGHT",
        "Ti.UI.Android.TRANSITION_SLIDE_BOTTOM",
        "Ti.UI.Android.TRANSITION_SLIDE_LEFT",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activityReenterTransition": {
      "description": "The type of transition used when reentering to a previously started activity.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_EXPLODE",
        "Ti.UI.Android.TRANSITION_FADE_IN",
        "Ti.UI.Android.TRANSITION_FADE_OUT",
        "Ti.UI.Android.TRANSITION_SLIDE_TOP",
        "Ti.UI.Android.TRANSITION_SLIDE_RIGHT",
        "Ti.UI.Android.TRANSITION_SLIDE_BOTTOM",
        "Ti.UI.Android.TRANSITION_SLIDE_LEFT",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activityReturnTransition": {
      "description": "The type of transition used when returning from a previously started activity.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_EXPLODE",
        "Ti.UI.Android.TRANSITION_FADE_IN",
        "Ti.UI.Android.TRANSITION_FADE_OUT",
        "Ti.UI.Android.TRANSITION_SLIDE_TOP",
        "Ti.UI.Android.TRANSITION_SLIDE_RIGHT",
        "Ti.UI.Android.TRANSITION_SLIDE_BOTTOM",
        "Ti.UI.Android.TRANSITION_SLIDE_LEFT",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activitySharedElementEnterTransition": {
      "description": "The type of enter transition used when animating shared elements between two activities.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_CHANGE_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_CLIP_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_CHANGE_IMAGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activitySharedElementExitTransition": {
      "description": "The type of exit transition used when animating shared elements between two activities.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_CHANGE_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_CLIP_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_CHANGE_IMAGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activitySharedElementReenterTransition": {
      "description": "The type of reenter transition used when animating shared elements between two activities.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_CHANGE_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_CLIP_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_CHANGE_IMAGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activitySharedElementReturnTransition": {
      "description": "The type of return transition used when animating shared elements between two activities.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TRANSITION_CHANGE_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_CLIP_BOUNDS",
        "Ti.UI.Android.TRANSITION_CHANGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_CHANGE_IMAGE_TRANSFORM",
        "Ti.UI.Android.TRANSITION_NONE"
      ]
    },
    "activityType": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Geolocation.ACTIVITYTYPE_OTHER",
        "Ti.Geolocation.ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION",
        "Ti.Geolocation.ACTIVITYTYPE_FITNESS",
        "Ti.Geolocation.ACTIVITYTYPE_OTHER_NAVIGATION"
      ]
    },
    "actual": {
      "description": "",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "add": {
      "description": "The value in pixels that should be added to each line other than the last line. This will be applied after the multiplier",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "addedDate": {
      "description": "The date that the item was moved into the current location.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "address": {
      "description": "",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "alarmTime": {
      "description": "Date/time at which this alert alarm is set to trigger.",
      "type": "Date",
      "readOnly": false,
      "values": []
    },
    "album": {
      "description": "The title for a collection of media.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "albumArtist": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "albumArtistPersistentID": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "albumPersistentID": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "albumTitle": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "albumTrackCount": {
      "description": "Number of tracks for the album containing this item.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "albumTrackNumber": {
      "description": "Track number for this item.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "alertAction": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "alertBody": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "alertLaunchImage": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "alertSetting": {
      "description": "The current alert settings.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "alertStyle": {
      "description": "The current alert style used to display notifications.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_ALERT_STYLE_NONE",
        "Ti.App.iOS.USER_NOTIFICATION_ALERT_STYLE_ALERT",
        "Ti.App.iOS.USER_NOTIFICATION_ALERT_STYLE_BANNER"
      ]
    },
    "alertSubtitle": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "alertTitle": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "alerts": {
      "description": "Alarms associated with the calendar item, as an array of <a href=\"Titanium.Calendar.Alert\">Titanium.Calendar.Alert</a> objects.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "alignment": {
      "description": "The text alignment of the receiver.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.TEXT_ALIGNMENT_CENTER",
        "Ti.UI.TEXT_ALIGNMENT_JUSTIFY",
        "Ti.UI.TEXT_ALIGNMENT_LEFT",
        "Ti.UI.TEXT_ALIGNMENT_RIGHT"
      ]
    },
    "allAlerts": {
      "description": "All alerts in selected calendars.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "allCalendars": {
      "description": "All calendars known to the native calendar app.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "allDay": {
      "description": "Indicates whether this event is all day.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allEditableCalendars": {
      "description": "All calendars known to the native calendar app that can add, edit, and\ndelete items in the calendar.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "allHTTPCookies": {
      "description": "A list of all cookies in the cookie storage.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "allResponseHeaders": {
      "description": "All of the response headers.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "allowBackground": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowCreation": {
      "description": "Create a clipboard identified by name if it doesn't exist.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowEditing": {
      "description": "Specifies if the media should be editable after capture/selection.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowFileAccess": {
      "description": "A Boolean value indicating file access within WebView.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowMultiple": {
      "description": "Specifies if the user should be able to select multiple photos.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowMultipleSelections": {
      "description": "Set to <code>true</code> to allow the user to select multiple items from the library.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowTranscoding": {
      "description": "Specifies if the video should be transcoded (using highest quality preset) . If set to false no video transcoding will be performed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowUserCustomization": {
      "description": "Allow the user to reorder tabs in the tab group using the <strong>Edit</strong> button on the <strong>More</strong>\ntab.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowedURLSchemes": {
      "description": "List of allowed URL schemes for the web view.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "allowsAirPlay": {
      "description": "Whether or not the current movie can be played on a remote device.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsAirPlayMediaPlayback": {
      "description": "A Boolean value indicating whether AirPlay is allowed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsBackForwardNavigationGestures": {
      "description": "A Boolean value indicating whether horizontal swipe gestures will trigger back-forward list navigations.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsBackgroundLocationUpdates": {
      "description": "Determines if the app can do background location updates.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsDefaultTighteningForTruncation": {
      "description": "A Boolean value indicating whether the system may tighten inter-character spacing\nbefore truncating text.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsExternalPlayback": {
      "description": "Indicates whether the player allows switching to &quot;external playback&quot; mode.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsInlineMediaPlayback": {
      "description": "A Boolean value indicating whether HTML5 videos play inline or use the native full-screen controller.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsLinkPreview": {
      "description": "A Boolean value that determines whether pressing on a link displays a preview of the\ndestination for the link.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsMultipleSelectionDuringEditing": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsMultipleSelectionInteraction": {
      "description": "Allows a two-finger pan gesture to automatically transition the table view into editing mode and start selecting rows.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsPictureInPictureMediaPlayback": {
      "description": "A Boolean value indicating whether HTML5 videos can play picture-in-picture.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsRotation": {
      "description": "Specifies if this item can rotate.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsSelection": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "allowsSelectionDuringEditing": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "alternateBirthday": {
      "description": "Alternate birthday of the person. Single Dictionary.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "alternateNames": {
      "description": "An array of localized strings of alternate display names for this item.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "altitude": {
      "description": "Altitude of the location update, in meters.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "altitudeAccuracy": {
      "description": "Vertical accuracy of the location update, in meters.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "anchor": {
      "description": "Anchor point for the attachment behavior relative to the animator's coordinate system.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "anchorItem": {
      "description": "Item to use as the anchor in this behavior.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "anchorOffset": {
      "description": "Offset from the center point of the anchor item for the attachment.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "anchorPoint": {
      "description": "",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "androidView": {
      "description": "View to load inside the message area, to create a custom layout.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "androidback": {
      "description": "Function to call if the user presses the back button.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "angle": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "angularResistance": {
      "description": "Specifies the angular resistance of this item.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "anim": {
      "description": "Animation resources. See\n<a href=\"https://developer.android.com/reference/android/R.anim.html\">R.anim</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "animated": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "animatedCenter": {
      "description": "Current position of the view during an animation.",
      "type": "Point",
      "readOnly": false,
      "values": []
    },
    "animating": {
      "description": "Indicates whether animation is running.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "animationDuration": {
      "description": "duration of the animation in milliseconds",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "animationStyle": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.RowAnimationStyle.BOTTOM",
        "Ti.UI.iOS.RowAnimationStyle.FADE",
        "Ti.UI.iOS.RowAnimationStyle.LEFT",
        "Ti.UI.iOS.RowAnimationStyle.NONE",
        "Ti.UI.iOS.RowAnimationStyle.RIGHT",
        "Ti.UI.iOS.RowAnimationStyle.TOP",
        "Ti.UI.iOS.AnimationStyle.CURL_DOWN",
        "Ti.UI.iOS.AnimationStyle.CURL_UP",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_LEFT",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_RIGHT",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_TOP",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_BOTTOM",
        "Ti.UI.iOS.AnimationStyle.CROSS_DISSOLVE",
        "Ti.UI.iOS.AnimationStyle.NONE"
      ]
    },
    "animator": {
      "description": "Animator resources. See\n<a href=\"https://developer.android.com/reference/android/R.animator.html\">R.animator</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "annotation": {
      "description": "Custom property list information for the target file.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "apiName": {
      "description": "The name of the API that this proxy corresponds to.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "appBadge": {
      "description": "Value of the badge for the application's springboard icon.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "appMusicPlayer": {
      "description": "An instance of <a href=\"Titanium.Media.MusicPlayer\">Titanium.Media.MusicPlayer</a> representing the app-specific music player.",
      "type": "Titanium.Media.MusicPlayer",
      "readOnly": false,
      "values": []
    },
    "appSupportsShakeToEdit": {
      "description": "Determines whether the shake to edit system-wide capability is enabled.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "appVersionCode": {
      "description": "The version number of the application.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "appVersionName": {
      "description": "The version name of the application.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "applicationCacheDirectory": {
      "description": "Path to the application's internal cache directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "applicationDataDirectory": {
      "description": "Path to the application's data directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "applicationDirectory": {
      "description": "Path to the iOS application directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "applicationOpenSettingsURL": {
      "description": "Returns a URL to open the app's settings.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "applicationSupportDirectory": {
      "description": "Path to the application support directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "arch": {
      "description": "Returns the operating system CPU architecture for which the binary was compiled. Possible values are return <code>'arm'</code>, <code>'arm64'</code>, <code>'ia32'</code>, <code>'x64'</code>, <code>'mips'</code>, and <code>'unknown'</code>.\nThe return value is equivalent to <a href=\"os.arch\">os.arch</a>. Relates strongly to <a href=\"Titanium.Platform.architecture\">Titanium.Platform.architecture</a>.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "architecture": {
      "description": "System's processor architecture.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "arguments": {
      "description": "The arguments passed to the application on startup.",
      "type": "launchOptions",
      "readOnly": true,
      "values": []
    },
    "argv": {
      "description": "The <code>process.argv</code> property returns an array containing the command-line arguments passed when the Node.js process was launched.\nThe first element will be <code>process.execPath</code>. See <a href=\"process.argv0\">process.argv0</a> if access to the original value of <code>argv[0]</code> is needed.\nThe second element will be the path to the JavaScript file being executed.\nThe remaining elements will be any additional command-line arguments.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "argv0": {
      "description": "The <code>process.argv0</code> property stores a read-only copy of the original value of <code>argv[0]</code> passed when Node.js starts.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "array": {
      "description": "Array resources. See <a href=\"https://developer.android.com/reference/android/R.array.html\">R.array</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "arrowDirection": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_ANY",
        "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_DOWN",
        "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_LEFT",
        "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_RIGHT",
        "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_UNKNOWN",
        "Ti.UI.iPad.POPOVER_ARROW_DIRECTION_UP",
        "Ti.UI.iOS.MENU_POPUP_ARROW_DIRECTION_UP",
        "Ti.UI.iOS.MENU_POPUP_ARROW_DIRECTION_DOWN",
        "Ti.UI.iOS.MENU_POPUP_ARROW_DIRECTION_LEFT",
        "Ti.UI.iOS.MENU_POPUP_ARROW_DIRECTION_RIGHT",
        "Ti.UI.iOS.MENU_POPUP_ARROW_DIRECTION_DEFAULT"
      ]
    },
    "artist": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "artwork": {
      "description": "Image for the item's artwork as a <code>Blob</code> object,  or <code>null</code> if no artwork is\navailable.",
      "type": "Titanium.Blob",
      "readOnly": false,
      "values": []
    },
    "aspectRatio": {
      "description": "Aspect ratio of the image.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Media.ASPECT_RATIO_4_3",
        "Ti.Media.ASPECT_RATIO_16_9"
      ]
    },
    "assetURL": {
      "description": "A URL pointing to the media item.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "assetsDirectory": {
      "description": "Path of file or directory to allow read access by the WebView.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "atime": {
      "description": "The timestamp indicating the last time this file was accessed.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "atimeMs": {
      "description": "The timestamp indicating the last time this file was accessed expressed in milliseconds since the POSIX Epoch.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "attachments": {
      "description": "Notification attachments to display.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "attendees": {
      "description": "The list of event attendees. This list will be empty if the event has no attendees.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "attr": {
      "description": "Attribute resources. See\n<a href=\"https://developer.android.com/reference/android/R.attr.html\">R.attr</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "attributeSet": {
      "description": "Set of metadata properties to display for the item.",
      "type": "Titanium.App.iOS.SearchableItemAttributeSet",
      "readOnly": true,
      "values": []
    },
    "attributedHintText": {
      "description": "Hint text attributed string.",
      "type": "Titanium.UI.AttributedString",
      "readOnly": true,
      "values": []
    },
    "attributedString": {
      "description": "",
      "type": "Titanium.UI.AttributedString",
      "readOnly": true,
      "values": []
    },
    "attributes": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "audiences": {
      "description": "A class of entity for whom the resource is intended or useful.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "audioBitRate": {
      "description": "The audio bit rate.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "audioChannelCount": {
      "description": "The number of channels in the audio data contained in the file.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "audioEncodingApplication": {
      "description": "The name of the application that encoded the data contained in the audio file.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "audioFocus": {
      "description": "Focuses on the current audio player and stops other audio playing.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "audioPlaying": {
      "description": "Returns <code>true</code> if the device is playing audio.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "audioSampleRate": {
      "description": "The sample rate of the audio data contained in the file.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "audioSessionCategory": {
      "description": "A constant for the audio session category to be used.",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Media.AUDIO_SESSION_CATEGORY_AMBIENT",
        "Ti.Media.AUDIO_SESSION_CATEGORY_PLAYBACK",
        "Ti.Media.AUDIO_SESSION_CATEGORY_PLAY_AND_RECORD",
        "Ti.Media.AUDIO_SESSION_CATEGORY_RECORD",
        "Ti.Media.AUDIO_SESSION_CATEGORY_SOLO_AMBIENT"
      ]
    },
    "audioSessionId": {
      "description": "Returns the audio session id.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "audioStreamType": {
      "description": "The audio stream type to use when playing the sound.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.STREAM_ALARM",
        "Ti.Android.STREAM_DEFAULT",
        "Ti.Android.STREAM_MUSIC",
        "Ti.Android.STREAM_NOTIFICATION",
        "Ti.Android.STREAM_RING",
        "Ti.Android.STREAM_SYSTEM",
        "Ti.Android.STREAM_VOICE_CALL"
      ]
    },
    "audioTrackNumber": {
      "description": "The track number of a song/composition when it is part of an album.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "audioType": {
      "description": "Changes the audio-stream-type.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.Sound.AUDIO_TYPE_ALARM",
        "Ti.Media.Sound.AUDIO_TYPE_SIGNALLING",
        "Ti.Media.Sound.AUDIO_TYPE_MEDIA",
        "Ti.Media.Sound.AUDIO_TYPE_NOTIFICATION",
        "Ti.Media.Sound.AUDIO_TYPE_RING",
        "Ti.Media.Sound.AUDIO_TYPE_VOICE"
      ]
    },
    "authenticationRequired": {
      "description": "Set to true if the action requires the device to be unlocked. On the Apple Watch actions never require authentication.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "authorizationStatus": {
      "description": "The current authorization status for using notifications.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_NOT_DETERMINED",
        "Ti.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_AUTHORIZED",
        "Ti.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_DENIED",
        "Ti.App.iOS.USER_NOTIFICATION_AUTHORIZATION_STATUS_PROVISIONAL"
      ]
    },
    "autoAdjustScrollViewInsets": {
      "description": "Specifies whether or not the view controller should automatically adjust its scroll view insets.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autoEncodeUrl": {
      "description": "Determines whether automatic encoding is enabled for the specified URL.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autoHide": {
      "description": "Indicates if player is hidden by default and shown when its ready.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autoLink": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.AUTOLINK_MAP_ADDRESSES",
        "Ti.UI.AUTOLINK_ALL",
        "Ti.UI.AUTOLINK_CALENDAR",
        "Ti.UI.AUTOLINK_URLS",
        "Ti.UI.AUTOLINK_NONE",
        "Ti.UI.AUTOLINK_PHONE_NUMBERS",
        "Ti.UI.AUTOLINK_SHIPMENT_TRACKING_NUMBER",
        "Ti.UI.AUTOLINK_FLIGHT_NUMBER",
        "Ti.UI.AUTOLINK_LOOKUP_SUGGESTION",
        "Ti.UI.AUTOLINK_MONEY",
        "Ti.UI.AUTOLINK_PHYSICAL_VALUE",
        "Ti.UI.AUTOLINK_EMAIL_ADDRESSES"
      ]
    },
    "autoRedirect": {
      "description": "Determines whether automatic automatic handling of HTTP redirects is enabled.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autoSize": {
      "description": "Automatically scales the label into its size.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autoTabTitle": {
      "description": "If set to <code>true</code> it will automatically set the actionbar title to the current tabs window title.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autocapitalization": {
      "description": "Determines how text is capitalized during typing.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.TEXT_AUTOCAPITALIZATION_ALL",
        "Ti.UI.TEXT_AUTOCAPITALIZATION_NONE",
        "Ti.UI.TEXT_AUTOCAPITALIZATION_SENTENCES",
        "Ti.UI.TEXT_AUTOCAPITALIZATION_WORDS"
      ]
    },
    "autocorrect": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autofillType": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.AUTOFILL_TYPE_USERNAME",
        "Ti.UI.AUTOFILL_TYPE_PASSWORD",
        "Ti.UI.AUTOFILL_TYPE_NAME",
        "Ti.UI.AUTOFILL_TYPE_NAME_PREFIX",
        "Ti.UI.AUTOFILL_TYPE_GIVEN_NAME",
        "Ti.UI.AUTOFILL_TYPE_MIDDLE_NAME",
        "Ti.UI.AUTOFILL_TYPE_FAMILY_NAME",
        "Ti.UI.AUTOFILL_TYPE_NAME_SUFFIX",
        "Ti.UI.AUTOFILL_TYPE_NICKNAME",
        "Ti.UI.AUTOFILL_TYPE_JOB_TITLE",
        "Ti.UI.AUTOFILL_TYPE_ORGANIZATION_NAME",
        "Ti.UI.AUTOFILL_TYPE_LOCATION",
        "Ti.UI.AUTOFILL_TYPE_ADDRESS",
        "Ti.UI.AUTOFILL_TYPE_ADDRESS_LINE1",
        "Ti.UI.AUTOFILL_TYPE_ADDRESS_LINE2",
        "Ti.UI.AUTOFILL_TYPE_ADDRESS_CITY",
        "Ti.UI.AUTOFILL_TYPE_ADDRESS_STATE",
        "Ti.UI.AUTOFILL_TYPE_ADDRESS_CITY_STATE",
        "Ti.UI.AUTOFILL_TYPE_SUBLOCALITY",
        "Ti.UI.AUTOFILL_TYPE_COUNTRY_NAME",
        "Ti.UI.AUTOFILL_TYPE_POSTAL_CODE",
        "Ti.UI.AUTOFILL_TYPE_PHONE",
        "Ti.UI.AUTOFILL_TYPE_EMAIL",
        "Ti.UI.AUTOFILL_TYPE_URL",
        "Ti.UI.AUTOFILL_TYPE_CARD_NUMBER",
        "Ti.UI.AUTOFILL_TYPE_CARD_SECURITY_CODE",
        "Ti.UI.AUTOFILL_TYPE_CARD_EXPIRATION_DATE",
        "Ti.UI.AUTOFILL_TYPE_CARD_EXPIRATION_DAY",
        "Ti.UI.AUTOFILL_TYPE_CARD_EXPIRATION_MONTH",
        "Ti.UI.AUTOFILL_TYPE_CARD_EXPIRATION_YEAR",
        "Ti.UI.AUTOFILL_TYPE_NEW_PASSWORD",
        "Ti.UI.AUTOFILL_TYPE_ONE_TIME_CODE"
      ]
    },
    "autohide": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autoplay": {
      "description": "Indicates if a movie should automatically start playback.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autorepeat": {
      "description": "If YES, the user pressing and holding on the stepper repeatedly alters value.\nThe default value is YES.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autoreverse": {
      "description": "Specifies if the animation should be replayed in reverse upon completion.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "autorotate": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "availability": {
      "description": "Availability of this event.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Calendar.AVAILABILITY_NOTSUPPORTED",
        "Ti.Calendar.AVAILABILITY_BUSY",
        "Ti.Calendar.AVAILABILITY_FREE",
        "Ti.Calendar.AVAILABILITY_TENTATIVE",
        "Ti.Calendar.AVAILABILITY_UNAVAILABLE"
      ]
    },
    "availableCameraMediaTypes": {
      "description": "Array of media type constants supported for the camera.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.Media.MEDIA_TYPE_PHOTO",
        "Ti.Media.MEDIA_TYPE_LIVEPHOTO",
        "Ti.Media.MEDIA_TYPE_VIDEO"
      ]
    },
    "availableCameras": {
      "description": "Array indicating which cameras are available, <code>CAMERA_FRONT</code>, <code>CAMERA_REAR</code> or both.",
      "type": "Array",
      "readOnly": false,
      "values": [
        "Ti.Media.CAMERA_FRONT",
        "Ti.Media.CAMERA_REAR"
      ]
    },
    "availableMemory": {
      "description": "System's unused memory, measured in bytes.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "availablePhotoGalleryMediaTypes": {
      "description": "Array of media type constants supported for saving to the device's camera roll or saved images album.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.Media.MEDIA_TYPE_PHOTO",
        "Ti.Media.MEDIA_TYPE_LIVEPHOTO",
        "Ti.Media.MEDIA_TYPE_VIDEO"
      ]
    },
    "availablePhotoMediaTypes": {
      "description": "Array of media type constants supported for the photo library.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.Media.MEDIA_TYPE_PHOTO",
        "Ti.Media.MEDIA_TYPE_LIVEPHOTO",
        "Ti.Media.MEDIA_TYPE_VIDEO"
      ]
    },
    "availableSystemFontFamilies": {
      "description": "Returns a list of font families that are provided by the system.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "averageMicrophonePower": {
      "description": "Current average microphone level in dB or -1 if microphone monitoring is disabled.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "b": {
      "description": "The entry at position [1,2] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "backButtonTitle": {
      "description": "Title for the back button. This is only valid when the window is a child of a tab.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "backButtonTitleImage": {
      "description": "The image to show as the back button. This is only valid when the window is a child of a tab.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "backItem": {
      "description": "The item immediately preceding the current item.",
      "type": "BackForwardListItem",
      "readOnly": true,
      "values": []
    },
    "backList": {
      "description": "The portion of the list preceding the current item.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "backfillEnd": {
      "description": "Set to <code>true</code> to continue filling with the final color beyond the <code>endPoint</code>.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "backfillStart": {
      "description": "Set to <code>true</code> to continue filling with the starting color beyond the <code>startPoint</code>.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "backgroundColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "backgroundDisabledColor": {
      "description": "Disabled background color of the view, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "backgroundDisabledImage": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "backgroundFocusedColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "backgroundFocusedImage": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "backgroundGradient": {
      "description": "",
      "type": "Gradient",
      "readOnly": true,
      "values": []
    },
    "backgroundImage": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "backgroundLeftCap": {
      "description": "Size of the left end cap.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "backgroundPaddingBottom": {
      "description": "Number of pixels to extend the background image past the label on the bottom.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "backgroundPaddingLeft": {
      "description": "Number of pixels to extend the background image past the label on the left.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "backgroundPaddingRight": {
      "description": "Number of pixels to extend the background image past the label on the right.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "backgroundPaddingTop": {
      "description": "Number of pixels to extend the background image past the label on the top.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "backgroundRepeat": {
      "description": "Determines whether to tile a background across a view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "backgroundSelectedColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "backgroundSelectedGradient": {
      "description": "Background gradient to render when the item is selected.",
      "type": "Gradient",
      "readOnly": true,
      "values": []
    },
    "backgroundSelectedImage": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "backgroundTopCap": {
      "description": "Size of the top end cap.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "backgroundView": {
      "description": "Sets the background view for customization which is always displayed behind movie content. <strong>Deprecated since 7.0.0. Use <a href=\"Titanium.Media.VideoPlayer.overlayView\">Titanium.Media.VideoPlayer.overlayView</a> instead.</strong>",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "backward": {
      "description": "The direction to search from the current selection. The search will respect the writing direction of the document",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "badge": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "badgeBackgroundColor": {
      "description": "If this item displays a badge, this color will be used for the badge's background.\nIf set to null, the default background color will be used instead.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "badgeColor": {
      "description": "If this item displays a badge, this color will be used for the badge's background.\nIf set to null, the default background color will be used instead.\n<strong>Deprecated since 12.2.0. Use <a href=\"Titanium.UI.Tab.badgeBackgroundColor\">Titanium.UI.Tab.badgeBackgroundColor</a> instead.</strong>",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "badgeSetting": {
      "description": "The current badge settings.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "badgeTextColor": {
      "description": "Set the text color of the badge.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "barColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "barImage": {
      "description": "Background image for the nav bar, specified as a URL to a local image.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "base": {
      "description": "file basename, i.e. <code>'file.txt'</code>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "baseURL": {
      "description": "Sets the URL that the web content's paths will be relative to.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "batteryLevel": {
      "description": "Battery level in percent, accessible only when <code>batteryMonitoring</code> is enabled. Measured\nin 5% increments on iPhone/iPad.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "batteryMonitoring": {
      "description": "Determines whether battery monitoring is enabled.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "batteryState": {
      "description": "Indicates the state of the battery. Accessible only when <code>batteryMonitoring</code> is enabled.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Platform.BATTERY_STATE_CHARGING",
        "Ti.Platform.BATTERY_STATE_FULL",
        "Ti.Platform.BATTERY_STATE_UNKNOWN",
        "Ti.Platform.BATTERY_STATE_UNPLUGGED"
      ]
    },
    "bccRecipients": {
      "description": "Recipients of the email included via the <code>BCC</code> (Blind Carbon Copy) field.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "beatsPerMinute": {
      "description": "The number of musical beats per minute for the media item, corresponding\nto the &quot;BPM&quot; field in the Info tab in the &quot;Get Info&quot; dialog in iTunes.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "begin": {
      "description": "",
      "type": "Date",
      "readOnly": false,
      "values": []
    },
    "behavior": {
      "description": "Custom behavior the user notification supports.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_BEHAVIOR_DEFAULT",
        "Ti.App.iOS.USER_NOTIFICATION_BEHAVIOR_TEXTINPUT"
      ]
    },
    "behaviors": {
      "description": "Behaviors associated with this animator.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "bigContentTitle": {
      "description": "Overrides <a href=\"Titanium.Android.Notification.contentTitle\">Titanium.Android.Notification.contentTitle</a> in the big form of the notification. This defaults to the value passed to <a href=\"Titanium.Android.Notification.contentTitle\">Titanium.Android.Notification.contentTitle</a>.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "bigLargeIcon": {
      "description": "Override the <a href=\"Titanium.Android.Notification.largeIcon\">Titanium.Android.Notification.largeIcon</a> when the big notification is shown.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "bigPicture": {
      "description": "Provide the bitmap to be used as the payload for the BigPicture notification.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "bigText": {
      "description": "Sets the longer text to be displayed in the big form of the notification in place of the content text.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "bigint": {
      "description": "Whether the numeric values in the returned <a href=\"fs.Stats\">fs.Stats</a> object should be <code>bigint</code>.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "bindId": {
      "description": "View's ID (or set of IDs) used for data binding. This value must be unique.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "birthday": {
      "description": "Date of birth of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "birthtime": {
      "description": "The timestamp indicating the creation time of this file.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "birthtimeMs": {
      "description": "The timestamp indicating the creation time of this file expressed in milliseconds since the POSIX Epoch.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "bitRate": {
      "description": "Bit rate of the current playback stream.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "blacklistedURLs": {
      "description": "An array of url strings to blacklist.\n<strong>Deprecated since 9.2.0. Use the <a href=\"Titanium.UI.WebView.blockedURLs\">Titanium.UI.WebView.blockedURLs</a> property instead.</strong>",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "blksize": {
      "description": "The file system block size for i/o operations.\nHard-coded to <code>4096</code> on Titanium right now.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "blockedURLs": {
      "description": "An array of url strings to be blocked.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "blocks": {
      "description": "The number of blocks allocated for this file.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "blurRadius": {
      "description": "Specifies the blur radius of the shadow.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "bookmarkTime": {
      "description": "The user's place in the media item the most recent time it was played.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "bool": {
      "description": "Boolean resources. See\n<a href=\"https://developer.android.com/reference/android/R.bool.html\">R.bool</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "borderColor": {
      "description": "Border color of the view, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "borderRadius": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "borderStyle": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.INPUT_BORDERSTYLE_BEZEL",
        "Ti.UI.INPUT_BORDERSTYLE_LINE",
        "Ti.UI.INPUT_BORDERSTYLE_NONE",
        "Ti.UI.INPUT_BORDERSTYLE_ROUNDED",
        "Ti.UI.INPUT_BORDERSTYLE_UNDERLINED",
        "Ti.UI.INPUT_BORDERSTYLE_FILLED"
      ]
    },
    "borderWidth": {
      "description": "Border width of the view.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "bottom": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "bounce": {
      "description": "The animation bounce. If set, the animation uses the iOS 17+ spring animation.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "boundaryIdentifiers": {
      "description": "Boundary identfiers added to this behavior.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "breakLength": {
      "description": "The length at which input values are split across multiple lines. Set to <code>Infinity</code> to format the input as a single line (in combination with <code>compact</code> set to <code>true</code> or any number &gt;= <code>1</code>).",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "breakStrategy": {
      "description": "Break strategy (control over paragraph layout). Check <a href=\"https://developer.android.com/reference/android/widget/TextView#attr_android:breakStrategy\">Android breakStrategy</a> for more infos.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.BREAK_SIMPLE",
        "Ti.UI.BREAK_HIGH_QUALITY",
        "Ti.UI.BREAK_BALANCED"
      ]
    },
    "bubbleParent": {
      "description": "Indicates if the proxy will bubble an event to its parent.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "bubbles": {
      "description": "True if the event will try to bubble up if possible.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "buffer": {
      "description": "",
      "type": "ArrayBuffer",
      "readOnly": true,
      "values": []
    },
    "bufferSize": {
      "description": "Size of the buffer used for streaming, in milliseconds.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "buildDate": {
      "description": "Date of the Titanium build.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "buildHash": {
      "description": "Git hash of the Titanium build.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "buttonClickRequired": {
      "description": "Setting this to true requires the end-user to click a dialog button to close the dialog.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "buttonNames": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "bypassDnd": {
      "description": "Whether or not notifications posted to this channel can interrupt the user.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "byteOffset": {
      "description": "The <code>byteOffset</code> of the <code>Buffer</code>s underlying <code>ArrayBuffer</code> object.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "byteOrder": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "bytesProcessed": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "c": {
      "description": "The entry at position [2,1] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "cache": {
      "description": "Determines whether HTTP responses are cached.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "cacheMode": {
      "description": "Determines how a cache is used in this web view.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.WEBVIEW_LOAD_DEFAULT",
        "Ti.UI.Android.WEBVIEW_LOAD_NO_CACHE",
        "Ti.UI.Android.WEBVIEW_LOAD_CACHE_ONLY",
        "Ti.UI.Android.WEBVIEW_LOAD_CACHE_ELSE_NETWORK"
      ]
    },
    "cachePolicy": {
      "description": "The cache policy for the request.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.CACHE_POLICY_USE_PROTOCOL_CACHE_POLICY",
        "Ti.UI.iOS.CACHE_POLICY_RELOAD_IGNORING_LOCAL_CACHE_DATA",
        "Ti.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_ELSE_LOAD",
        "Ti.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_DONT_LOAD"
      ]
    },
    "cacheSize": {
      "description": "Number of pages to cache (pre-render).",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "calendarAuthorization": {
      "description": "Returns an authorization constant indicating if the application has access to the events in the EventKit.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Calendar.AUTHORIZATION_AUTHORIZED",
        "Ti.Calendar.AUTHORIZATION_DENIED",
        "Ti.Calendar.AUTHORIZATION_RESTRICTED",
        "Ti.Calendar.AUTHORIZATION_UNKNOWN"
      ]
    },
    "calendarID": {
      "description": "Identifier for the recurrence rule's calendar.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "calendarViewShown": {
      "description": "Determines whether the calenderView is visible.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "callback": {
      "description": "Callback function invoked upon receiving a new push notification.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "cameraAuthorization": {
      "description": "Returns the authorization status for the camera.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Media.CAMERA_AUTHORIZATION_AUTHORIZED",
        "Ti.Media.CAMERA_AUTHORIZATION_DENIED",
        "Ti.Media.CAMERA_AUTHORIZATION_RESTRICTED",
        "Ti.Media.CAMERA_AUTHORIZATION_UNKNOWN"
      ]
    },
    "cameraFlashMode": {
      "description": "Determines how the flash is fired when using the device's camera.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.CAMERA_FLASH_AUTO",
        "Ti.Media.CAMERA_FLASH_OFF",
        "Ti.Media.CAMERA_FLASH_ON"
      ]
    },
    "cameraOutputSizes": {
      "description": "Returns an object of possible <code>targetImageWidth</code> and <code>targetImageHeight</code> values. The output\ncontains a <code>cameraType</code> (front or back) and object of width/height values. You have to set\n<code>targetImageWidth</code> and <code>targetImageHeight</code> if you want to change the camera image output size.\nNote: depeneding on your phone and camera the values won't be used or can be different.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "canCancelEvents": {
      "description": "Determines whether this scroll view can cancel subview touches in order to scroll instead.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "canDelete": {
      "description": "Determines whether this item can be deleted when it edit mode.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "canEdit": {
      "description": "Specifies if the item can be deleted by a user initiated action.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "canInsert": {
      "description": "Specifies if the item can be inserted by a user initiated action.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "canMove": {
      "description": "Specifies if the item can be reordered within the list view by a user initiated action.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "canRecord": {
      "description": "<code>true</code> if the device has a recording input device available.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "canScroll": {
      "description": "Determines if the list view can scroll in response to user actions.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "cancel": {
      "description": "",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "cancelBubble": {
      "description": "Set to true to stop the event from bubbling.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "cancelButtonTitle": {
      "description": "The title of the cancel button when the search bar field is focused.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "cancelable": {
      "description": "When <code>true</code> allows the user to cancel the progress dialog by pressing the BACK button.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "canceledOnTouchOutside": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "carPlaySetting": {
      "description": "The current CarPlay settings.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "caseFirst": {
      "description": "Indicates if upper case or lower case characters should sort first.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "caseInsensitiveSearch": {
      "description": "Determines if the search performed is case insensitive.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "caseSensitive": {
      "description": "Whether or not the search should be case sensitive.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "categories": {
      "description": "Set of categories of user notification actions required by the applicaiton to use.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "category": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Android.CATEGORY_ALTERNATIVE",
        "Ti.Android.CATEGORY_BROWSABLE",
        "Ti.Android.CATEGORY_DEFAULT",
        "Ti.Android.CATEGORY_DEVELOPMENT_PREFERENCE",
        "Ti.Android.CATEGORY_EMBED",
        "Ti.Android.CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST",
        "Ti.Android.CATEGORY_HOME",
        "Ti.Android.CATEGORY_INFO",
        "Ti.Android.CATEGORY_LAUNCHER",
        "Ti.Android.CATEGORY_MONKEY",
        "Ti.Android.CATEGORY_OPENABLE",
        "Ti.Android.CATEGORY_PREFERENCE",
        "Ti.Android.CATEGORY_SAMPLE_CODE",
        "Ti.Android.CATEGORY_SELECTED_ALTERNATIVE",
        "Ti.Android.CATEGORY_TAB",
        "Ti.Android.CATEGORY_TEST",
        "Ti.Android.CATEGORY_UNIT_TEST",
        "Ti.Android.CATEGORY_ALARM",
        "Ti.Android.CATEGORY_CALL",
        "Ti.Android.CATEGORY_EMAIL",
        "Ti.Android.CATEGORY_ERROR",
        "Ti.Android.CATEGORY_EVENT",
        "Ti.Android.CATEGORY_MESSAGE",
        "Ti.Android.CATEGORY_PROGRESS",
        "Ti.Android.CATEGORY_PROMO",
        "Ti.Android.CATEGORY_RECOMMENDATION",
        "Ti.Android.CATEGORY_SERVICE",
        "Ti.Android.CATEGORY_SOCIAL",
        "Ti.Android.CATEGORY_STATUS",
        "Ti.Android.CATEGORY_TRANSPORT"
      ]
    },
    "categorySummaryFormat": {
      "description": "A format string for the summary description used when the system groups the category's notifications.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "ccRecipients": {
      "description": "Recipients of the email included via the <code>CC</code> (Carbon Copy) field.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "center": {
      "description": "",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "centerView": {
      "description": "Get or set the center view",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "certificate": {
      "description": "The FairPlay Streaming public certificate to authenticate the content key request.",
      "type": "Titanium.Blob",
      "readOnly": true,
      "values": []
    },
    "channel": {
      "description": "Always <code>undefined</code> in Titanium.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "channelId": {
      "description": "The channel id specified for the notification.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "charset": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Codec.CHARSET_ASCII",
        "Ti.Codec.CHARSET_ISO_LATIN_1",
        "Ti.Codec.CHARSET_UTF8",
        "Ti.Codec.CHARSET_UTF16",
        "Ti.Codec.CHARSET_UTF16BE",
        "Ti.Codec.CHARSET_UTF16LE"
      ]
    },
    "checkable": {
      "description": "Determines if the item can be checked.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "checked": {
      "description": "Determines if the item is checked.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "childNodes": {
      "description": "A <a href=\"Titanium.XML.NodeList\">Titanium.XML.NodeList</a> of this node's children.",
      "type": "Titanium.XML.NodeList",
      "readOnly": false,
      "values": []
    },
    "childTemplates": {
      "description": "Contains an array of subview templates to be added (in order) as children to this view.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "children": {
      "description": "Array of this view's child views.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "city": {
      "description": "City name.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "className": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "clearButtonMode": {
      "description": "Determines when the clear button is displayed.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.INPUT_BUTTONMODE_ALWAYS",
        "Ti.UI.INPUT_BUTTONMODE_NEVER",
        "Ti.UI.INPUT_BUTTONMODE_ONBLUR",
        "Ti.UI.INPUT_BUTTONMODE_ONFOCUS"
      ]
    },
    "clearOnEdit": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "clipMode": {
      "description": "View's clipping behavior.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "clipViews": {
      "description": "Determines whether the previous and next pages are clipped, so that they are not visible\nadjacent to the current page.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "closed": {
      "description": "Determines whether this Window is closed.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "code": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Media.DEVICE_BUSY",
        "Ti.Media.NO_CAMERA",
        "Ti.Media.UNKNOWN_ERROR",
        "Ti.Media.NO_FOCUS"
      ]
    },
    "codecs": {
      "description": "The codecs used to encode/decode the media.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "collisionMode": {
      "description": "Specifies the collision behavior.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.COLLISION_MODE_ALL",
        "Ti.UI.iOS.COLLISION_MODE_BOUNDARY",
        "Ti.UI.iOS.COLLISION_MODE_ITEM"
      ]
    },
    "color": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "colors": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "columnCount": {
      "description": "The number of columns of items in the view.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "columns": {
      "description": "Columns used for this picker, as an array of <a href=\"Titanium.UI.PickerColumn\">Titanium.UI.PickerColumn</a> objects.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "comment": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "comments": {
      "description": "Textual information about the media item, corresponding to the &quot;Comments&quot;\nfield in in the Info tab in the Get Info dialog in iTunes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "compact": {
      "description": "Setting this to <code>false</code> causes each object key to be displayed on a new line. It will also add new lines to text that is longer than <code>breakLength</code>. If set to a number, the most n inner elements are united on a single line as long as all properties fit into <code>breakLength</code>. Short array elements are also grouped together. No text will be reduced below 16 characters, no matter the <code>breakLength</code> size. For more information, see the example below.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "composer": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "composerPersistentID": {
      "description": "The composer persistent ID to filter on. Value should be a Number.",
      "type": "MediaQueryInfoType",
      "readOnly": true,
      "values": []
    },
    "compression": {
      "description": "Audio compression to be used for the recording.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.AUDIO_FORMAT_AAC",
        "Ti.Media.AUDIO_FORMAT_ALAW",
        "Ti.Media.AUDIO_FORMAT_APPLE_LOSSLESS",
        "Ti.Media.AUDIO_FORMAT_ILBC",
        "Ti.Media.AUDIO_FORMAT_IMA4",
        "Ti.Media.AUDIO_FORMAT_LINEAR_PCM",
        "Ti.Media.AUDIO_FORMAT_ULAW"
      ]
    },
    "config": {
      "description": "Always <code>{}</code> in Titanium.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "configuration": {
      "description": "The configuration for the new web view.",
      "type": "Titanium.UI.iOS.WebViewConfiguration",
      "readOnly": true,
      "values": []
    },
    "connected": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "connectionType": {
      "description": "Connection type, normally either <code>GET</code>, <code>POST</code> or <code>PATCH</code>.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "console": {
      "description": "Console logging facilities.",
      "type": "Global.Console",
      "readOnly": true,
      "values": []
    },
    "constants": {
      "description": "",
      "type": "fs.constants",
      "readOnly": true,
      "values": []
    },
    "contactKeywords": {
      "description": "A list of contacts that are somehow associated with this document beyond what is captured as Author.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "contactsAuthorization": {
      "description": "Returns an authorization constant indicating if the application has access to the address book.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Contacts.AUTHORIZATION_AUTHORIZED",
        "Ti.Contacts.AUTHORIZATION_DENIED",
        "Ti.Contacts.AUTHORIZATION_UNKNOWN"
      ]
    },
    "containerDisplayName": {
      "description": "Display of the search container",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "containerIdentifier": {
      "description": "Identifier for the search container",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "containerOrder": {
      "description": "Order the search container is displayed.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "containerTitle": {
      "description": "Title displayed in the search container",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentCreationDate": {
      "description": "The date that the contents of the item were created.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentDescription": {
      "description": "An account of the content of the resource.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentHeight": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "contentInsetEndWithActions": {
      "description": "Returns the margin after the toolbar's content when there are action buttons.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "contentInsetStartWithNavigation": {
      "description": "Returns the margin at the toolbar's content start when there is a navigation button.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "contentIntent": {
      "description": "The <code>PendingIntent</code> to execute when the expanded status entry is clicked.",
      "type": "Titanium.Android.PendingIntent",
      "readOnly": true,
      "values": []
    },
    "contentModificationDate": {
      "description": "The date that the contents of the item were last modified.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentOffset": {
      "description": "X and Y coordinates to which to reposition the top-left point of the scrollable region.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "contentRating": {
      "description": "Whether or not the item has explicit content. Set to <code>1</code> for explicit or <code>0</code> for clean.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "contentScrimColor": {
      "description": "Background color of the small toolbar when the content is scrolled up.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "contentSources": {
      "description": "Used to indicate where the item was obtained from.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "contentText": {
      "description": "Description text of the notification.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentTitle": {
      "description": "Title of the notification.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentType": {
      "description": "UTI Type pedigree for an item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentTypeTree": {
      "description": "Array of strings related to the content tree of the item.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "contentURL": {
      "description": "File URL representing the content to be indexed.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "contentView": {
      "description": "",
      "type": "Titanium.Android.RemoteViews",
      "readOnly": true,
      "values": []
    },
    "contentWidth": {
      "description": "Width of the scrollable region.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "continuous": {
      "description": "If YES, value change events are sent immediately when the value changes during user interaction.\nIf NO, a value change event is sent when user interaction ends.\nThe default value is YES.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "continuousUpdate": {
      "description": "Determines if the scrolling event should fire every time there is a new visible item.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "contributors": {
      "description": "Used to designate the entity responsible for making contributions to the content of the resource.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "coords": {
      "description": "If <code>success</code> is true, actual location data for this update.",
      "type": "LocationCoordinates",
      "readOnly": true,
      "values": []
    },
    "copyright": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "countDownDuration": {
      "description": "Duration in milliseconds used for a Countdown Timer picker.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "country": {
      "description": "Country name.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "countryCode": {
      "description": "Country code.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "country_code": {
      "description": "Country code. Same as <code>countryCode</code>.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "coverage": {
      "description": "Used to designate the extent or scope of the content of the resource.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "creator": {
      "description": "Application used to create the document content (e.g. &quot;Word&quot;,&quot;Framemaker&quot;, etc.).",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "criticalAlertSetting": {
      "description": "The authorization status to play sounds for critical alerts.\nAvailable in Titanium SDK 7.4.0 and later.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "cropRect": {
      "description": "Simple object defining the user's selected crop rectangle, or <code>null</code> if the user has not edited the photo. <code>width</code>/<code>height</code> values are assumed to be in pixels.",
      "type": "Dimension",
      "readOnly": true,
      "values": []
    },
    "ctime": {
      "description": "The timestamp indicating the last time the file status was changed.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "ctimeMs": {
      "description": "The timestamp indicating the last time the file status was changed expressed in milliseconds since the POSIX Epoch.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ctor": {
      "description": "When <code>warning</code> is a <code>String</code>, <code>ctor</code> is an optional function used to limit the generated stack trace.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "currency": {
      "description": "Set to the ISO 4217 currency code to use when formatting with the currency style.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "currencyDisplay": {
      "description": "Indicates how the currency symbol or name should be shown.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "currentActivity": {
      "description": "References the top-most window's activity.",
      "type": "Titanium.Android.Activity",
      "readOnly": false,
      "values": []
    },
    "currentCountry": {
      "description": "Country of the current system locale, as an ISO 2-letter code.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "currentItem": {
      "description": "The current item.",
      "type": "BackForwardListItem",
      "readOnly": true,
      "values": []
    },
    "currentLanguage": {
      "description": "Language of the current system locale, as an ISO 2-letter code.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "currentLocale": {
      "description": "Current system locale, as a combination of ISO 2-letter language and country codes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "currentPage": {
      "description": "Index of the active page.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "currentPageIndicatorColor": {
      "description": "Color for the current page of the paging control, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "currentPlaybackTime": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "currentRoute": {
      "description": "Returns a description of the current route, consisting of zero or more input ports and zero or more output ports.",
      "type": "RouteDescription",
      "readOnly": false,
      "values": []
    },
    "currentService": {
      "description": "",
      "type": "Titanium.Android.Service",
      "readOnly": false,
      "values": []
    },
    "currentUserNotificationSettings": {
      "description": "Notification types and user notification categories the application is registered to use.\n<strong>Deprecated since 7.3.0. Use <a href=\"Titanium.App.iOS.UserNotificationCenter.requestUserNotificationSettings\">Titanium.App.iOS.UserNotificationCenter.requestUserNotificationSettings</a> instead.</strong>",
      "type": "UserNotificationSettings",
      "readOnly": false,
      "values": []
    },
    "curve": {
      "description": "Animation curve or easing function to apply to the animation.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.ANIMATION_CURVE_EASE_IN",
        "Ti.UI.ANIMATION_CURVE_EASE_IN_OUT",
        "Ti.UI.ANIMATION_CURVE_EASE_OUT",
        "Ti.UI.ANIMATION_CURVE_LINEAR"
      ]
    },
    "customInspect": {
      "description": "If <code>false</code>, <code>[util.inspect.custom](depth, opts)</code> functions are not invoked.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "customSize": {
      "description": "Size of the button",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "customView": {
      "description": "Sets a view to be used for a custom navigation mode.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "cutoutSize": {
      "description": "Returns the position and shape of the Android notch. Read more about the notch <a href=\"https://developer.android.com/develop/ui/views/layout/display-cutout\">here</a>.",
      "type": "CutoutSize",
      "readOnly": false,
      "values": []
    },
    "d": {
      "description": "The entry at position [2,2] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "damping": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "dampingRatio": {
      "description": "The damping ratio for the spring animation as it approaches its quiescent state.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "data": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "date": {
      "description": "",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "dateAdded": {
      "description": "Date when the item was added to the music library.",
      "type": "Date",
      "readOnly": false,
      "values": []
    },
    "datePickerStyle": {
      "description": "Determines how a date or time picker should appear.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.DATE_PICKER_STYLE_AUTOMATIC",
        "Ti.UI.DATE_PICKER_STYLE_WHEELS",
        "Ti.UI.DATE_PICKER_STYLE_COMPACT",
        "Ti.UI.DATE_PICKER_STYLE_INLINE"
      ]
    },
    "dateStyle": {
      "description": "Specifies the locale's built-in month, day, and year formatting styles.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "dateTimeColor": {
      "description": "Sets the text color of date- and time-pickers.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "day": {
      "description": "Indicates how the numeric day should be formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "dayPeriod": {
      "description": "Indicates how the AM/PM time component should be shown.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "daysOfTheMonth": {
      "description": "The days of the month that the event occurs, as an array of number objects.\nValues can be from 1 to 31 and from -1 to -31. This parameter is only valid for\nrecurrence rules of type\n<a href=\"Titanium.Calendar.RECURRENCEFREQUENCY_MONTHLY\">RECURRENCEFREQUENCY_MONTHLY</a>.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "daysOfTheWeek": {
      "description": "The days of the week that the event occurs, as an array of objects <code>daysOfWeek</code> and <code>Week</code>.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "daysOfTheYear": {
      "description": "The days of the year that the event occurs, as an array of number objects.\nValues can be from 1 to 366 and from -1 to -366. This parameter is only valid for\nrecurrence rules of type <a href=\"Titanium.Calendar.RECURRENCEFREQUENCY_YEARLY\">RECURRENCEFREQUENCY_YEARLY</a>.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "daysOfWeek": {
      "description": "The day of the week. Values are from 1 to 7, with Sunday being 1.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "debugPort": {
      "description": "The port used by the debugger when enabled.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "decelerationRate": {
      "description": "The deceleration rate of the ScrollView.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.SCROLL_DECELERATION_RATE_FAST",
        "Ti.UI.iOS.SCROLL_DECELERATION_RATE_NORMAL"
      ]
    },
    "decodeRetries": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "decrementDisabledImage": {
      "description": "Background image for the stepper decrement button in its disabled state, specified as a local\nfile path or URL. The decrement button enters a disabled state ones the value is equal to the\nminimumValue , setting the enabled property to false will have no effect to decrement button state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "decrementImage": {
      "description": "Background image for the stepper decrement button in its normal state, specified as a local\nfile path or URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "defaultCalendar": {
      "description": "Calendar that events are added to by default, as specified by user settings.",
      "type": "Titanium.Calendar.Calendar",
      "readOnly": false,
      "values": []
    },
    "defaultImage": {
      "description": "Local path to the default image to display while loading a remote image.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "defaultItemTemplate": {
      "description": "Sets the default template for list data items that do not specify the <code>template</code> property.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "defaultMaxListeners": {
      "description": "The default number of maximum listeners for all EventEmitters",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "defaults": {
      "description": "Specifies which values should be taken from the defaults.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.DEFAULT_ALL",
        "Ti.Android.DEFAULT_LIGHTS",
        "Ti.Android.DEFAULT_SOUND",
        "Ti.Android.DEFAULT_VIBRATE"
      ]
    },
    "delay": {
      "description": "Delay, in milliseconds before starting the animation.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "deleteButtonTitle": {
      "description": "Text to display on the delete button when editable is enabled",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "deleteIntent": {
      "description": "The <code>PendingIntent</code> to execute when the status entry is deleted by the user with the &quot;Clear All Notifications&quot; button.",
      "type": "Titanium.Android.PendingIntent",
      "readOnly": true,
      "values": []
    },
    "delimiter": {
      "description": "Provides the platform-specific path delimiter:\n<code>;</code> for Windows\n<code>:</code> for POSIX",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "deliveryType": {
      "description": "The delivery type of the item.  Set to <code>0</code> for fast start and <code>1</code> for RTSP.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "density": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "department": {
      "description": "Department of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "deployType": {
      "description": "Build type that reflects how the application was packaged.\nReturns one of the following values:\n<ul>\n<li><code>development</code> (Simulator)</li>\n<li><code>test</code> (Device)</li>\n<li><code>production</code> (App Store / Adhoc)</li>\n</ul>",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "depth": {
      "description": "Specifies the number of times to recurse while formatting object. This is useful for inspecting large objects. To recurse up to the maximum call stack size pass <code>Infinity</code> or <code>null</code>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "description": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "dest": {
      "description": "Destination buffer.",
      "type": "Titanium.Buffer",
      "readOnly": true,
      "values": []
    },
    "destPosition": {
      "description": "Index in the <code>dest</code> buffer of the first byte of the encoded string.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "destructive": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "detail": {
      "description": "Additional text to include with the error.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "detailView": {
      "description": "Window for the detail view section of the SplitWindow.",
      "type": "Titanium.UI.Window",
      "readOnly": true,
      "values": []
    },
    "dev": {
      "description": "The numeric identifier of the device containing the file.\nAlways returns <code>0</code> on Titanium.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "deviceToken": {
      "description": "The device token which this device was registered for.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "dimBackgroundForSearch": {
      "description": "A Boolean indicating whether the underlying content is dimmed during a search.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "dimen": {
      "description": "Dimension resources.  See\n<a href=\"https://developer.android.com/reference/android/R.dimen.html\">https://developer.android.com/reference/android/R.dimen.html</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "dir": {
      "description": "directory path",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "director": {
      "description": "Director of the item, for example, the movie director.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "disableBounce": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "disableContextMenu": {
      "description": "Determines whether or not the webview should not be able to display the context menu.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "disableNetworkActivityIndicator": {
      "description": "Prevents network activity indicator from being displayed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "disabledColor": {
      "description": "Text color of the button in its disabled state, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "disabledLeftTrackImage": {
      "description": "Image URL of the slider left track when in the disabled state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "disabledRightTrackImage": {
      "description": "Image URL of the slider right track when in the disabled state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "disabledThumbImage": {
      "description": "Image URL of the slider thumb when in the disabled state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "discCount": {
      "description": "Total number of discs for the album containing this item.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "discNumber": {
      "description": "Disc number for this item in the album.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "displayAddress": {
      "description": "Display address. Identical to <code>address</code>.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "displayCaps": {
      "description": "Returns the DisplayCaps object.",
      "type": "Titanium.Platform.DisplayCaps",
      "readOnly": false,
      "values": []
    },
    "displayHomeAsUp": {
      "description": "Displays an &quot;up&quot; affordance on the &quot;home&quot; area of the action bar.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "displayName": {
      "description": "A localized string to be displayed in the UI for this item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "distance": {
      "description": "Distance, in points, between the two attachment points.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "distanceFilter": {
      "description": "The minimum change of position (in meters) before a 'location' event is fired.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "doctype": {
      "description": "An interface to the list of entities that are defined for the document, such as via a Document Type Definition (DTD).",
      "type": "Titanium.XML.DocumentType",
      "readOnly": false,
      "values": []
    },
    "documentElement": {
      "description": "Root element of this document.",
      "type": "Titanium.XML.Element",
      "readOnly": false,
      "values": []
    },
    "domain": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "domainIdentifier": {
      "description": "Identifier that represents the &quot;domain&quot; or owner of this item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "downloadedDate": {
      "description": "The date that the file was last downloaded / received.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "dpi": {
      "description": "Display density expressed as dots-per-inch.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "drawable": {
      "description": "Drawable resources. See\n<a href=\"https://developer.android.com/reference/android/R.drawable.html\">R.drawable</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "drawerIndicatorEnabled": {
      "description": "Determine the drawer indicator status",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "drawerLockMode": {
      "description": "Get or set the drawerLockMode",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_LOCKED_CLOSED",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_LOCKED_OPEN",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_UNDEFINED",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_UNLOCKED"
      ]
    },
    "duration": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.NOTIFICATION_DURATION_LONG",
        "Ti.UI.NOTIFICATION_DURATION_SHORT"
      ]
    },
    "editActions": {
      "description": "Specifies custom action items to be shown when when a list item is edited.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "editButtonTitle": {
      "description": "Title for the edit button on the <strong>More</strong> tab.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "editable": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "editing": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "editors": {
      "description": "The list of editor/editors that have worked on this item.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "effect": {
      "description": "The effect you provide for the view.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_EXTRA_LIGHT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_LIGHT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_DARK",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_REGULAR",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_PROMINENT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_MATERIAL",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL_LIGHT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL_LIGHT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_MATERIAL_LIGHT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL_LIGHT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL_LIGHT",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL_DARK",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL_DARK",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_MATERIAL_DARK",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL_DARK",
        "Ti.UI.iOS.BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL_DARK"
      ]
    },
    "elasticity": {
      "description": "Specifies the elasticity applied to collisions for this item.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "elevation": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "eligibleForHandoff": {
      "description": "Set to true if this user activity should be eligible to be handed off to another device",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "eligibleForPrediction": {
      "description": "A Boolean value that determines whether Siri can suggest the user activity as a shortcut to the user.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "eligibleForPublicIndexing": {
      "description": "Set to <code>true</code> if the user activity can be publicly accessed by all iOS users.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "eligibleForSearch": {
      "description": "Set to true if the user activity should be added to the on-device index.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "ellipsize": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_WORD_WRAP",
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_CHAR_WRAP",
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_CLIP",
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_START",
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_MIDDLE",
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_END",
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_MARQUEE",
        "Ti.UI.TEXT_ELLIPSIZE_TRUNCATE_NONE"
      ]
    },
    "email": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "enableCopy": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "enableJavascriptInterface": {
      "description": "Enable adding javascript interfaces internally to webview prior to JELLY_BEAN_MR1 (Android 4.2)",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "enableKeepAlive": {
      "description": "Determines whether the client should attempt to keep a persistent connection.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "enableLights": {
      "description": "Whether notifications posted to this channel should display notification lights",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "enableReturnKey": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "enableVibration": {
      "description": "Whether notification posted to this channel should vibrate.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "enableZoomControls": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "enabled": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "encoding": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "encodingApplications": {
      "description": "Software used to convert the original content into a PDF stream.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "end": {
      "description": "",
      "type": "Date",
      "readOnly": false,
      "values": []
    },
    "endDate": {
      "description": "End date of the recurrence end, or undefined if the recurrence end is count-based.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "endPlaybackTime": {
      "description": "The end time of movie playback, in milliseconds.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "endPoint": {
      "description": "End point for the gradient.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "endRadius": {
      "description": "For a radial gradient, the radius at the <code>endPoint</code>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "entities": {
      "description": "A <a href=\"Titanium.XML.NamedNodeMap\">Titanium.XML.NamedNodeMap</a> containing the general entities, both external and internal, declared in the DTD. Parameter entities are not contained. Duplicates are discarded.",
      "type": "Titanium.XML.NamedNodeMap",
      "readOnly": false,
      "values": []
    },
    "env": {
      "description": "This is an object whose keys are environment variable names and whose values are the related environmnet variable values.\nIn Titanium, we will pass along environment variables from the system/CLI to the app for <code>'development'</code> builds,\n<em>but will not do so for <code>'production'</code> builds!</em>",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "era": {
      "description": "Indicates how the era name, such as AD or BC, should be shown.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "errno": {
      "description": "Error constants",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "error": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "eventId": {
      "description": "Identifier of the event for which this alert is set.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "events": {
      "description": "",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "exact": {
      "description": "Whether or not the predicate is for an exact match.  The default is <code>true</code>.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "execArgv": {
      "description": "Always <code>[]</code> in Titanium.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "execPath": {
      "description": "Always <code>''</code> in Titanium.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "executable": {
      "description": "<code>true</code> if the file is executable.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "exitCode": {
      "description": "Unused in Titanium.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "exitOnClose": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "expected": {
      "description": "",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "experimental": {
      "description": "Only used for a BottomNavigation setup. If set to <code>true</code> it will use an optimized BottomNavigation\nsetup with fixes for Material 3 layouts and new properties: <code>indicatorColor</code> and <code>iconFamily</code>.\nThe new BottomNavigation will only load the active Activity and doesn't support <code>swipeable</code>.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "expirationDate": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "expiryDate": {
      "description": "The expiration Date of the cookie.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "ext": {
      "description": "file extension, i.e. <code>'.txt'</code>. Ignored if <code>pathObject.base</code> exists",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "extendBackground": {
      "description": "If <code>true</code>, the background of the toolbar extends upwards.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "extendEdges": {
      "description": "An array of supported values specified using the EXTEND_EDGE constants in <a href=\"Titanium.UI\">Titanium.UI</a>.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.UI.EXTEND_EDGE_TOP",
        "Ti.UI.EXTEND_EDGE_BOTTOM",
        "Ti.UI.EXTEND_EDGE_LEFT",
        "Ti.UI.EXTEND_EDGE_RIGHT",
        "Ti.UI.EXTEND_EDGE_NONE",
        "Ti.UI.EXTEND_EDGE_ALL"
      ]
    },
    "extendSafeArea": {
      "description": "Specifies whether the screen insets/notches are allowed to overlap the window's content or not.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "extendedProperties": {
      "description": "Extended properties of this event.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "externalCacheDirectory": {
      "description": "Path to the app's sandboxed cache folder on removable storage, such as SD card.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "externalPlaybackActive": {
      "description": "Indicates whether the player is currently playing video in &quot;external playback&quot; mode.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "externalStorageDirectory": {
      "description": "Path to the app's sandboxed folder on removable storage, such as SD card.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "extraAttributes": {
      "description": "A dictionary of the additional attributes.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "fairPlayConfiguration": {
      "description": "Handle DRM-encrypted video assets using the <a href=\"https://developer.apple.com/streaming/fps/\">Apple FairPlay Streaming API</a>.",
      "type": "FairPlayConfiguration",
      "readOnly": true,
      "values": []
    },
    "fastScroll": {
      "description": "Sets the fastScroll mode on Android ListViews.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "fieldBackgroundDisabledImage": {
      "description": "Background image of the text field in disabled state, specified as a local file path or URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "fieldBackgroundImage": {
      "description": "Background image of the text field, specified as a local file path or URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "fieldCount": {
      "description": "The number of columns in this result set.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "fields": {
      "description": "Field names to show when selecting properties. By default, shows all available.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "file": {
      "description": "",
      "type": "Titanium.Filesystem.File",
      "readOnly": false,
      "values": []
    },
    "fileSize": {
      "description": "Size of the document in MB.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "filterAlwaysInclude": {
      "description": "This row will always be visible when you filter your content.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "filterAnchored": {
      "description": "Determines whether the search is limited to the start of the string",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "filterAttribute": {
      "description": "Filter attribute to be used when searching.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "filterCaseInsensitive": {
      "description": "Determines whether the search is case insensitive.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "filterTouchesWhenObscured": {
      "description": "Discards touch related events if another app's system overlay covers the view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "filteredItemCount": {
      "description": "Returns the item count of the section, also incorporating the search filter if active.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "firstChild": {
      "description": "This node's first child.",
      "type": "Titanium.XML.Node",
      "readOnly": false,
      "values": []
    },
    "firstLineHeadIndent": {
      "description": "The indentation of the first line of the receiver.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "firstName": {
      "description": "First name of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "firstPhonetic": {
      "description": "Phonetic first name of the person.  Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "fixedSize": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "flag": {
      "description": "See support of file system flags.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "flagSecure": {
      "description": "Treat the content of the window as secure, preventing it from appearing in screenshots or from being viewed on non-secure displays.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "flags": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.FLAG_ACTIVITY_BROUGHT_TO_FRONT",
        "Ti.Android.FLAG_ACTIVITY_CLEAR_TOP",
        "Ti.Android.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET",
        "Ti.Android.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS",
        "Ti.Android.FLAG_ACTIVITY_FORWARD_RESULT",
        "Ti.Android.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY",
        "Ti.Android.FLAG_ACTIVITY_MULTIPLE_TASK",
        "Ti.Android.FLAG_ACTIVITY_NEW_TASK",
        "Ti.Android.FLAG_ACTIVITY_NO_ANIMATION",
        "Ti.Android.FLAG_ACTIVITY_NO_HISTORY",
        "Ti.Android.FLAG_ACTIVITY_NO_USER_ACTION",
        "Ti.Android.FLAG_ACTIVITY_PREVIOUS_IS_TOP",
        "Ti.Android.FLAG_ACTIVITY_REORDER_TO_FRONT",
        "Ti.Android.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED",
        "Ti.Android.FLAG_ACTIVITY_SINGLE_TOP",
        "Ti.Android.FLAG_DEBUG_LOG_RESOLUTION",
        "Ti.Android.FLAG_FROM_BACKGROUND",
        "Ti.Android.FLAG_GRANT_READ_URI_PERMISSION",
        "Ti.Android.FLAG_GRANT_WRITE_URI_PERMISSION",
        "Ti.Android.FLAG_RECEIVER_REGISTERED_ONLY",
        "Ti.Android.FLAG_CANCEL_CURRENT",
        "Ti.Android.FLAG_IMMUTABLE",
        "Ti.Android.FLAG_MUTABLE",
        "Ti.Android.FLAG_NO_CREATE",
        "Ti.Android.FLAG_ONE_SHOT",
        "Ti.Android.FLAG_UPDATE_CURRENT",
        "Ti.Android.FLAG_AUTO_CANCEL",
        "Ti.Android.FLAG_INSISTENT",
        "Ti.Android.FLAG_NO_CLEAR",
        "Ti.Android.FLAG_ONGOING_EVENT",
        "Ti.Android.FLAG_ONLY_ALERT_ONCE",
        "Ti.Android.FLAG_SHOW_LIGHTS",
        "Ti.Android.WAKE_LOCK_PARTIAL",
        "Ti.Android.WAKE_LOCK_FULL",
        "Ti.Android.WAKE_LOCK_SCREEN_DIM",
        "Ti.Android.WAKE_LOCK_SCREEN_BRIGHT",
        "Ti.Android.WAKE_LOCK_ACQUIRE_CAUSES_WAKEUP",
        "Ti.Android.WAKE_LOCK_ON_AFTER_RELEASE",
        "Ti.UI.Android.SCROLL_FLAG_ENTER_ALWAYS",
        "Ti.UI.Android.SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED",
        "Ti.UI.Android.SCROLL_FLAG_EXIT_UNTIL_COLLAPSED",
        "Ti.UI.Android.SCROLL_FLAG_NO_SCROLL",
        "Ti.UI.Android.SCROLL_FLAG_SCROLL",
        "Ti.UI.Android.SCROLL_FLAG_SNAP",
        "Ti.UI.Android.SCROLL_FLAG_SNAP_MARGINS"
      ]
    },
    "floor": {
      "description": "The floor of the building on which the user is located.",
      "type": "LocationCoordinatesFloor",
      "readOnly": true,
      "values": []
    },
    "focusable": {
      "description": "Whether view should be focusable while navigating with the trackball.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "focused": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "font": {
      "description": "",
      "type": "Font",
      "readOnly": true,
      "values": []
    },
    "fontFamily": {
      "description": "Specifies the font family or specific font to use.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "fontNames": {
      "description": "Array of font names used in the item.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "fontSize": {
      "description": "Font size, in platform-dependent units.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "fontStyle": {
      "description": "Font style. Valid values are &quot;italic&quot; or &quot;normal&quot;.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "fontWeight": {
      "description": "Font weight. Valid values are &quot;bold&quot;, &quot;semibold&quot;, &quot;normal&quot;, &quot;thin&quot;,\n&quot;light&quot; and &quot;ultralight&quot;.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "footer": {
      "description": "The footer title of the row. <strong>Deprecated since 10.0.0. Use the <a href=\"Titanium.UI.TableViewRow.footerTitle\">Titanium.UI.TableViewRow.footerTitle</a> property instead.</strong>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "footerDividersEnabled": {
      "description": "When set to false, the ListView will not draw the divider before the footer view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "footerTitle": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "footerView": {
      "description": "",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "force": {
      "description": "When <code>true</code>, exceptions will be ignored if path does not exist.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "forceModal": {
      "description": "Indicates whether the window enforces modal behaviour.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "forceSplashAsSnapshot": {
      "description": "Shows the application's splash screen on app resume.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "forceTouchSupported": {
      "description": "Determines if the 3D-Touch capability &quot;Force Touch&quot; is supported (<code>true</code>) or not (<code>false</code>) by the device.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "forceUpdates": {
      "description": "Optimize the <code>continuousUpdate</code> scrolling event.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "format": {
      "description": "Audio format to be used for the recording.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.AUDIO_FILEFORMAT_3GP2",
        "Ti.Media.AUDIO_FILEFORMAT_3GPP",
        "Ti.Media.AUDIO_FILEFORMAT_AIFF",
        "Ti.Media.AUDIO_FILEFORMAT_AMR",
        "Ti.Media.AUDIO_FILEFORMAT_CAF",
        "Ti.Media.AUDIO_FILEFORMAT_MP3",
        "Ti.Media.AUDIO_FILEFORMAT_MP4",
        "Ti.Media.AUDIO_FILEFORMAT_MP4A",
        "Ti.Media.AUDIO_FILEFORMAT_WAVE"
      ]
    },
    "format24": {
      "description": "Determines whether the Time pickers display in 24-hour or 12-hour clock format.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "formatMatcher": {
      "description": "The format matching algorithm to use.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "forwardItem": {
      "description": "The item immediately following the current item.",
      "type": "BackForwardListItem",
      "readOnly": true,
      "values": []
    },
    "forwardList": {
      "description": "The portion of the list following the current item.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "fraction": {
      "description": "Fraction resources. See\n<a href=\"https://developer.android.com/reference/android/R.fraction.html\">R.fraction</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "fractionalSecondDigits": {
      "description": "Number of millisecond digits to show. Valid values are 0-3.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "frequency": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Calendar.RECURRENCEFREQUENCY_DAILY",
        "Ti.Calendar.RECURRENCEFREQUENCY_WEEKLY",
        "Ti.Calendar.RECURRENCEFREQUENCY_MONTHLY",
        "Ti.Calendar.RECURRENCEFREQUENCY_YEARLY"
      ]
    },
    "friction": {
      "description": "Specifies the linear resistance of the item when it slides against another item.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "fromStream": {
      "description": "Stream being read from.",
      "type": "Titanium.IOStream",
      "readOnly": true,
      "values": []
    },
    "fullName": {
      "description": "Localized full name of the person. Single value. Read-only on Android.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "fullscreen": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "fullyFormattedAddress": {
      "description": "The fully formatted address of the item (obtained from MapKit).",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "generalMIDISequence": {
      "description": "Used to indicates whether the MIDI sequence contained in the file is setup for use with a General MIDI device.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "generatedMessage": {
      "description": "Indicates if the message was auto-generated (<code>true</code>) or not.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "genre": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "genrePersistentID": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "getters": {
      "description": "If set to <code>true</code>, getters are inspected. If set to <code>'get'</code>, only getters without a corresponding setter are inspected. If set to <code>'set'</code>, only getters with a corresponding setter are inspected. This might cause side effects depending on the getter function.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "gid": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "global": {
      "description": "Reference to the global object itself.",
      "type": "Global",
      "readOnly": true,
      "values": []
    },
    "gravity": {
      "description": "Determines the location at which the notification should appear on the screen.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.GRAVITY_AXIS_CLIP",
        "Ti.UI.Android.GRAVITY_AXIS_PULL_AFTER",
        "Ti.UI.Android.GRAVITY_AXIS_PULL_BEFORE",
        "Ti.UI.Android.GRAVITY_AXIS_SPECIFIED",
        "Ti.UI.Android.GRAVITY_AXIS_X_SHIFT",
        "Ti.UI.Android.GRAVITY_AXIS_Y_SHIFT",
        "Ti.UI.Android.GRAVITY_BOTTOM",
        "Ti.UI.Android.GRAVITY_CENTER",
        "Ti.UI.Android.GRAVITY_CENTER_HORIZONTAL",
        "Ti.UI.Android.GRAVITY_CENTER_VERTICAL",
        "Ti.UI.Android.GRAVITY_CLIP_HORIZONTAL",
        "Ti.UI.Android.GRAVITY_CLIP_VERTICAL",
        "Ti.UI.Android.GRAVITY_DISPLAY_CLIP_HORIZONTAL",
        "Ti.UI.Android.GRAVITY_DISPLAY_CLIP_VERTICAL",
        "Ti.UI.Android.GRAVITY_END",
        "Ti.UI.Android.GRAVITY_FILL",
        "Ti.UI.Android.GRAVITY_FILL_HORIZONTAL",
        "Ti.UI.Android.GRAVITY_FILL_VERTICAL",
        "Ti.UI.Android.GRAVITY_HORIZONTAL_GRAVITY_MASK",
        "Ti.UI.Android.GRAVITY_LEFT",
        "Ti.UI.Android.GRAVITY_NO_GRAVITY",
        "Ti.UI.Android.GRAVITY_RELATIVE_HORIZONTAL_GRAVITY_MASK",
        "Ti.UI.Android.GRAVITY_RELATIVE_LAYOUT_DIRECTION",
        "Ti.UI.Android.GRAVITY_RIGHT",
        "Ti.UI.Android.GRAVITY_START",
        "Ti.UI.Android.GRAVITY_TOP",
        "Ti.UI.Android.GRAVITY_VERTICAL_GRAVITY_MASK"
      ]
    },
    "gravityDirection": {
      "description": "Specifies the direction of the gravity vector as an x, y pair.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "groupId": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "groupKey": {
      "description": "The group key that the notification will belong to.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "groupSummary": {
      "description": "Specifies if this is a group summary notification.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "grouping": {
      "description": "A constant that specifies the ordering of the result array.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.MUSIC_MEDIA_GROUP_TITLE",
        "Ti.Media.MUSIC_MEDIA_GROUP_ALBUM",
        "Ti.Media.MUSIC_MEDIA_GROUP_ARTIST",
        "Ti.Media.MUSIC_MEDIA_GROUP_ALBUM_ARTIST",
        "Ti.Media.MUSIC_MEDIA_GROUP_COMPOSER",
        "Ti.Media.MUSIC_MEDIA_GROUP_GENRE",
        "Ti.Media.MUSIC_MEDIA_GROUP_PLAYLIST",
        "Ti.Media.MUSIC_MEDIA_GROUP_PODCAST_TITLE"
      ]
    },
    "guid": {
      "description": "Application globally-unique ID, determined by <code>tiapp.xml</code>.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "handleLinks": {
      "description": "Specifies if the text area should allow user interaction with the given URL in the given range of text.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "handlePlatformUrl": {
      "description": "Lets the webview handle platform supported urls <strong>Deprecated since 8.0.0. This property in no more supported in Titanium SDK 8.0.0+. Use property <a href=\"Titanium.UI.WebView.allowedURLSchemes\">Titanium.UI.WebView.allowedURLSchemes</a>\nin conjuction with <a href=\"Titanium.UI.WebView.handleurl\">Titanium.UI.WebView.handleurl</a>. See the example section\n&quot;Usage of allowedURLSchemes and handleurl in iOS&quot;.</strong>",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hasAlarm": {
      "description": "Indicates whether an alarm is scheduled for this event.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "hasCheck": {
      "description": "Determines whether a system-provided checkmark is displayed on the right-hand side of\nthe row.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hasChild": {
      "description": "Determines whether a system-provided arrow is displayed on the right-hand side of the row.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hasCompass": {
      "description": "Indicates whether the current device supports a compass.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "hasContentPending": {
      "description": "Returns <code>true</code> if there is more content for the session to deliver.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "hasDetail": {
      "description": "Determines whether a system-provided detail disclosure button is displayed on the right-hand\nside of the row.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hasProtectedAsset": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "headIndent": {
      "description": "The indentation of the lines of lines other than the first.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "header": {
      "description": "The header title of the row. <strong>Deprecated since 10.0.0. Use the <a href=\"Titanium.UI.TableViewRow.headerTitle\">Titanium.UI.TableViewRow.headerTitle</a> property instead.</strong>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "headerDividersEnabled": {
      "description": "When set to false, the ListView will not draw the divider after the header view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "headerPullView": {
      "description": "View positioned above the first row that is only revealed when the user drags the table\ncontents down.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "headerTitle": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "headerView": {
      "description": "",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "heading": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "headingFilter": {
      "description": "Minimum heading change (in degrees) before a <code>heading</code> event is fired.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "headingTime": {
      "description": "Interval in milliseconds before a <code>heading</code> event is fired.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "height": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.FILL",
        "Ti.UI.SIZE"
      ]
    },
    "hidden": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "hiddenBehavior": {
      "description": "Sets the behavior when hiding an object to release or keep the free space",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.HIDDEN_BEHAVIOR_INVISIBLE",
        "Ti.UI.HIDDEN_BEHAVIOR_GONE"
      ]
    },
    "hiddenPreviewsBodyPlaceholder": {
      "description": "The placeholder text to display when notification previews are disabled for the app.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "hideLoadIndicator": {
      "description": "Hides activity indicator when loading remote URL.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hideSearchOnSelection": {
      "description": "Determines whether the search field should hide on completion.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hideShadow": {
      "description": "Set this to true to hide the shadow image of the navigation bar.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hidesBackButton": {
      "description": "Set this to true to hide the back button of navigation bar.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hidesBarsOnSwipe": {
      "description": "Set this to true to hide the navigation bar on swipe.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hidesBarsOnTap": {
      "description": "Set this to true to hide the navigation bar on tap.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hidesBarsWhenKeyboardAppears": {
      "description": "Set this to true to hide the navigation bar when the keyboard appears.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hidesSearchBarWhenScrolling": {
      "description": "A Boolean value indicating whether the integrated search bar is hidden when scrolling any underlying content.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "highlightedColor": {
      "description": "Color of the label when in the highlighted state, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "highlightedLeftTrackImage": {
      "description": "Image URL of the slider left track when in the highlighted state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "highlightedRightTrackImage": {
      "description": "Image URL of the slider right track when in the highlighted state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "highlightedThumbImage": {
      "description": "Image URL of the slider thumb when in the highlighted state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "hintText": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "hintTextColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "hintType": {
      "description": "Hint type to display on the text field.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.HINT_TYPE_STATIC",
        "Ti.UI.HINT_TYPE_ANIMATED"
      ]
    },
    "hinttextid": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "hires": {
      "description": "Set to <code>true</code> to prevent scaling of 2x/3x-resolution remote images for retina\ndisplays.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hitRect": {
      "description": "Sets the region where this view responds to gestures.",
      "type": "Dimension",
      "readOnly": true,
      "values": []
    },
    "homeAsUpIndicator": {
      "description": "Sets a custom icon for the &quot;home&quot; button in the corner of the action bar.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "homeButtonEnabled": {
      "description": "Enable or disable the &quot;home&quot; button in the corner of the action bar.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "homeIndicatorAutoHidden": {
      "description": "Boolean value indicating whether the system is allowed to hide the visual indicator for returning to the Home screen.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "homedir": {
      "description": "Always <a href=\"Titanium.Filesystem.applicationDataDirectory\">Titanium.Filesystem.applicationDataDirectory</a> on Titanium.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "horizontalBounce": {
      "description": "Determines whether horizontal scroll bounce of the scrollable region is enabled.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "horizontalMargin": {
      "description": "Horizontal placement of the notification, <em>as a fraction of the screen width</em>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "horizontalMotionEffect": {
      "description": "Adds a horizontal parallax effect to the view",
      "type": "MinMaxOptions",
      "readOnly": true,
      "values": []
    },
    "horizontalWrap": {
      "description": "Determines whether the layout has wrapping behavior.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "host": {
      "description": "The host to connect to or listen on.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "hour": {
      "description": "Indicates how the hour should be formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "hour12": {
      "description": "Indicates if formatter should output to either 12-hour or 24-hour time.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hourCycle": {
      "description": "Indicates how the hour should be formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "html": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "httponly": {
      "description": "The httponly attribute of the cookie.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "hyphenationFactor": {
      "description": "The threshold of paragraph for hyphenation.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "hyphenationFrequency": {
      "description": "Frequency of automatic hyphenation. Check <a href=\"https://developer.android.com/reference/android/widget/TextView#attr_android:hyphenationFrequency\">Android hyphenationFrequency</a> for more infos.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.HYPHEN_NONE",
        "Ti.UI.HYPHEN_NORMAL",
        "Ti.UI.HYPHEN_FULL",
        "Ti.UI.HYPHEN_NORMAL_FAST",
        "Ti.UI.HYPHEN_FULL_FAST"
      ]
    },
    "icon": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_COMPOSE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_PLAY",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_PAUSE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_ADD",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_LOCATION",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_SEARCH",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_SHARE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_PROHIBIT",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_CONTACT",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_HOME",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_MARK_LOCATION",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_FAVORITE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_LOVE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_CLOUD",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_INVITATION",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_CONFIRMATION",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_MAIL",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_MESSAGE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_DATE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_TIME",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_CAPTURE_PHOTO",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_CAPTURE_VIDEO",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_TASK",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_TASK_COMPLETED",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_ALARM",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_BOOKMARK",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_SHUFFLE",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_AUDIO",
        "Ti.UI.iOS.SHORTCUT_ICON_TYPE_UPDATE"
      ]
    },
    "iconColor": {
      "description": "Color of the search and close icon. Search icon will only work for <code>iconified:false</code>.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "iconFamily": {
      "description": "Specifies the font family or specific font to use.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "iconInsets": {
      "description": "The icon inset or outset for each edge.",
      "type": "TabIconInsets",
      "readOnly": true,
      "values": []
    },
    "iconIsMask": {
      "description": "Defines if the icon property of the tab must be used as a mask.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "iconSize": {
      "description": "Predefined button size",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "iconified": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "iconifiedByDefault": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "id": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "identifier": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "identifierForAdvertising": {
      "description": "An alphanumeric string unique to each device, used only for serving advertisements.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "identifierForVendor": {
      "description": "An alphanumeric string that uniquely identifies a device to the app's vendor.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "idle": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "idleTimerDisabled": {
      "description": "Determines whether the screen is locked when the device is idle.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "ignorePunctuation": {
      "description": "Indicates if punctuation characters should be ignored during the compare.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "ignoreSslError": {
      "description": "Controls whether to ignore invalid SSL certificates or not.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "image": {
      "description": "",
      "type": "Titanium.Blob",
      "readOnly": true,
      "values": []
    },
    "imageHeight": {
      "description": "Height of the image. Use <code>height</code> for the height of the extended toolbar.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "imageIsMask": {
      "description": "Set true to tint the button image. Set false to show the image as-is.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "imageTouchFeedback": {
      "description": "Enables a ripple effect when the foreground image is touched.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "imageTouchFeedbackColor": {
      "description": "Optional touch feedback ripple color. This has no effect unless <code>imageTouchFeedback</code> is true.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "images": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "implementation": {
      "description": "<a href=\"Titanium.XML.DOMImplementation\">DOMImplementation</a> object associated with this\ndocument.",
      "type": "Titanium.XML.DOMImplementation",
      "readOnly": false,
      "values": []
    },
    "importance": {
      "description": "The audio stream type to use when playing the sound.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.IMPORTANCE_DEFAULT",
        "Ti.Android.IMPORTANCE_HIGH",
        "Ti.Android.IMPORTANCE_LOW",
        "Ti.Android.IMPORTANCE_MAX",
        "Ti.Android.IMPORTANCE_MIN",
        "Ti.Android.IMPORTANCE_NONE",
        "Ti.Android.IMPORTANCE_UNSPECIFIED"
      ]
    },
    "inBackground": {
      "description": "Boolean indicating if notification was received while app was in background.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "inPopOver": {
      "description": "Show the camera in a popover.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "inbound": {
      "description": "Socket which represents the inbound connection.",
      "type": "Titanium.Network.Socket.TCP",
      "readOnly": true,
      "values": []
    },
    "includeFontPadding": {
      "description": "Includes extra top and bottom padding to make room for accents that go above normal ascent and descent.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "includeNote": {
      "description": "A boolean value that indicates whether to fetch the notes stored in contacts or not.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "includeOpaqueBars": {
      "description": "Specifies if the edges should extend beyond opaque bars (navigation bar, tab bar, toolbar).",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "incrementDisabledImage": {
      "description": "Background image for the stepper increment button in its disabled state, specified as a local\nfile path or URL.The increment button enters a disabled state ones the value is equal to the\nmaximumValue , setting the enabled property to false will have no effect to increment button state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "incrementImage": {
      "description": "Background image for the stepper increment button in its normal state, specified as a local\nfile path or URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "indentionLevel": {
      "description": "Indention level for the row.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "index": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "indicatorColor": {
      "description": "Color of the animated indicator.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "information": {
      "description": "Information about the item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "initialPlaybackTime": {
      "description": "The start time of movie playback, in milliseconds.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "initialUrl": {
      "description": "The URL of the initial request that created this item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "injectionTime": {
      "description": "The time when the script should be injected into the webpage.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.INJECTION_TIME_DOCUMENT_START",
        "Ti.UI.iOS.INJECTION_TIME_DOCUMENT_END"
      ]
    },
    "ino": {
      "description": "The file system specific &quot;Inode&quot; number for the file.\nAlways returns <code>0</code> on Titanium.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "inputType": {
      "description": "Input type to accept in the text field. Also influences the Keyboard type to display.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.UI.INPUT_TYPE_CLASS_NUMBER",
        "Ti.UI.INPUT_TYPE_CLASS_TEXT"
      ]
    },
    "inputs": {
      "description": "An Array of current input ports for the session. See the <code>AUDIO_SESSION_PORT</code> constants.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.Media.AUDIO_SESSION_PORT_LINEIN",
        "Ti.Media.AUDIO_SESSION_PORT_BUILTINMIC",
        "Ti.Media.AUDIO_SESSION_PORT_HEADSETMIC",
        "Ti.Media.AUDIO_SESSION_PORT_LINEOUT",
        "Ti.Media.AUDIO_SESSION_PORT_HEADPHONES",
        "Ti.Media.AUDIO_SESSION_PORT_BLUETOOTHA2DP",
        "Ti.Media.AUDIO_SESSION_PORT_BUILTINRECEIVER",
        "Ti.Media.AUDIO_SESSION_PORT_BUILTINSPEAKER",
        "Ti.Media.AUDIO_SESSION_PORT_HDMI",
        "Ti.Media.AUDIO_SESSION_PORT_AIRPLAY",
        "Ti.Media.AUDIO_SESSION_PORT_BLUETOOTHHFP",
        "Ti.Media.AUDIO_SESSION_PORT_USBAUDIO",
        "Ti.Media.AUDIO_SESSION_PORT_BLUETOOTHLE",
        "Ti.Media.AUDIO_SESSION_PORT_CARAUDIO"
      ]
    },
    "installId": {
      "description": "The install ID for this application.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "instantMessage": {
      "description": "Instant messenger information of the person. Multi-value.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "integer": {
      "description": "Integer resources. See\n<a href=\"https://developer.android.com/reference/android/R.integer.html\">R.integer</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "intent": {
      "description": "",
      "type": "Titanium.Android.Intent",
      "readOnly": false,
      "values": []
    },
    "intentIdentifiers": {
      "description": "The intents related to notifications of this category.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "interactiveDismissModeEnabled": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "internalSubset": {
      "description": "The internal subset as a string.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "interpolator": {
      "description": "Interpolator resources. See\n<a href=\"https://developer.android.com/reference/android/R.interpolator.html\">R.fraction</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "interval": {
      "description": "The interval between instances of this recurrence. For example, a weekly\nrecurrence rule with an interval of 2 occurs every other week. Must be greater than 0.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "irq": {
      "description": "The number of milliseconds the CPU has spent in irq mode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "isActivated": {
      "description": "Returns <code>true</code> if the watch is currently activated.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isAdvertisingTrackingEnabled": {
      "description": "A Boolean value that indicates whether the user has limited ad tracking.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isCameraSupported": {
      "description": "<code>true</code> if the device has camera support.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isCloudItem": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isCompilation": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isComplicationEnabled": {
      "description": "Returns <code>true</code> if complication is enabled on the installed watch app.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isDetached": {
      "description": "Boolean value that indicates whether an event is a detached instance of a\nrepeating event.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isExplicit": {
      "description": "True if this item is marked as &quot;Explicit&quot;.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isLeftOpen": {
      "description": "Determine whether the left drawer is open",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "isLeftVisible": {
      "description": "Determine whether the left drawer is visible",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "isLocal": {
      "description": "whether or not the service is local to the device",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "isOrganizer": {
      "description": "Indicates whether this attendee is the event organizer.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isPaired": {
      "description": "Returns <code>true</code> if the device is paired with a watch.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isReachable": {
      "description": "Returns <code>true</code> if the watch is currently reachable.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isRightOpen": {
      "description": "Determine whether the right drawer is open",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "isRightVisible": {
      "description": "Determine whether the right drawer is visible",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "isSearching": {
      "description": "Whether or not the browser is currently searching",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "isSupported": {
      "description": "Returns <code>true</code> if the device supports watch connectivity.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isTranslatedBinaryOnAppleSilicon": {
      "description": "A Boolean value that indicates whether the current app is running as a translated\nbinary using Rosetta on an Apple Silicon device.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "isWatchAppInstalled": {
      "description": "Returns <code>true</code> if the accompanying watch app is installed.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "item": {
      "description": "",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "itemContentType": {
      "description": "Content type of the attribute set.",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.UTTYPE_TEXT",
        "Ti.App.iOS.UTTYPE_PLAIN_TEXT",
        "Ti.App.iOS.UTTYPE_UTF8_PLAIN_TEXT",
        "Ti.App.iOS.UTTYPE_UTF16_EXTERNAL_PLAIN_TEXT",
        "Ti.App.iOS.UTTYPE_UTF16_PLAIN_TEXT",
        "Ti.App.iOS.UTTYPE_RTF",
        "Ti.App.iOS.UTTYPE_HTML",
        "Ti.App.iOS.UTTYPE_XML",
        "Ti.App.iOS.UTTYPE_PDF",
        "Ti.App.iOS.UTTYPE_RTFD",
        "Ti.App.iOS.UTTYPE_FLAT_RTFD",
        "Ti.App.iOS.UTTYPE_TXN_TEXT_AND_MULTIMEDIA_DATA",
        "Ti.App.iOS.UTTYPE_WEB_ARCHIVE",
        "Ti.App.iOS.UTTYPE_IMAGE",
        "Ti.App.iOS.UTTYPE_JPEG",
        "Ti.App.iOS.UTTYPE_JPEG2000",
        "Ti.App.iOS.UTTYPE_TIFF",
        "Ti.App.iOS.UTTYPE_PICT",
        "Ti.App.iOS.UTTYPE_GIF",
        "Ti.App.iOS.UTTYPE_PNG",
        "Ti.App.iOS.UTTYPE_QUICKTIME_IMAGE",
        "Ti.App.iOS.UTTYPE_APPLE_ICNS",
        "Ti.App.iOS.UTTYPE_BMP",
        "Ti.App.iOS.UTTYPE_ICO",
        "Ti.App.iOS.UTTYPE_MOVIE",
        "Ti.App.iOS.UTTYPE_VIDEO",
        "Ti.App.iOS.UTTYPE_AUDIO",
        "Ti.App.iOS.UTTYPE_QUICKTIME_MOVIE",
        "Ti.App.iOS.UTTYPE_MPEG",
        "Ti.App.iOS.UTTYPE_MPEG4",
        "Ti.App.iOS.UTTYPE_MP3",
        "Ti.App.iOS.UTTYPE_MPEG4_AUDIO",
        "Ti.App.iOS.UTTYPE_APPLE_PROTECTED_MPEG4_AUDIO"
      ]
    },
    "itemCount": {
      "description": "Returns the item count of the section.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "itemId": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "itemIndex": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "itemOffset": {
      "description": "Offset from the center point of the item for the attachment.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "items": {
      "description": "",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "javaScriptCanOpenWindowsAutomatically": {
      "description": "A Boolean value indicating whether JavaScript can open windows without user interaction.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "javaScriptEnabled": {
      "description": "A Boolean value indicating whether JavaScript is enabled.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "jobTitle": {
      "description": "Job title of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "kMaxLength": {
      "description": "The largest size allowed for a single <a href=\"buffer.Buffer\">buffer.Buffer</a> instance.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "keepScreenOn": {
      "description": "Determines whether to keep the device screen on.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "keepSectionsInSearch": {
      "description": "Determines if the section information is displayed in the search results when using the <code>searchText</code> property.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "key": {
      "description": "The key of the metadata item, e.g. &quot;title&quot;.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "keySignature": {
      "description": "The musical key of the song/composition contained in an audio file.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "keySpace": {
      "description": "The key-path of the metadata item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "keyboardAppearance": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.KEYBOARD_APPEARANCE_DEFAULT",
        "Ti.UI.KEYBOARD_APPEARANCE_DARK",
        "Ti.UI.KEYBOARD_APPEARANCE_LIGHT"
      ]
    },
    "keyboardDismissMode": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.KEYBOARD_DISMISS_MODE_NONE",
        "Ti.UI.iOS.KEYBOARD_DISMISS_MODE_ON_DRAG",
        "Ti.UI.iOS.KEYBOARD_DISMISS_MODE_INTERACTIVE"
      ]
    },
    "keyboardDisplayRequiresUserAction": {
      "description": "A Boolean value indicating whether web content can programmatically display the keyboard.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "keyboardToolbar": {
      "description": "Array of toolbar button objects or a <a href=\"Titanium.UI.Toolbar\">toolbar</a> to be used when the\nkeyboard is displayed.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "keyboardToolbarColor": {
      "description": "Color of the keyboard toolbar if keyboardToolbar is an array, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "keyboardToolbarHeight": {
      "description": "Height of the keyboard toolbar if keyboardToolbar is an array.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "keyboardType": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.KEYBOARD_TYPE_DECIMAL_PAD",
        "Ti.UI.KEYBOARD_TYPE_ASCII",
        "Ti.UI.KEYBOARD_TYPE_DEFAULT",
        "Ti.UI.KEYBOARD_TYPE_EMAIL",
        "Ti.UI.KEYBOARD_TYPE_NAMEPHONE_PAD",
        "Ti.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION",
        "Ti.UI.KEYBOARD_TYPE_NUMBER_PAD",
        "Ti.UI.KEYBOARD_TYPE_PHONE_PAD",
        "Ti.UI.KEYBOARD_TYPE_WEBSEARCH",
        "Ti.UI.KEYBOARD_TYPE_TWITTER",
        "Ti.UI.KEYBOARD_TYPE_URL",
        "Ti.UI.KEYBOARD_APPEARANCE_DEFAULT",
        "Ti.UI.KEYBOARD_APPEARANCE_DARK",
        "Ti.UI.KEYBOARD_APPEARANCE_LIGHT"
      ]
    },
    "keyboardVisible": {
      "description": "Indicates whether or not the soft keyboard is visible.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "keywords": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "kind": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Contacts.CONTACTS_KIND_ORGANIZATION",
        "Ti.Contacts.CONTACTS_KIND_PERSON"
      ]
    },
    "label": {
      "description": "The Tile's label.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "labels": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "landscape": {
      "description": "Indicates if the device is currently held in landscape form.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "landscapeSplit": {
      "description": "Determines the width of the <code>masterView</code> in landscape mode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "languages": {
      "description": "Used to designate the languages of the intellectual content of the resource.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "largeIcon": {
      "description": "Add a large icon to the notification (and the ticker on some devices) specified as an Android resource ID, or a local URL to a density-specific image.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "largeTitleDisplayMode": {
      "description": "The mode to use when displaying the title of the navigation bar.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.LARGE_TITLE_DISPLAY_MODE_AUTOMATIC",
        "Ti.UI.iOS.LARGE_TITLE_DISPLAY_MODE_ALWAYS",
        "Ti.UI.iOS.LARGE_TITLE_DISPLAY_MODE_NEVER"
      ]
    },
    "largeTitleEnabled": {
      "description": "A Boolean value indicating whether the title should be displayed in a large format.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "lastChild": {
      "description": "This node's last child.",
      "type": "Titanium.XML.Node",
      "readOnly": false,
      "values": []
    },
    "lastGeolocation": {
      "description": "JSON representation of the last geolocation received.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "lastInsertRowId": {
      "description": "The identifier of the last populated row.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "lastName": {
      "description": "Last name of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "lastPhonetic": {
      "description": "Phonetic last name of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "lastPlayedDate": {
      "description": "The most recent calendar date on which the user played the media item.",
      "type": "Date",
      "readOnly": false,
      "values": []
    },
    "lastUsedDate": {
      "description": "The date that the item was last used.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "latitude": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "launchIntent": {
      "description": "Return the intent that was used to launch the application.",
      "type": "Titanium.Android.Intent",
      "readOnly": false,
      "values": []
    },
    "launchOptionsLocationKey": {
      "description": "If set to <code>true</code>, this key indicates that the application was launched in response to an\nincoming location event.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "layerType": {
      "description": "A value indicating the render mode of the WebView",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.WebView.LAYER_TYPE_NONE",
        "Ti.UI.WebView.LAYER_TYPE_SOFTWARE",
        "Ti.UI.WebView.LAYER_TYPE_HARDWARE"
      ]
    },
    "layout": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'vertical'",
        "'horizontal'",
        "'composite'"
      ]
    },
    "layoutId": {
      "description": "Android layout resource ID for the view to display. Required.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "lazyLoadingEnabled": {
      "description": "Determines if the list view should use lazy loading to load remote images.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "ledARGB": {
      "description": "The color for the LED to blink.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ledOffMS": {
      "description": "The number of milliseconds for the LED to be off while it's flashing.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ledOnMS": {
      "description": "The number of milliseconds for the LED to be on while it's flashing.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "left": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "leftButton": {
      "description": "Left button view to display in the <code>TextField</code>.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "leftButtonMode": {
      "description": "Determines when to display the left button view.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.INPUT_BUTTONMODE_ALWAYS",
        "Ti.UI.INPUT_BUTTONMODE_NEVER",
        "Ti.UI.INPUT_BUTTONMODE_ONBLUR",
        "Ti.UI.INPUT_BUTTONMODE_ONFOCUS"
      ]
    },
    "leftButtonPadding": {
      "description": "Padding between the left button and the edge of the field.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "leftDrawerLockMode": {
      "description": "Get or set lock mode for the left drawer",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_LOCKED_CLOSED",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_LOCKED_OPEN",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_UNDEFINED",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_UNLOCKED"
      ]
    },
    "leftImage": {
      "description": "Image to render in the left image area of the row, specified as a local path or URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "leftNavButton": {
      "description": "View to show in the left nav bar area.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "leftNavButtons": {
      "description": "An Array of views to show in the left nav bar area.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "leftTrackImage": {
      "description": "Image URL of the slider left track.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "leftTrackLeftCap": {
      "description": "Size of the left end cap for the leftTrackImage, disabledLeftTrackImage, highlightedLeftTrackImage and selectedLeftTrackImage properties.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "leftTrackTopCap": {
      "description": "Size of the top end cap for the leftTrackImage, disabledLeftTrackImage, highlightedLeftTrackImage and selectedLeftTrackImage properties.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "leftView": {
      "description": "Get or set the view of the left drawer",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "leftWidth": {
      "description": "Get or set the width of the left drawer",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "length": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "letterSpacing": {
      "description": "Letter spacing of the <a href=\"Titanium.UI.Label.text\">text</a> as a float value.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "level": {
      "description": "The logical floor of the building.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "licenseURL": {
      "description": "The FairPlay Streaming license URL to handle the server-side authentication flow.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "lifecycleContainer": {
      "description": "The Window or TabGroup whose Activity lifecycle should be triggered on the proxy.",
      "type": "Titanium.UI.Window",
      "readOnly": true,
      "values": []
    },
    "lightColor": {
      "description": "The notification light color for notifications posted to this channel.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "lightTouchEnabled": {
      "description": "Enables using light touches to make a selection and activate mouseovers.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "lineBreakMode": {
      "description": "The mode that should be used to break lines in the receiver.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.ATTRIBUTE_LINE_BREAK_BY_WORD_WRAPPING",
        "Ti.UI.ATTRIBUTE_LINE_BREAK_BY_CHAR_WRAPPING",
        "Ti.UI.ATTRIBUTE_LINE_BREAK_BY_CLIPPING",
        "Ti.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_HEAD",
        "Ti.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_MIDDLE",
        "Ti.UI.ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_TAIL"
      ]
    },
    "lineCount": {
      "description": "Returns the amount of lines the content is acually using. Is equal or lower than <code>maxLines</code>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "lineEnding": {
      "description": "Platform-specific line ending constant.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "lineHeightMultiple": {
      "description": "The line height multiple.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "lineSpacing": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "lines": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "listSeparatorInsets": {
      "description": "The insets for the list view header and footer.",
      "type": "HorizontalInsets",
      "readOnly": true,
      "values": []
    },
    "listenQueueSize": {
      "description": "Max number of pending incoming connections to be allowed when the socket is in the <a href=\"Titanium.Network.Socket.LISTENING\">LISTENING</a> state.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "livePhoto": {
      "description": "",
      "type": "Titanium.UI.iOS.LivePhoto",
      "readOnly": true,
      "values": []
    },
    "livePhotos": {
      "description": "The list of selected live photo objects.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "loadState": {
      "description": "Returns the network load state of the movie player. <strong>Deprecated since 7.0.0. On iOS, use <a href=\"Titanium.Media.VideoPlayer.moviePlayerStatus\">Titanium.Media.VideoPlayer.moviePlayerStatus</a> instead.</strong>",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "loading": {
      "description": "Indicates if the webview is loading content.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "local": {
      "description": "Whether or not the item is local. Set to <code>1</code> if true and <code>0</code> otherwise.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "localName": {
      "description": "Local part of the qualified name of this node.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "locale": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "localeMatcher": {
      "description": "The locale matching algorithm to use.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "location": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.PROGRESS_INDICATOR_DIALOG",
        "Ti.UI.Android.PROGRESS_INDICATOR_STATUS_BAR"
      ]
    },
    "locationAccuracyAuthorization": {
      "description": "A value that indicates the level of location accuracy the app has permission to use.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Geolocation.ACCURACY_AUTHORIZATION_FULL",
        "Ti.Geolocation.ACCURACY_AUTHORIZATION_REDUCED"
      ]
    },
    "locationServicesAuthorization": {
      "description": "Returns an authorization constant indicating if the application has access to location services.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Geolocation.AUTHORIZATION_AUTHORIZED|deprecated",
        "Ti.Geolocation.AUTHORIZATION_DENIED",
        "Ti.Geolocation.AUTHORIZATION_RESTRICTED",
        "Ti.Geolocation.AUTHORIZATION_UNKNOWN",
        "Ti.Geolocation.AUTHORIZATION_ALWAYS",
        "Ti.Geolocation.AUTHORIZATION_WHEN_IN_USE"
      ]
    },
    "locationServicesEnabled": {
      "description": "Indicates if the user has enabled or disabled location services for the device (not the application).",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "lockScreenSetting": {
      "description": "The current lock-screen settings.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "lockscreenVisibility": {
      "description": "Whether or not notifications posted to this channel are shown on the lockscreen in full or redacted form.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.VISIBILITY_PRIVATE",
        "Ti.Android.VISIBILITY_PUBLIC",
        "Ti.Android.VISIBILITY_SECRET"
      ]
    },
    "logicalDensityFactor": {
      "description": "Logical density of the display, as a scaling factor for the Density Independent Pixel (dip)\nunit.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "loginHintText": {
      "description": "Hint text of the login text field inside the dialog.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "loginKeyboardType": {
      "description": "Keyboard type to display when this text field inside the dialog is focused.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.KEYBOARD_APPEARANCE_DEFAULT",
        "Ti.UI.KEYBOARD_APPEARANCE_DARK",
        "Ti.UI.KEYBOARD_APPEARANCE_LIGHT",
        "Ti.UI.KEYBOARD_TYPE_DECIMAL_PAD",
        "Ti.UI.KEYBOARD_TYPE_ASCII",
        "Ti.UI.KEYBOARD_TYPE_DEFAULT",
        "Ti.UI.KEYBOARD_TYPE_EMAIL",
        "Ti.UI.KEYBOARD_TYPE_NAMEPHONE_PAD",
        "Ti.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION",
        "Ti.UI.KEYBOARD_TYPE_NUMBER_PAD",
        "Ti.UI.KEYBOARD_TYPE_PHONE_PAD",
        "Ti.UI.KEYBOARD_TYPE_WEBSEARCH",
        "Ti.UI.KEYBOARD_TYPE_TWITTER",
        "Ti.UI.KEYBOARD_TYPE_URL"
      ]
    },
    "loginPlaceholder": {
      "description": "Placeholder of the login text field inside the dialog. <strong>Deprecated since 5.4.0. Use <a href=\"Titanium.UI.AlertDialog.loginHintText\">Titanium.UI.AlertDialog.loginHintText</a> instead.</strong>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "loginReturnKeyType": {
      "description": "Specifies the text to display on the keyboard <code>Return</code> key when this field is focused.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.RETURNKEY_CONTINUE",
        "Ti.UI.RETURNKEY_DEFAULT",
        "Ti.UI.RETURNKEY_DONE",
        "Ti.UI.RETURNKEY_EMERGENCY_CALL",
        "Ti.UI.RETURNKEY_GO",
        "Ti.UI.RETURNKEY_GOOGLE",
        "Ti.UI.RETURNKEY_JOIN",
        "Ti.UI.RETURNKEY_NEXT",
        "Ti.UI.RETURNKEY_ROUTE",
        "Ti.UI.RETURNKEY_SEARCH",
        "Ti.UI.RETURNKEY_SEND",
        "Ti.UI.RETURNKEY_YAHOO"
      ]
    },
    "loginValue": {
      "description": "Value of the login text field inside the dialog.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "loginhinttextid": {
      "description": "Key identifying a string from the locale file to use for the\n<a href=\"Titanium.UI.AlertDialog.loginHintText\">loginHintText</a> property.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "logo": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "longitude": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "looping": {
      "description": "Determines whether the audio should loop upon completion.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "lyricist": {
      "description": "The lyricist/text writer for song/composition contained in the audio file.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "lyrics": {
      "description": "Lyrics for this item.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "m11": {
      "description": "The entry at position [1,1] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m12": {
      "description": "The entry at position [1,2] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m13": {
      "description": "The entry at position [1,3] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m14": {
      "description": "The entry at position [1,4] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m21": {
      "description": "The entry at position [2,1] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m22": {
      "description": "The entry at position [2,2] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m23": {
      "description": "The entry at position [2,3] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m24": {
      "description": "The entry at position [2,4] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m31": {
      "description": "The entry at position [3,1] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m32": {
      "description": "The entry at position [3,2] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m33": {
      "description": "The entry at position [3,3] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m34": {
      "description": "The entry at position [3,4] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m41": {
      "description": "The entry at position [4,1] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m42": {
      "description": "The entry at position [4,2] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m43": {
      "description": "The entry at position [4,3] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "m44": {
      "description": "The entry at position [4,4] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "macaddress": {
      "description": "System's network interface mac address, or app UUID.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "magneticHeading": {
      "description": "Declination in degrees from magnetic North.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "magnitude": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "mainFrameOnly": {
      "description": "A Boolean value indicating whether the script should be injected only into the\nmain frame (true) or into all frames (false).",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "manualMode": {
      "description": "Set to <code>true</code> to enable manual configuration of location updates through this module.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "manufacturer": {
      "description": "Manufacturer of the device.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "mask": {
      "description": "Image drawn as the background image.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "masterIsOverlayed": {
      "description": "Determines whether to show the master view is overlayed in portrait orientation.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "masterView": {
      "description": "Window for the master view section of the SplitWindow.",
      "type": "Titanium.UI.Window",
      "readOnly": true,
      "values": []
    },
    "masterViewVisible": {
      "description": "Determines whether to show the master view or hide.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "max": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxAge": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxArrayLength": {
      "description": "Specifies the maximum number of <code>Array</code>, <code>TypedArray</code>, <code>WeakMap</code> and <code>WeakSet</code> elements to include when formatting. Set to <code>null</code> or <code>Infinity</code> to show all elements. Set to <code>0</code> or negative to show no elements.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxClassname": {
      "description": "Max number of row class names.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxDate": {
      "description": "Maximum date displayed when a Date picker is in use.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "maxElevation": {
      "description": "Maximum Elevation for CardView.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxImageSize": {
      "description": "Size of the image inside the button",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxImages": {
      "description": "Specifies the number of images a user can select at maximum.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "maxLength": {
      "description": "Maximum length of text field input.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxLines": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxRange": {
      "description": "Upper limit on the slider value that can be selected.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxRetries": {
      "description": "If an <code>EBUSY</code>, <code>EMFILE</code>, <code>ENFILE</code>, <code>ENOTEMPTY</code>, or <code>EPERM</code> error is encountered, Node.js will retry the operation with a linear backoff wait of <code>retryDelay</code> milliseconds longer on each try.\nThis option represents the number of retries.\nThis option is ignored if the <code>recursive</code> option is not <code>true</code>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxRowHeight": {
      "description": "Maximum row height for table view rows.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxStringLength": {
      "description": "Specifies the maximum number of characters to include when formatting. Set to <code>null</code> or <code>Infinity</code> to show all elements. Set to <code>0</code> or negative to show no characters.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maxZoomLevel": {
      "description": "Returns the max zoom level of the camera.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "maxZoomScale": {
      "description": "Maximum scaling factor of the scrollable region and its content.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maximum": {
      "description": "The maximum value the stepper will be set to, the value must be greater than the minimum value.\nIf you attempt to set a value equal to or lower than minimum, the system will default the\nvalue to 100.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maximumFractionDigits": {
      "description": "Max number of fractional digits to be shown. Will round at this max digit.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maximumLineHeight": {
      "description": "The maximum line height of receiver.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "maximumSignificantDigits": {
      "description": "Max number of significant digits to be shown. Will round at this max digit.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "media": {
      "description": "",
      "type": "Titanium.Blob",
      "readOnly": true,
      "values": []
    },
    "mediaControlStyle": {
      "description": "The style of the playback controls. <strong>Deprecated since 7.0.0. On iOS, use <a href=\"Titanium.Media.VideoPlayer.showsControls\">Titanium.Media.VideoPlayer.showsControls</a> instead.</strong>",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.VIDEO_CONTROL_DEFAULT|deprecated",
        "Ti.Media.VIDEO_CONTROL_EMBEDDED|deprecated",
        "Ti.Media.VIDEO_CONTROL_FULLSCREEN|deprecated",
        "Ti.Media.VIDEO_CONTROL_HIDDEN|deprecated",
        "Ti.Media.VIDEO_CONTROL_NONE|deprecated"
      ]
    },
    "mediaType": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Media.MUSIC_MEDIA_TYPE_ALL",
        "Ti.Media.MUSIC_MEDIA_TYPE_ANY_AUDIO",
        "Ti.Media.MUSIC_MEDIA_TYPE_AUDIOBOOK",
        "Ti.Media.MUSIC_MEDIA_TYPE_MUSIC",
        "Ti.Media.MUSIC_MEDIA_TYPE_PODCAST"
      ]
    },
    "mediaTypes": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.Media.MUSIC_MEDIA_TYPE_ALL",
        "Ti.Media.MUSIC_MEDIA_TYPE_ANY_AUDIO",
        "Ti.Media.MUSIC_MEDIA_TYPE_AUDIOBOOK",
        "Ti.Media.MUSIC_MEDIA_TYPE_MUSIC",
        "Ti.Media.MUSIC_MEDIA_TYPE_PODCAST",
        "Ti.Media.MEDIA_TYPE_PHOTO",
        "Ti.Media.MEDIA_TYPE_LIVEPHOTO",
        "Ti.Media.MEDIA_TYPE_VIDEO",
        "Ti.Media.VIDEO_MEDIA_TYPE_AUDIO",
        "Ti.Media.VIDEO_MEDIA_TYPE_CLOSED_CAPTION",
        "Ti.Media.VIDEO_MEDIA_TYPE_DEPTH_DATA",
        "Ti.Media.VIDEO_MEDIA_TYPE_METADATA",
        "Ti.Media.VIDEO_MEDIA_TYPE_METADATA_OBJECT",
        "Ti.Media.VIDEO_MEDIA_TYPE_MUXED",
        "Ti.Media.VIDEO_MEDIA_TYPE_SUBTITLE",
        "Ti.Media.VIDEO_MEDIA_TYPE_TEXT",
        "Ti.Media.VIDEO_MEDIA_TYPE_TIMECODE",
        "Ti.Media.VIDEO_MEDIA_TYPE_VIDEO"
      ]
    },
    "mediaTypesRequiringUserActionForPlayback": {
      "description": "Determines which media types require a user gesture to begin playing.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_NONE",
        "Ti.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_AUDIO",
        "Ti.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_VIDEO",
        "Ti.UI.iOS.AUDIOVISUAL_MEDIA_TYPE_ALL"
      ]
    },
    "menu": {
      "description": "",
      "type": "Titanium.Android.Menu",
      "readOnly": true,
      "values": []
    },
    "message": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "messageBody": {
      "description": "Email message body.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "messageid": {
      "description": "Key identifying a string in the locale file to use for the message text.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "metadataModificationDate": {
      "description": "The date that the last metadata attribute was changed.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "method": {
      "description": "Method by which this reminder will be delivered.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Calendar.METHOD_ALERT",
        "Ti.Calendar.METHOD_DEFAULT",
        "Ti.Calendar.METHOD_EMAIL",
        "Ti.Calendar.METHOD_SMS"
      ]
    },
    "middleName": {
      "description": "Middle name of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "middlePhonetic": {
      "description": "Phonetic middle name of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "mimeType": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "min": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minAge": {
      "description": "Controls the frequency of location updates.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minDate": {
      "description": "Minimum date displayed when a Date picker is in use.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "minRange": {
      "description": "Lower limit on the slider value that can be selected.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minRowHeight": {
      "description": "Minimum row height for table view rows.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minUpdateDistance": {
      "description": "Don't send a location update unless the location has changed at least <code>minUpdateDistance</code>\nmeters since the previous update.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minUpdateTime": {
      "description": "Limits the frequency of location updates to no more than one per <code>minUpdateTime</code> seconds.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minZoomLevel": {
      "description": "Returns the min zoom level of the camera.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "minZoomScale": {
      "description": "Minimum scaling factor of the scrollable region and its content.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minimum": {
      "description": "The minimum value the stepper will be set to, the value must be smaller than the maximum value.\nIf you attempt to set a value equal to or greater than maximum, the system will default the\nvalue to 0.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minimumFontSize": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minimumFractionDigits": {
      "description": "Applies trailing zeros in fractional portion of the formatted number.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minimumIntegerDigits": {
      "description": "Applies leading zeros to the integer portion of the formatted number.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minimumLineHeight": {
      "description": "The minimum height of receiver.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minute": {
      "description": "Indicates how minutes should be formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "minuteInterval": {
      "description": "Interval in minutes displayed when one of the Time types of pickers is in use.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "minutes": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "mipmap": {
      "description": "Mipmap resources. See\n<a href=\"https://developer.android.com/reference/android/R.mipmap.html\">R.mipmap</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "mixedContentMode": {
      "description": "If <code>true</code>, allows the loading of insecure resources from a secure origin.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "modal": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "modalStyle": {
      "description": "Presentation style of this modal window.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.MODAL_PRESENTATION_CURRENT_CONTEXT",
        "Ti.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_CONTEXT",
        "Ti.UI.iOS.MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN",
        "Ti.UI.iOS.MODAL_PRESENTATION_FORMSHEET",
        "Ti.UI.iOS.MODAL_PRESENTATION_FULLSCREEN",
        "Ti.UI.iOS.MODAL_PRESENTATION_PAGESHEET"
      ]
    },
    "modalTransitionStyle": {
      "description": "Transition style of this modal window.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.MODAL_TRANSITION_STYLE_COVER_VERTICAL",
        "Ti.UI.iOS.MODAL_TRANSITION_STYLE_CROSS_DISSOLVE",
        "Ti.UI.iOS.MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL",
        "Ti.UI.iOS.MODAL_TRANSITION_STYLE_PARTIAL_CURL"
      ]
    },
    "mode": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Stream.MODE_READ",
        "Ti.Stream.MODE_WRITE",
        "Ti.Stream.MODE_APPEND",
        "Ti.UI.BLEND_MODE_CLEAR",
        "Ti.UI.BLEND_MODE_COLOR",
        "Ti.UI.BLEND_MODE_COLOR_BURN",
        "Ti.UI.BLEND_MODE_COLOR_DODGE",
        "Ti.UI.BLEND_MODE_COPY",
        "Ti.UI.BLEND_MODE_DARKEN",
        "Ti.UI.BLEND_MODE_DESTINATION_ATOP",
        "Ti.UI.BLEND_MODE_DESTINATION_IN",
        "Ti.UI.BLEND_MODE_DESTINATION_OUT",
        "Ti.UI.BLEND_MODE_DESTINATION_OVER",
        "Ti.UI.BLEND_MODE_DIFFERENCE",
        "Ti.UI.BLEND_MODE_EXCLUSION",
        "Ti.UI.BLEND_MODE_HARD_LIGHT",
        "Ti.UI.BLEND_MODE_HUE",
        "Ti.UI.BLEND_MODE_LIGHTEN",
        "Ti.UI.BLEND_MODE_LUMINOSITY",
        "Ti.UI.BLEND_MODE_MULTIPLY",
        "Ti.UI.BLEND_MODE_NORMAL",
        "Ti.UI.BLEND_MODE_OVERLAY",
        "Ti.UI.BLEND_MODE_PLUS_DARKER",
        "Ti.UI.BLEND_MODE_PLUS_LIGHTER",
        "Ti.UI.BLEND_MODE_SATURATION",
        "Ti.UI.BLEND_MODE_SCREEN",
        "Ti.UI.BLEND_MODE_SOFT_LIGHT",
        "Ti.UI.BLEND_MODE_SOURCE_ATOP",
        "Ti.UI.BLEND_MODE_SOURCE_IN",
        "Ti.UI.BLEND_MODE_SOURCE_OUT",
        "Ti.UI.BLEND_MODE_XOR"
      ]
    },
    "model": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "month": {
      "description": "Indicates how the month should be formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "monthsOfTheYear": {
      "description": "The months of the year that the event occurs, as an array of Number objects.\nValues can be from 1 to 12. This parameter is only valid for recurrence rules of\ntype <a href=\"Titanium.Calendar.RECURRENCEFREQUENCY_YEARLY\">RECURRENCEFREQUENCY_YEARLY</a>.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "moveable": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "moviePlayerStatus": {
      "description": "Returns the status of the movie player.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Media.VIDEO_LOAD_STATE_FAILED",
        "Ti.Media.VIDEO_LOAD_STATE_PLAYABLE",
        "Ti.Media.VIDEO_LOAD_STATE_UNKNOWN"
      ]
    },
    "moving": {
      "description": "Determines whether row moving mode is active.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "mtime": {
      "description": "The timestamp indicating the last time this file was modified.",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "mtimeMs": {
      "description": "The timestamp indicating the last time this file was modified expressed in milliseconds since the POSIX Epoch.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "multiply": {
      "description": "The value by which each line height other than the last line will be multiplied by",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "musicalGenre": {
      "description": "The musical genre of the song/composition contained in the audio file.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "musicalInstrumentCategory": {
      "description": "Metadata attribute that stores the category of instrument.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "musicalInstrumentName": {
      "description": "Metadata attribute that stores the name of instrument.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "muted": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "name": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "namespaceURI": {
      "description": "Namespace URI of this node.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "nativePath": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "nativeSpinner": {
      "description": "Determines if a multicolumn spinner or single column drop-down picker should be used.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "naturalSize": {
      "description": "Returns the natural size of the movie.",
      "type": "MovieSize",
      "readOnly": true,
      "values": []
    },
    "navBarHidden": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "navTintColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "navigationIcon": {
      "description": "Image to be used for a navigation icon.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "navigationIconColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "navigationMode": {
      "description": "Controls the navigation mode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "navigationWindow": {
      "description": "The <a href=\"Titanium.UI.NavigationWindow\">Titanium.UI.NavigationWindow</a> instance hosting this window.",
      "type": "Titanium.UI.NavigationWindow",
      "readOnly": false,
      "values": []
    },
    "needsSave": {
      "description": "Set to true everytime you have updated the user activity and need the changes to be saved before handing it off to another device.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "netmask": {
      "description": "System's WIFI network mask. No other network types are supported.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "networkType": {
      "description": "Network type value as a constant.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Network.NETWORK_LAN",
        "Ti.Network.NETWORK_MOBILE",
        "Ti.Network.NETWORK_NONE",
        "Ti.Network.NETWORK_UNKNOWN",
        "Ti.Network.NETWORK_WIFI"
      ]
    },
    "networkTypeName": {
      "description": "Network type as a String. Returns one of <code>NONE</code>, <code>WIFI</code>, <code>LAN</code>, <code>MOBILE</code>, or <code>UNKNOWN</code>.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "nextSibling": {
      "description": "This node's next sibling.",
      "type": "Titanium.XML.Node",
      "readOnly": false,
      "values": []
    },
    "nice": {
      "description": "The number of milliseconds the CPU has spent in nice mode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "nickname": {
      "description": "Nickname of the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "nlink": {
      "description": "The number of hard-links that exist for the file.\nAlways returns <code>0</code> on Titanium.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "noDeprecation": {
      "description": "The <code>process.noDeprecation</code> property indicates whether the <code>--no-deprecation</code> flag is set on the current Node.js process. See the documentation for the <code>'warning'</code> event and the <code>emitWarning()</code> method for more information about this flag's behavior.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "nodeName": {
      "description": "Name of this node.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "nodeType": {
      "description": "This node's type. One of <code>ELEMENT_NODE</code>, <code>ATTRIBUTE_NODE</code>, <code>TEXT_NODE</code>, <code>CDATA_SECTION_NODE</code>,\n<code>ENTITY_REFERENCE_NODE</code>, <code>ENTITY_NODE</code>, <code>PROCESSING_INSTRUCTION_NODE</code>, <code>COMMENT_NODE</code>,\n<code>DOCUMENT_NODE</code>, <code>DOCUMENT_TYPE_NODE</code>, <code>DOCUMENT_FRAGMENT_NODE</code>, <code>NOTATION_NODE</code>.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "nodeValue": {
      "description": "Content (value) of this node.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "notation": {
      "description": "Indicates if number should be formatted to scientific or engineering notation.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "notationName": {
      "description": "For unparsed entities, the name of the notation for the entity. For parsed entities, this is <code>null</code>.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "notations": {
      "description": "A <a href=\"Titanium.XML.NamedNodeMap\">Titanium.XML.NamedNodeMap</a> containing the notations declared in the DTD. Duplicates are discarded. Every node in this map also implements the <a href=\"Titanium.XML.Notation\">Titanium.XML.Notation</a> interface.",
      "type": "Titanium.XML.NamedNodeMap",
      "readOnly": false,
      "values": []
    },
    "note": {
      "description": "Notes for the person. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "notes": {
      "description": "Notes for this event.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "notificationCenterSetting": {
      "description": "The current notication-center settings.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "notificationChannels": {
      "description": "Returns an object with the ID and name of the notification channels",
      "type": "NotificationChannels",
      "readOnly": true,
      "values": []
    },
    "notifications": {
      "description": "An array of identifiers used to create notifications.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "nowPlaying": {
      "description": "An <code>Item</code> object representing the currently playing media item.",
      "type": "Titanium.Media.Item",
      "readOnly": false,
      "values": []
    },
    "number": {
      "description": "The number of events that this notification represents.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "numeric": {
      "description": "Indicates if numbers in string should be compared as integers.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "occurrenceCount": {
      "description": "Occurrence count of the recurrence end, or 0 if the recurrence end is date-based.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "offset": {
      "description": "",
      "type": "RefreshControlOffset",
      "readOnly": true,
      "values": []
    },
    "ok": {
      "description": "Text for the <code>OK</code> button.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "okid": {
      "description": "Key identifying a string in the locale file to use for the <code>ok</code> text.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "onBack": {
      "description": "Callback function that overrides the default behavior when the user presses the <strong>Back</strong>\nbutton.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onCreate": {
      "description": "Callback function called when the Android activity is created.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onCreateOptionsMenu": {
      "description": "Callback function called to initially create an Android options menu\nfor this Activity when the user presses the <strong>Menu</strong> button.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onCreateWindow": {
      "description": "Callback function called when there is a request for the application to create a new window\nto host new content.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onDestroy": {
      "description": "Callback function called when the Android activity is destroyed.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onHomeIconItemSelected": {
      "description": "Callback function called when the home icon is clicked.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onPause": {
      "description": "Callback function called when the Android activity is paused.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onPrepareOptionsMenu": {
      "description": "Callback function called to prepare an options menu for display when the user presses\nthe <strong>Menu</strong> button.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onReceived": {
      "description": "The function called when a broadcast is received.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onRestart": {
      "description": "Callback function called when the Android activity is restarted.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onResume": {
      "description": "Callback function called when the Android activity is resumed.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onStart": {
      "description": "Callback function called when the Android activity is started.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onStop": {
      "description": "Callback function called when the Android activity is stopped.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onThumbColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "onTintColor": {
      "description": "The color used to tint the appearance of the switch when it is turned on.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "ondatastream": {
      "description": "Function to be called at regular intervals as the request data is being received.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onerror": {
      "description": "Function to be called upon a error response.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "online": {
      "description": "Boolean value indicating if the device is connected to the network.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "onlink": {
      "description": "Fired before navigating to a link.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onload": {
      "description": "Function to be called upon a successful response.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onreadystatechange": {
      "description": "Function to be called for each <a href=\"Titanium.Network.HTTPClient.readyState\">readyState</a> change.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "onsendstream": {
      "description": "Function to be called at regular intervals as the request data is being transmitted.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "opacity": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "opaque": {
      "description": "Value of the <code>opaque</code> property at the end of the animation.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "opaquebackground": {
      "description": "Boolean value indicating if the option dialog should have an opaque background.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "open": {
      "description": "Function to call when the camera is shown",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "operator": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "options": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_NONE",
        "Ti.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_CUSTOM_DISMISS_ACTION",
        "Ti.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_ALLOW_IN_CARPLAY",
        "Ti.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_TITLE",
        "Ti.App.iOS.USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_SUBTITLE"
      ]
    },
    "order": {
      "description": "Integer used for controlling the category and sort order for menu items.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "organization": {
      "description": "Organization to which the person belongs. Single value.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "organizations": {
      "description": "Used to indicate company/Organization that created the document.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "orientation": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.UI.LANDSCAPE_LEFT",
        "Ti.UI.LANDSCAPE_RIGHT",
        "Ti.UI.PORTRAIT",
        "Ti.UI.UPSIDE_PORTRAIT"
      ]
    },
    "orientationModes": {
      "description": "Array of supported orientation modes, specified using the orientation\nconstants defined in <a href=\"Titanium.UI\">Titanium.UI</a>.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.UI.LANDSCAPE_LEFT",
        "Ti.UI.LANDSCAPE_RIGHT",
        "Ti.UI.PORTRAIT",
        "Ti.UI.UPSIDE_PORTRAIT"
      ]
    },
    "originalFormat": {
      "description": "Original format of the movie.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "originalSource": {
      "description": "Original source of the movie.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "originalUrl": {
      "description": "The origual url attribute of the cookie.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "osname": {
      "description": "Short name of the system's Operating System. Returns <code>android</code> for the Android platfrom,\n<code>iphone</code> for the iPhone or iPod Touch, <code>ipad</code> for the iPad, <code>windowsphone</code> for Windows Phone, and <code>windowsstore</code> for Windows Store\nplatform.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "ostype": {
      "description": "Operating System architecture. On Android, this is <code>32bit</code>.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "outputs": {
      "description": "An Array of current output ports for the session. See the <code>AUDIO_SESSION_PORT</code> constants.",
      "type": "Array",
      "readOnly": true,
      "values": [
        "Ti.Media.AUDIO_SESSION_PORT_LINEIN",
        "Ti.Media.AUDIO_SESSION_PORT_BUILTINMIC",
        "Ti.Media.AUDIO_SESSION_PORT_HEADSETMIC",
        "Ti.Media.AUDIO_SESSION_PORT_LINEOUT",
        "Ti.Media.AUDIO_SESSION_PORT_HEADPHONES",
        "Ti.Media.AUDIO_SESSION_PORT_BLUETOOTHA2DP",
        "Ti.Media.AUDIO_SESSION_PORT_BUILTINRECEIVER",
        "Ti.Media.AUDIO_SESSION_PORT_BUILTINSPEAKER",
        "Ti.Media.AUDIO_SESSION_PORT_HDMI",
        "Ti.Media.AUDIO_SESSION_PORT_AIRPLAY",
        "Ti.Media.AUDIO_SESSION_PORT_BLUETOOTHHFP",
        "Ti.Media.AUDIO_SESSION_PORT_USBAUDIO",
        "Ti.Media.AUDIO_SESSION_PORT_BLUETOOTHLE",
        "Ti.Media.AUDIO_SESSION_PORT_CARAUDIO"
      ]
    },
    "overScrollMode": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.OVER_SCROLL_ALWAYS",
        "Ti.UI.Android.OVER_SCROLL_IF_CONTENT_SCROLLS",
        "Ti.UI.Android.OVER_SCROLL_NEVER"
      ]
    },
    "overflowIcon": {
      "description": "Image to be used for the overflow menu.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "overlay": {
      "description": "View to added as an overlay to the camera UI (on top).",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "overlayEnabled": {
      "description": "Determines whether the paging control is added as an overlay to the view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "overlayView": {
      "description": "Use the overlay view to add additional custom views between the video content and the controls.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "overrideCurrentAnimation": {
      "description": "When on, animate call overrides current animation if applicable.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "overrideUserInterfaceStyle": {
      "description": "Forces the app to used assigned theme instead of the system theme.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.USER_INTERFACE_STYLE_UNSPECIFIED",
        "Ti.UI.USER_INTERFACE_STYLE_LIGHT",
        "Ti.UI.USER_INTERFACE_STYLE_DARK"
      ]
    },
    "ownerDocument": {
      "description": "This node's owning document.",
      "type": "Titanium.XML.Document",
      "readOnly": false,
      "values": []
    },
    "ownerElement": {
      "description": "The <a href=\"Titanium.XML.Element\">Titanium.XML.Element</a> to which the attribute belongs.",
      "type": "Titanium.XML.Element",
      "readOnly": false,
      "values": []
    },
    "packageName": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "padding": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "paddingBottom": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "paddingLeft": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "paddingRight": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "paddingTop": {
      "description": "Inner padding between the top edge of the Card and children of the CardView.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "pageCount": {
      "description": "Number of pages in the item.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "pageHeight": {
      "description": "Height in points (72 points per inch) of the document page.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "pageIndicatorColor": {
      "description": "Color of the paging control, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "pageWidth": {
      "description": "Width in points (72 points per inch) of the document page.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "pagingControlAlpha": {
      "description": "Alpha value of the paging control.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "pagingControlColor": {
      "description": "Color of the paging control, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "pagingControlHeight": {
      "description": "Height of the paging control, in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "pagingControlOnTop": {
      "description": "Determines whether the paging control is displayed at the top or bottom of the view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "pagingControlTimeout": {
      "description": "Number of milliseconds to wait before hiding the paging control.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "paragraphSpacingAfter": {
      "description": "The space after the end of the paragraph.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "paragraphSpacingBefore": {
      "description": "The distance between the top of paragraph and the beginning of its text content.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "parent": {
      "description": "A <code>File</code> object representing the parent directory of the file identified by this object.",
      "type": "Titanium.Filesystem.File",
      "readOnly": false,
      "values": []
    },
    "parentNode": {
      "description": "This node's parent node.",
      "type": "Titanium.XML.Node",
      "readOnly": false,
      "values": []
    },
    "participants": {
      "description": "The list of people who are visible in an image or movie or written about in a document.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "passthroughViews": {
      "description": "Passthrough views to use when the popover is shown.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "password": {
      "description": "Sets the password parameter for authentication credentials.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "passwordHintText": {
      "description": "Hint text of the password text field inside the dialog.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "passwordKeyboardType": {
      "description": "Keyboard type to display when this text field inside the dialog is focused.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.KEYBOARD_APPEARANCE_DEFAULT",
        "Ti.UI.KEYBOARD_APPEARANCE_DARK",
        "Ti.UI.KEYBOARD_APPEARANCE_LIGHT",
        "Ti.UI.KEYBOARD_TYPE_DECIMAL_PAD",
        "Ti.UI.KEYBOARD_TYPE_ASCII",
        "Ti.UI.KEYBOARD_TYPE_DEFAULT",
        "Ti.UI.KEYBOARD_TYPE_EMAIL",
        "Ti.UI.KEYBOARD_TYPE_NAMEPHONE_PAD",
        "Ti.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION",
        "Ti.UI.KEYBOARD_TYPE_NUMBER_PAD",
        "Ti.UI.KEYBOARD_TYPE_PHONE_PAD",
        "Ti.UI.KEYBOARD_TYPE_WEBSEARCH",
        "Ti.UI.KEYBOARD_TYPE_TWITTER",
        "Ti.UI.KEYBOARD_TYPE_URL"
      ]
    },
    "passwordMask": {
      "description": "Obscure the input text from the user.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "passwordPlaceholder": {
      "description": "Placeholder of the password text field inside the dialog. <strong>Deprecated since 5.4.0. Use <a href=\"Titanium.UI.AlertDialog.passwordHintText\">Titanium.UI.AlertDialog.passwordHintText</a> instead.</strong>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "passwordReturnKeyType": {
      "description": "Specifies the text to display on the keyboard <code>Return</code> key when this field is focused.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.RETURNKEY_CONTINUE",
        "Ti.UI.RETURNKEY_DEFAULT",
        "Ti.UI.RETURNKEY_DONE",
        "Ti.UI.RETURNKEY_EMERGENCY_CALL",
        "Ti.UI.RETURNKEY_GO",
        "Ti.UI.RETURNKEY_GOOGLE",
        "Ti.UI.RETURNKEY_JOIN",
        "Ti.UI.RETURNKEY_NEXT",
        "Ti.UI.RETURNKEY_ROUTE",
        "Ti.UI.RETURNKEY_SEARCH",
        "Ti.UI.RETURNKEY_SEND",
        "Ti.UI.RETURNKEY_YAHOO"
      ]
    },
    "passwordRules": {
      "description": "Set password rules that should be used for this text field.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "passwordValue": {
      "description": "Value of the password text field inside the dialog.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "passwordhinttextid": {
      "description": "Key identifying a string from the locale file to use for the\n<a href=\"Titanium.UI.AlertDialog.passwordHintText\">passwordHintText</a> property.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "path": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "pathOnly": {
      "description": "Do not include the blob in the result",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "pauseLocationUpdateAutomatically": {
      "description": "Indicates whether the location updates may be paused.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "paused": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "peakMicrophonePower": {
      "description": "Current microphone level peak power in dB or -1 if microphone monitoring is disabled.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "performers": {
      "description": "Performers in the movie.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "persistent": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "persistentID": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "persistentIdentifier": {
      "description": "A value used to identify the user activity.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "phone": {
      "description": "Phone numbers for the person. Multi-value. Read-only on Android.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "physicalSizeCategory": {
      "description": "The physical size category of the Android device or emulator.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_LARGE",
        "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_NORMAL",
        "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_SMALL",
        "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_UNDEFINED",
        "Ti.Platform.Android.PHYSICAL_SIZE_CATEGORY_XLARGE"
      ]
    },
    "pictureInPictureEnabled": {
      "description": "Whether or not the receiver allows Picture in Picture playback.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "pid": {
      "description": "The <code>process.pid</code> property returns the PID of the process. Always returns <code>0</code> in Titanium.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "placeholder": {
      "description": "Placeholder of the text field inside the dialog. <strong>Deprecated since 5.4.0. Use <a href=\"Titanium.UI.AlertDialog.hintText\">Titanium.UI.AlertDialog.hintText</a> instead.</strong>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "places": {
      "description": "An array of reverse-geocoded addresses matching the requested location.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "platform": {
      "description": "Equivalent to <a href=\"Titanium.Platform.osname\">Titanium.Platform.osname</a>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "platformHeight": {
      "description": "Absolute height of the display in relation to UI orientation. Measured in platform-specific\nunits; pixels on Android and density-independent pixels (dip) on iOS.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "platformWidth": {
      "description": "Absolute width of the display in relation to UI orientation. Measured in platform-specific\nunits; pixels on Android and density-independent pixels (dip) on iOS.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "playCount": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "playableDuration": {
      "description": "Currently playable duration of the movie, in milliseconds, for progressively\ndownloaded network content, or 0.0 if not known.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "playbackDuration": {
      "description": "Length (in seconds) of this item.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "playbackState": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Media.MUSIC_PLAYER_STATE_INTERRUPTED",
        "Ti.Media.MUSIC_PLAYER_STATE_PAUSED",
        "Ti.Media.MUSIC_PLAYER_STATE_PLAYING",
        "Ti.Media.MUSIC_PLAYER_STATE_SEEK_BACKWARD",
        "Ti.Media.MUSIC_PLAYER_STATE_SEEK_FORWARD",
        "Ti.Media.MUSIC_PLAYER_STATE_STOPPED",
        "Ti.Media.VIDEO_PLAYBACK_STATE_INTERRUPTED",
        "Ti.Media.VIDEO_PLAYBACK_STATE_PAUSED",
        "Ti.Media.VIDEO_PLAYBACK_STATE_PLAYING",
        "Ti.Media.VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD",
        "Ti.Media.VIDEO_PLAYBACK_STATE_SEEKING_FORWARD",
        "Ti.Media.VIDEO_PLAYBACK_STATE_STOPPED"
      ]
    },
    "playbackStoreID": {
      "description": "Used to enqueue store tracks by their ID.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "playing": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "pluginState": {
      "description": "Determines how to treat content that requires plugins in this web view.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.WEBVIEW_PLUGINS_OFF",
        "Ti.UI.Android.WEBVIEW_PLUGINS_ON",
        "Ti.UI.Android.WEBVIEW_PLUGINS_ON_DEMAND"
      ]
    },
    "plurals": {
      "description": "Plurals resources. See\n<a href=\"https://developer.android.com/reference/android/R.plurals.html\">R.plurals</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "podcastPersistentID": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "podcastTitle": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "point1": {
      "description": "Start point for the boundary",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "point2": {
      "description": "End point for the boundary",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "poolSize": {
      "description": "This is the size (in bytes) of pre-allocated internal <code>Buffer</code> instances used for pooling. This value may be modified.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "popoverView": {
      "description": "",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "port": {
      "description": "The port to connect to or listen on.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "portrait": {
      "description": "Indicates if the device is currently held in portrait form.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "portraitSplit": {
      "description": "Determines the width of the <code>masterView</code> in portrait mode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "position": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.ListViewScrollPosition.BOTTOM",
        "Ti.UI.iOS.ListViewScrollPosition.MIDDLE",
        "Ti.UI.iOS.ListViewScrollPosition.NONE",
        "Ti.UI.iOS.ListViewScrollPosition.TOP",
        "Ti.UI.ListViewScrollPosition.BOTTOM",
        "Ti.UI.ListViewScrollPosition.MIDDLE",
        "Ti.UI.ListViewScrollPosition.NONE",
        "Ti.UI.ListViewScrollPosition.TOP",
        "Ti.UI.TableViewScrollPosition.BOTTOM",
        "Ti.UI.TableViewScrollPosition.MIDDLE",
        "Ti.UI.TableViewScrollPosition.NONE",
        "Ti.UI.TableViewScrollPosition.TOP"
      ]
    },
    "posix": {
      "description": "The <code>path.posix</code> property provides access to POSIX specific implementations of the <code>path</code> methods.",
      "type": "path",
      "readOnly": true,
      "values": []
    },
    "postalCode": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "power": {
      "description": "Power consumption for this provider, either low (1), medium (2), or high (3).",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ppid": {
      "description": "The <code>process.ppid</code> property returns the PID of the parent of the current process. Always returns <code>0</code> in Titanium.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "preferences": {
      "description": "The preference settings to be used by the web view.",
      "type": "WebViewPreferencesObject",
      "readOnly": true,
      "values": []
    },
    "preferred": {
      "description": "Index to define the preferred button.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "preferredIndicatorImage": {
      "description": "The preferred image for indicators, defined using a local filesystem path, or a <code>Blob</code> object containing image data.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "prefix": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "preventCornerOverlap": {
      "description": "Add padding to CardView on API level 20 and before to prevent intersections between\nthe Card content and rounded corners.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "preventDefaultImage": {
      "description": "Prevent the default image from being displayed while loading a remote image. This property\nis ignored when the <code>defaultImage</code> property is set.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "preview": {
      "description": "The preview view.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "previewContext": {
      "description": "The preview context used in the 3D-Touch feature &quot;Peek and Pop&quot;.",
      "type": "Titanium.UI.iOS.PreviewContext",
      "readOnly": true,
      "values": []
    },
    "previewRect": {
      "description": "Simple object defining the preview image size. This will be undefined when custom camera overlay is not used. Values are assumed to be in pixels.",
      "type": "Size",
      "readOnly": true,
      "values": []
    },
    "previousSibling": {
      "description": "This node's previous sibling.",
      "type": "Titanium.XML.Node",
      "readOnly": false,
      "values": []
    },
    "priority": {
      "description": "",
      "type": "os.constants.priority",
      "readOnly": true,
      "values": [
        "Ti.Android.PRIORITY_MAX",
        "Ti.Android.PRIORITY_HIGH",
        "Ti.Android.PRIORITY_DEFAULT",
        "Ti.Android.PRIORITY_LOW",
        "Ti.Android.PRIORITY_MIN"
      ]
    },
    "process": {
      "description": "Reference to the global <code>process</code> object.",
      "type": "process",
      "readOnly": true,
      "values": []
    },
    "processPool": {
      "description": "The process pool from which to obtain the  Web Content process of view.",
      "type": "Titanium.UI.iOS.WebViewProcessPool",
      "readOnly": true,
      "values": []
    },
    "processorCount": {
      "description": "Number of logical processing cores.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "producer": {
      "description": "Producer of the content.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "progress": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "projects": {
      "description": "The list of projects that this item is part of.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "prompt": {
      "description": "Single line of text displayed at the top of the search bar.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "promptid": {
      "description": "Key identifying a string from the locale file to use for the\n<a href=\"Titanium.UI.SearchBar.prompt\">prompt</a> property.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "properties": {
      "description": "",
      "type": "Titanium.UI.ListItem",
      "readOnly": true,
      "values": []
    },
    "provider": {
      "description": "If <code>success</code> is true, object describing the location provider generating this update.",
      "type": "LocationProviderDict",
      "readOnly": true,
      "values": []
    },
    "providesAppNotificationSettings": {
      "description": "A Boolean value indicating the system displays a button for in-app notification settings.\nAvailable in Titanium SDK 7.4.0 and later.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "proximityDetection": {
      "description": "Determines whether proximity detection is enabled.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "proximityState": {
      "description": "Indicates the state of the device's proximity sensor, according to the\n<a href=\"Titanium.App.proximity\">Titanium.App.proximity</a> event.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "pruneSectionsOnEdit": {
      "description": "Determines if empty sections are retained when the user completes editing the list view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "publicId": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "publisher": {
      "description": "Application publisher, from <code>tiapp.xml</code>.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "publishers": {
      "description": "Used to designate the entity responsible for making the resource available.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "pullBackgroundColor": {
      "description": "Background color of the wrapper view when this view is used as either <a href=\"Titanium.UI.ListView.pullView\">Titanium.UI.ListView.pullView</a> or <a href=\"Titanium.UI.TableView.headerPullView\">Titanium.UI.TableView.headerPullView</a>.\nDefaults to <code>undefined</code>. Results in a light grey background color on the wrapper view.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "pullView": {
      "description": "View positioned above the first row that is only revealed when the user drags the list view contents down.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "pushDirection": {
      "description": "Specifies the direction of the force vector as an x, y pair.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "pushMode": {
      "description": "Specifies the push mode.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.PUSH_MODE_CONTINUOUS",
        "Ti.UI.iOS.PUSH_MODE_INSTANTANEOUS"
      ]
    },
    "queryString": {
      "description": "A formatted string that defines the matching criteria to apply to indexed items.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "range": {
      "description": "Attribute range.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "rate": {
      "description": "Indicates the desired rate of playback; 0.0 means &quot;paused&quot;, 1.0 indicates a\ndesire to play at the natural rate of the current item. In addition, 2.0\nwould mean that the audio plays twice as fast.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rating": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ratingDescription": {
      "description": "A description of the rating, for example, the number of reviewers.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "raw": {
      "description": "Raw resources. See\n<a href=\"https://developer.android.com/reference/android/R.raw.html\">R.raw</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "rdev": {
      "description": "A numeric device identifier if the file represents a device.\nAlways returns <code>0</code> on Titanium.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "readonly": {
      "description": "<code>true</code> if the file identified by this object is read-only.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "readyState": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Network.HTTPClient.UNSENT",
        "Ti.Network.HTTPClient.OPENED",
        "Ti.Network.HTTPClient.HEADERS_RECEIVED",
        "Ti.Network.HTTPClient.LOADING",
        "Ti.Network.HTTPClient.DONE"
      ]
    },
    "recentApplicationContext": {
      "description": "The most recent application context sent to the watch app.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "recordId": {
      "description": "Record identifier of the person. Single value. Deprecated since iOS 9.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "recording": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "recordingDate": {
      "description": "The recording date of the song/composition.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "rect": {
      "description": "",
      "type": "DimensionWithAbsolutes",
      "readOnly": false,
      "values": []
    },
    "recurrenceRules": {
      "description": "The recurrence rules for the calendar item.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "recursive": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "referenceInsets": {
      "description": "Insets to apply when using the animator's reference view as the boundary.",
      "type": "Padding",
      "readOnly": true,
      "values": []
    },
    "referenceView": {
      "description": "Titanium View object to initialize as the reference view for the animator.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "refreshControl": {
      "description": "",
      "type": "Titanium.UI.RefreshControl",
      "readOnly": true,
      "values": []
    },
    "region": {
      "description": "",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "region1": {
      "description": "First line of region.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "region2": {
      "description": "Not used.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "relatedNames": {
      "description": "Names of people to which the person is related. Multi-value.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "relatedUniqueIdentifier": {
      "description": "For activities this is the unique identifier for the item this activity is related to.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "relativeOffset": {
      "description": "The offset from the start of an event, at which the alarm fires.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "releaseDate": {
      "description": "Date when this this item was released.",
      "type": "Date",
      "readOnly": false,
      "values": []
    },
    "remainingComplicationUserInfoTransfers": {
      "description": "The number of calls remaining to <code>transferCurrentComplication</code> before the system starts\ntransferring the complicationUserInfo as regular userInfos.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "reminders": {
      "description": "Existing reminders for this event.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "remoteBackup": {
      "description": "Value indicating whether or not to back up to a cloud service.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "remoteDeviceUUID": {
      "description": "Remote device UUID if the device is registered with the Apple Push Notification\nService, or null if it is not registered.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "remoteNotificationTypes": {
      "description": "Array of push notification type constants enabled for the application.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "remoteNotificationsEnabled": {
      "description": "Indicates whether push  notifications have been enabled using\n<a href=\"Titanium.Network.registerForPushNotifications\">registerForPushNotifications</a>.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "repeat": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "repeatCount": {
      "description": "Number of times to repeat the image animation.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "repeatMode": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.MUSIC_PLAYER_REPEAT_ALL",
        "Ti.Media.MUSIC_PLAYER_REPEAT_DEFAULT",
        "Ti.Media.MUSIC_PLAYER_REPEAT_NONE",
        "Ti.Media.MUSIC_PLAYER_REPEAT_ONE",
        "Ti.Media.VIDEO_REPEAT_MODE_NONE",
        "Ti.Media.VIDEO_REPEAT_MODE_ONE"
      ]
    },
    "representative": {
      "description": "A single representative of the selected items.",
      "type": "Titanium.Media.Item",
      "readOnly": true,
      "values": []
    },
    "requestCode": {
      "description": "Unique, automatically generated integer request code.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "requestHeaders": {
      "description": "Sets extra request headers for this web view to use on subsequent URL requests.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "requestedOrientation": {
      "description": "Specifies a specific orientation for this activity.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.SCREEN_ORIENTATION_BEHIND",
        "Ti.Android.SCREEN_ORIENTATION_LANDSCAPE",
        "Ti.Android.SCREEN_ORIENTATION_NOSENSOR",
        "Ti.Android.SCREEN_ORIENTATION_PORTRAIT",
        "Ti.Android.SCREEN_ORIENTATION_SENSOR",
        "Ti.Android.SCREEN_ORIENTATION_UNSPECIFIED",
        "Ti.Android.SCREEN_ORIENTATION_USER"
      ]
    },
    "requiredUserInfoKeys": {
      "description": "An array of String keys from the userInfo property which represent the minimal information about the user activity that should be stored for later restoration.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "requiresEditingToMove": {
      "description": "Determines if the list view should allow drag-and-drop even without going into the editing mode",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "resRawDirectory": {
      "description": "Path to the application's raw resource directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "resistance": {
      "description": "Specifies the linear resistance of this item which reduces linear velocity over time.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "resourcesDirectory": {
      "description": "Path to the application's resource directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "responseData": {
      "description": "Response data as a <code>Blob</code> object.",
      "type": "Titanium.Blob",
      "readOnly": false,
      "values": []
    },
    "responseDictionary": {
      "description": "Response as JSON object.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "responseHeaders": {
      "description": "Returns all the response headers returned with the request.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "responseText": {
      "description": "Response as text.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "responseXML": {
      "description": "Response object as an XML DOM Document object.",
      "type": "Titanium.XML.Document",
      "readOnly": false,
      "values": []
    },
    "resultCode": {
      "description": "Integer result code that the started activity passed to\n<a href=\"Titanium.Android.Activity.setResult\">setResult</a>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "results": {
      "description": "partial <code>ResultSet</code>s of any successful queries before the failure",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "resultsBackgroundColor": {
      "description": "The background color of the search results (iOS-only).",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "resultsSeparatorColor": {
      "description": "Separator line color between rows inside search results,\nas a color name or hex triplet (iOS-only).",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "resultsSeparatorInsets": {
      "description": "The insets for search results separators (applies to all cells &amp; iOS-only).",
      "type": "HorizontalInsets",
      "readOnly": true,
      "values": []
    },
    "resultsSeparatorStyle": {
      "description": "The separator style of the search results (iOS-only).",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.TABLE_VIEW_SEPARATOR_STYLE_NONE",
        "Ti.UI.TABLE_VIEW_SEPARATOR_STYLE_SINGLE_LINE"
      ]
    },
    "retryDelay": {
      "description": "The amount of time in milliseconds to wait between retries. This option is ignored if the <code>recursive</code> option is not <code>true</code>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "returnKeyType": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.RETURNKEY_CONTINUE",
        "Ti.UI.RETURNKEY_DEFAULT",
        "Ti.UI.RETURNKEY_DONE",
        "Ti.UI.RETURNKEY_EMERGENCY_CALL",
        "Ti.UI.RETURNKEY_GO",
        "Ti.UI.RETURNKEY_GOOGLE",
        "Ti.UI.RETURNKEY_JOIN",
        "Ti.UI.RETURNKEY_NEXT",
        "Ti.UI.RETURNKEY_ROUTE",
        "Ti.UI.RETURNKEY_SEARCH",
        "Ti.UI.RETURNKEY_SEND",
        "Ti.UI.RETURNKEY_YAHOO"
      ]
    },
    "reverse": {
      "description": "Run the animation in reverse.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "right": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rightButton": {
      "description": "Right button view.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "rightButtonMode": {
      "description": "Determines when to display the right button view.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.INPUT_BUTTONMODE_ALWAYS",
        "Ti.UI.INPUT_BUTTONMODE_NEVER",
        "Ti.UI.INPUT_BUTTONMODE_ONBLUR",
        "Ti.UI.INPUT_BUTTONMODE_ONFOCUS"
      ]
    },
    "rightButtonPadding": {
      "description": "Padding between the right button and the edge of the field.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rightDrawerLockMode": {
      "description": "Get or set lock mode for the right drawer",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_LOCKED_CLOSED",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_LOCKED_OPEN",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_UNDEFINED",
        "Ti.UI.Android.DrawerLayout.LOCK_MODE_UNLOCKED"
      ]
    },
    "rightImage": {
      "description": "Image to render in the right image area of the row, specified as a local path or URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "rightNavButton": {
      "description": "View to show in the right nav bar area.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "rightNavButtons": {
      "description": "An Array of views to show in the right nav bar area.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "rightTrackImage": {
      "description": "Image URL of the slider right track.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "rightTrackLeftCap": {
      "description": "Size of the left end cap for the rightTrackImage, disabledRightTrackImage, highlightedRightTrackImage and selectedRightTrackImage properties.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rightTrackTopCap": {
      "description": "Size of the top end cap for the rightTrackImage, disabledRightTrackImage, highlightedRightTrackImage and selectedRightTrackImage properties.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rightView": {
      "description": "Get or set the view of the right drawer",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "rightWidth": {
      "description": "Get or set the width of the right drawer",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rights": {
      "description": "Used to provide a link to information about rights held in and over resource.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "role": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Calendar.ATTENDEE_ROLE_UNKNOWN",
        "Ti.Calendar.ATTENDEE_ROLE_OPTIONAL",
        "Ti.Calendar.ATTENDEE_ROLE_REQUIRED",
        "Ti.Calendar.ATTENDEE_ROLE_CHAIR",
        "Ti.Calendar.ATTENDEE_ROLE_NON_PARTICIPANT"
      ]
    },
    "root": {
      "description": "Root filesystem path, i.e. <code>'/'</code> or <code>'C:\\\\'</code>. Ignored if <code>pathObject.dir</code> is provided",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "rootActivity": {
      "description": "The first activity launched by the application.",
      "type": "Titanium.Android.Activity",
      "readOnly": false,
      "values": []
    },
    "rotate": {
      "description": "Rotation angle, in degrees. See the <a href=\"Titanium.UI.Matrix2D.rotate\">rotate</a> method\nfor a discussion of rotation.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rotation": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rotationX": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rotationY": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "row": {
      "description": "Table view row object.",
      "type": "Titanium.UI.TableViewRow",
      "readOnly": true,
      "values": []
    },
    "rowCount": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "rowData": {
      "description": "Properties of the row. Use this property rather than <code>row</code> to access any custom row properties.",
      "type": "Titanium.UI.TableViewRow",
      "readOnly": true,
      "values": []
    },
    "rowHeight": {
      "description": "Default row height for table view rows.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "rowSeparatorInsets": {
      "description": "",
      "type": "HorizontalInsets",
      "readOnly": true,
      "values": []
    },
    "rows": {
      "description": "",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "rowsAffected": {
      "description": "The number of rows affected by the last query.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "running": {
      "description": "Returns <code>true</code> if the animator is running else <code>false</code>.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "runtime": {
      "description": "Short name of the JavaScript runtime in use.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "safeAreaPadding": {
      "description": "The padding needed to safely display content without it being overlapped by the screen insets and notches.",
      "type": "Padding",
      "readOnly": false,
      "values": []
    },
    "saveToPhotoGallery": {
      "description": "Specifies if the media should be saved to the photo gallery upon successful capture.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "scale": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "scaleX": {
      "description": "Scaling of the view in x-axis in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "scaleY": {
      "description": "Scaling of the view in y-axis in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "scalesPageToFit": {
      "description": "If <code>true</code>, scale contents to fit the web view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "scalingMode": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Media.IMAGE_SCALING_ASPECT_FIT",
        "Ti.Media.IMAGE_SCALING_ASPECT_FILL",
        "Ti.Media.VIDEO_SCALING_ASPECT_FILL|deprecated",
        "Ti.Media.VIDEO_SCALING_ASPECT_FIT|deprecated",
        "Ti.Media.VIDEO_SCALING_MODE_FILL|deprecated",
        "Ti.Media.VIDEO_SCALING_NONE|deprecated",
        "Ti.Media.VIDEO_SCALING_RESIZE",
        "Ti.Media.VIDEO_SCALING_RESIZE_ASPECT",
        "Ti.Media.VIDEO_SCALING_RESIZE_ASPECT_FILL",
        "Ti.Media.IMAGE_SCALING_AUTO",
        "Ti.Media.IMAGE_SCALING_NONE",
        "Ti.Media.IMAGE_SCALING_FILL"
      ]
    },
    "scrollIndicatorStyle": {
      "description": "Style of the scrollbar.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.ScrollIndicatorStyle.BLACK",
        "Ti.UI.iOS.ScrollIndicatorStyle.DEFAULT",
        "Ti.UI.iOS.ScrollIndicatorStyle.WHITE"
      ]
    },
    "scrollType": {
      "description": "Limits the direction of the scrollable region, overriding the deduced setting. Set to\n<code>horizontal</code> or <code>vertical</code>.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "scrollable": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "scrollbars": {
      "description": "Enable or disable horizontal/vertical scrollbars in a WebView.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.WEBVIEW_SCROLLBARS_DEFAULT",
        "Ti.UI.Android.WEBVIEW_SCROLLBARS_HIDE_VERTICAL",
        "Ti.UI.Android.WEBVIEW_SCROLLBARS_HIDE_HORIZONTAL",
        "Ti.UI.Android.WEBVIEW_SCROLLBARS_HIDE_ALL"
      ]
    },
    "scrollingEnabled": {
      "description": "Determines whether scrolling is enabled for the view.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "scrollsToTop": {
      "description": "Controls whether the scroll-to-top gesture is effective.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "search": {
      "description": "Search field to use for the table view.",
      "type": "Titanium.UI.SearchBar",
      "readOnly": true,
      "values": []
    },
    "searchAsChild": {
      "description": "Determines whether the <a href=\"Titanium.UI.SearchBar\">SearchBar</a> or <a href=\"Titanium.UI.Android.SearchView\">SearchView</a> appears as part of the TableView.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "searchHidden": {
      "description": "Determines whether the search field is visible.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "searchText": {
      "description": "The string to use as the search parameter.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "searchView": {
      "description": "Search field to use for the list view.",
      "type": "Titanium.UI.SearchBar",
      "readOnly": true,
      "values": []
    },
    "searchableText": {
      "description": "The text to match against when the <a href=\"Titanium.UI.ListView\">ListView</a> is performing a search.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "second": {
      "description": "Indicates how seconds should be formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "section": {
      "description": "",
      "type": "Titanium.UI.ListSection",
      "readOnly": true,
      "values": []
    },
    "sectionCount": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "sectionHeaderTopPadding": {
      "description": "Padding above each section header.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "sectionIndex": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "sectionIndexTitles": {
      "description": "Array of objects (with <code>title</code> and <code>index</code> properties) to control the list view index.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "sections": {
      "description": "",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "secure": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "securityManager": {
      "description": "The Security Manager for this client.",
      "type": "SecurityManagerProtocol",
      "readOnly": true,
      "values": []
    },
    "securityMethod": {
      "description": "Security (encryption) method used in the file.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "selectableCalendars": {
      "description": "All calendars selected within the native calendar app, which may be a subset of <code>allCalendars</code>.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "selected": {
      "description": "",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "selectedBackgroundColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "selectedBackgroundGradient": {
      "description": "Background gradient to render when the item is selected. <strong>Deprecated since 10.0.0. This property has been deprecated in favor of <a href=\"Titanium.UI.ListItem.backgroundSelectedGradient\">Titanium.UI.ListItem.backgroundSelectedGradient</a>.</strong>",
      "type": "Gradient",
      "readOnly": true,
      "values": []
    },
    "selectedBackgroundImage": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "selectedBorderColor": {
      "description": "Border color of the selected button",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "selectedButtonColor": {
      "description": "Color of selected button, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "selectedColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "selectedImage": {
      "description": "Image or path to image to display in the item as it is selected.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "selectedIndex": {
      "description": "Defines the default selected option. Since <code>8.1.0</code>, if not defined or -1 it will show a normal list instead of radio buttons.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "selectedItems": {
      "description": "Returns the selected list view items.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "selectedLeftTrackImage": {
      "description": "Image URL of the slider left track when in the selected state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "selectedPerson": {
      "description": "Function to call when a person is selected. Must not be used with <code>selectedProperty</code> property.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "selectedProperty": {
      "description": "Function to call when a property is selected. Must not be used with <code>selectedPerson</code>\nproperty.\nNote: If ringtone or texttone is selected, null values are returned, since these are unsupported\nby Apple.\nSince iOS 9.0, there is a native apple issue whereby it may return null if the birthday property\nis selected on certain device models.\nThe callback contains the selected property and a 'person' object of type <a href=\"Titanium.Contacts.Person\">Titanium.Contacts.Person</a>.\nSince iOS 9.0, apple only returns the person object with partial information. Currently it is known to\nat least contain the selected property and fullName.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "selectedRightTrackImage": {
      "description": "Image URL of the slider right track when in the selected state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "selectedSubtitleColor": {
      "description": "Color to use for the item subtitle when the item is selected, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "selectedTextColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "selectedThumbImage": {
      "description": "Image URL of the slider thumb when in the selected state.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "selection": {
      "description": "",
      "type": "textAreaSelectedParams",
      "readOnly": false,
      "values": []
    },
    "selectionGranularity": {
      "description": "The level of granularity with which the user can interactively select content in the web view.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.UI.iOS.SELECTION_GRANULARITY_DYNAMIC",
        "Ti.UI.iOS.SELECTION_GRANULARITY_CHARACTER"
      ]
    },
    "selectionIndicator": {
      "description": "Determines whether the visual selection indicator is shown.\n<strong>Deprecated since 10.0.1. This property is ignored as of Titanium 10.0.1.</strong>",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "selectionLimit": {
      "description": "Specifies number of media item that can be selected.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "selectionOpens": {
      "description": "Determines whether calling the method <code>setSelectedRow</code> opens when called",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "selectionStyle": {
      "description": "Selection style constant to control the selection color.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.SELECTION_STYLE_NONE",
        "Ti.UI.SELECTION_STYLE_DEFAULT"
      ]
    },
    "semanticColorType": {
      "description": "The current mode for the device (corresponding to night/dark or light/normal) <strong>Deprecated since 9.1.0. Use <a href=\"Titanium.UI.userInterfaceStyle\">userInterfaceStyle</a> instead.</strong>",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.SEMANTIC_COLOR_TYPE_DARK|deprecated",
        "Ti.UI.SEMANTIC_COLOR_TYPE_LIGHT|deprecated"
      ]
    },
    "sensitivity": {
      "description": "Indicates how characters should be compared.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "sep": {
      "description": "Provides the platform-specific path segment separator:\n<ul>\n<li><code>\\</code> on Windows</li>\n<li><code>/</code> on POSIX</li>\n</ul>",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "separator": {
      "description": "Platform-specific path separator constant.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "separatorColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "separatorHeight": {
      "description": "height of the ListView separator.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "separatorInsets": {
      "description": "",
      "type": "HorizontalInsets",
      "readOnly": true,
      "values": []
    },
    "separatorStyle": {
      "description": "Separator style constant.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.TABLE_VIEW_SEPARATOR_STYLE_NONE",
        "Ti.UI.TABLE_VIEW_SEPARATOR_STYLE_SINGLE_LINE"
      ]
    },
    "serviceInstanceId": {
      "description": "A service can be started more than once -- this number (based on an incrementing integer)\nindicates which &quot;start number&quot; in the sequence the current service instance is.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "serviceType": {
      "description": "The type of the service the browser searches for",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "sessionId": {
      "description": "Unique session identifier for the current continuous run of the application.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "setPositions": {
      "description": "An array of ordinal numbers that filters which recurrences to include in the\nrecurrence rule's frequency. For example, a yearly recurrence rule that has a\n<a href=\"Titanium.Calendar.RecurrenceRule.daysOfTheWeek\">daysOfTheWeek</a> value that specifies\nMonday through Friday, and a <code>setPositions</code> array containing 2 and -1, occurs only\non the second weekday and last weekday of every year.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "severity": {
      "description": "Indicates the severity of the alert in apps built with Mac Catalyst.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.ALERT_SEVERITY_DEFAULT",
        "Ti.UI.iOS.ALERT_SEVERITY_CRITICAL"
      ]
    },
    "shadow": {
      "description": "Shadow color and offset for the window title.",
      "type": "shadowDict",
      "readOnly": true,
      "values": []
    },
    "shadowColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "shadowImage": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "shadowOffset": {
      "description": "",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "shadowRadius": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "shell": {
      "description": "command shell. Always <code>null</code> on Titanium",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "shiftMode": {
      "description": "Determines whether the <a href=\"Titanium.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION\">TABS_STYLE_BOTTOM_NAVIGATION</a> uses shiftMode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "showAsAction": {
      "description": "A set of flags that controls how this item appears in the action bar.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.SHOW_AS_ACTION_ALWAYS",
        "Ti.Android.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW",
        "Ti.Android.SHOW_AS_ACTION_IF_ROOM",
        "Ti.Android.SHOW_AS_ACTION_NEVER",
        "Ti.Android.SHOW_AS_ACTION_WITH_TEXT"
      ]
    },
    "showBackgroundLocationIndicator": {
      "description": "Specifies that an indicator be shown when the app makes use of continuous\nbackground location updates.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showBadge": {
      "description": "Whether notifications posted to this channel can appear as application icon badges in a Launcher.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showBookmark": {
      "description": "Determines whether the bookmark button is displayed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showCalibration": {
      "description": "Determines whether the compass calibration UI is shown if needed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showCancel": {
      "description": "Determines whether the cancel button is displayed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showControls": {
      "description": "Indicates if the built-in camera controls should be displayed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showHidden": {
      "description": "If <code>true</code>, object's non-enumerable symbols and properties are included in the formatted result. <code>WeakMap</code> and <code>WeakSet</code> entries are also included as well as user defined prototype properties (excluding method properties).",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showHorizontalScrollIndicator": {
      "description": "Determines whether the horizontal scroll indicator is visible.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showInForground": {
      "description": "Show notification if app is in foreground",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "showMasterInPortrait": {
      "description": "Determines whether to show the master view in portrait orientation.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showPagingControl": {
      "description": "Determines whether the paging control is visible.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showProxy": {
      "description": "If <code>true</code>, <code>Proxy</code> inspection includes the target and handler objects.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showSearchBarInNavBar": {
      "description": "A Boolean indicating whether search bar will be in navigation bar.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showSelectionCheck": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showUndoRedoActions": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showVerticalScrollIndicator": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "showsControls": {
      "description": "Whether or not the receiver shows playback controls. Default is true.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "shuffleMode": {
      "description": "Shuffle setting.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.MUSIC_PLAYER_SHUFFLE_ALBUMS",
        "Ti.Media.MUSIC_PLAYER_SHUFFLE_DEFAULT",
        "Ti.Media.MUSIC_PLAYER_SHUFFLE_NONE",
        "Ti.Media.MUSIC_PLAYER_SHUFFLE_SONGS"
      ]
    },
    "signals": {
      "description": "Signal constants",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "size": {
      "description": "",
      "type": "Dimension",
      "readOnly": false,
      "values": []
    },
    "skipCount": {
      "description": "Number of times this item has been skipped.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "smoothScrollOnTabClick": {
      "description": "Boolean value indicating if changing pages by tab clicks is animated.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "snapPoint": {
      "description": "Specifies the point to snap to.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "snapshot": {
      "description": "The snapshot image.",
      "type": "Titanium.Blob",
      "readOnly": true,
      "values": []
    },
    "socialProfile": {
      "description": "Social profile information of the person. Multi-value.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "socket": {
      "description": "",
      "type": "Titanium.Network.Socket.TCP",
      "readOnly": true,
      "values": []
    },
    "softKeyboardOnFocus": {
      "description": "Determines keyboard behavior when this view is focused. Defaults to <a href=\"Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS\">Titanium.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS</a>.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.SOFT_KEYBOARD_DEFAULT_ON_FOCUS",
        "Ti.UI.Android.SOFT_KEYBOARD_HIDE_ON_FOCUS",
        "Ti.UI.Android.SOFT_KEYBOARD_SHOW_ON_FOCUS"
      ]
    },
    "sorted": {
      "description": "If set to <code>true</code> or a function, all properties of an object, and <code>Set</code> and <code>Map</code> entries are sorted in the resulting string. If set to <code>true</code> the default sort is used. If set to a function, it is used as a compare function.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "sound": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "soundSetting": {
      "description": "The current sound settings.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_ENABLED",
        "Ti.App.iOS.USER_NOTIFICATION_SETTING_DISABLED"
      ]
    },
    "source": {
      "description": "",
      "type": "Titanium.Android.Activity",
      "readOnly": true,
      "values": []
    },
    "sourceIdentifier": {
      "description": "Displays the source identifier.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "sourceLength": {
      "description": "Number of characters in <code>source</code> to encode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "sourcePosition": {
      "description": "Position in <code>source</code> to start encoding.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "sourceTitle": {
      "description": "Displays the source title.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "sourceType": {
      "description": "Displays the source type.",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Calendar.SOURCE_TYPE_LOCAL",
        "Ti.Calendar.SOURCE_TYPE_EXCHANGE",
        "Ti.Calendar.SOURCE_TYPE_CALDAV",
        "Ti.Calendar.SOURCE_TYPE_MOBILEME",
        "Ti.Calendar.SOURCE_TYPE_SUBSCRIBED",
        "Ti.Calendar.SOURCE_TYPE_BIRTHDAYS"
      ]
    },
    "specified": {
      "description": "True if this attribute was explicitly given a value in the instance document, false otherwise.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "speed": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "splitActionBar": {
      "description": "Boolean value to enable split action bar. <strong>Deprecated since 6.2.0. Deprecated in AppCompat theme. The same behaviour can be achived by using Toolbar.</strong>",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "splitTrack": {
      "description": "Separates the thumbImage from the slider track.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "springVelocity": {
      "description": "The initial spring velocity.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "stackStartFn": {
      "description": "If provided, the generated stack trace omits frames before this function.",
      "type": "Function",
      "readOnly": true,
      "values": []
    },
    "start": {
      "description": "The offset from the top of this view at which the progress spinner should appear.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "startMode": {
      "description": "One of the <code>START_*</code> constants from <a href=\"Titanium.Android\">Titanium.Android</a> to specify the &quot;stickiness&quot; of the Service when Android shuts down the host application.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.START_NOT_STICKY",
        "Ti.Android.START_REDELIVER_INTENT"
      ]
    },
    "startPoint": {
      "description": "Start point for the gradient.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "startRadius": {
      "description": "For a radial gradient, the radius at the <code>startPoint</code>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "state": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.TILE_STATE_UNAVAILABLE",
        "Ti.Android.TILE_STATE_INACTIVE",
        "Ti.Android.TILE_STATE_ACTIVE",
        "Ti.Calendar.STATE_DISMISSED",
        "Ti.Calendar.STATE_FIRED",
        "Ti.Calendar.STATE_SCHEDULED",
        "Ti.Media.AUDIO_STATE_BUFFERING",
        "Ti.Media.AUDIO_STATE_INITIALIZED",
        "Ti.Media.AUDIO_STATE_PAUSED",
        "Ti.Media.AUDIO_STATE_PLAYING",
        "Ti.Media.AUDIO_STATE_STARTING",
        "Ti.Media.AUDIO_STATE_STOPPED",
        "Ti.Media.AUDIO_STATE_STOPPING",
        "Ti.Media.AUDIO_STATE_WAITING_FOR_DATA",
        "Ti.Network.Socket.INITIALIZED",
        "Ti.Network.Socket.CONNECTED",
        "Ti.Network.Socket.LISTENING",
        "Ti.Network.Socket.CLOSED",
        "Ti.Network.Socket.ERROR"
      ]
    },
    "staticItems": {
      "description": "List current pinned/static shortcuts.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "status": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Calendar.ATTENDEE_STATUS_UNKNOWN",
        "Ti.Calendar.ATTENDEE_STATUS_PENDING",
        "Ti.Calendar.ATTENDEE_STATUS_ACCEPTED",
        "Ti.Calendar.ATTENDEE_STATUS_DECLINED",
        "Ti.Calendar.ATTENDEE_STATUS_TENTATIVE",
        "Ti.Calendar.ATTENDEE_STATUS_INVITED",
        "Ti.Calendar.ATTENDEE_STATUS_NONE",
        "Ti.Calendar.ATTENDEE_STATUS_DELEGATED",
        "Ti.Calendar.ATTENDEE_STATUS_IN_PROCESS",
        "Ti.Calendar.STATUS_NONE",
        "Ti.Calendar.STATUS_CANCELED",
        "Ti.Calendar.STATUS_CONFIRMED",
        "Ti.Calendar.STATUS_TENTATIVE"
      ]
    },
    "statusBarBackgroundColor": {
      "description": "Sets the global status bar background color for the application. Android does not support setting instances of <a href=\"Titanium.UI.Color\">Titanium.UI.Color</a>",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "statusBarColor": {
      "description": "The color of the status bar (top bar) for this window.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "statusBarHeight": {
      "description": "The total height of the status bar including safe area padding.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "statusBarStyle": {
      "description": "The status bar style associated with this window.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.StatusBar.DEFAULT",
        "Ti.UI.iOS.StatusBar.GRAY|deprecated",
        "Ti.UI.iOS.StatusBar.GREY|deprecated",
        "Ti.UI.iOS.StatusBar.LIGHT_CONTENT"
      ]
    },
    "statusText": {
      "description": "Human-readable status message associated with the status code.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "stderr": {
      "description": "The <code>process.stderr</code> property returns a stream connected to <code>stderr</code>.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "stdout": {
      "description": "The <code>process.stdout</code> property returns a stream connected to <code>stdout</code>.",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "steps": {
      "description": "The value the stepper will increment and decrement by, default value for this property is 1. When setting\na new value, it must be greater than 1.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "stopped": {
      "description": "Indicates if the audio recorder is stopped.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "streamable": {
      "description": "Whether the content is prepared for streaming.  Set to <code>0</code> for not streamable and <code>1</code> for streamable.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "street": {
      "description": "Street name, without street address.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "street1": {
      "description": "Street name.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "strict": {
      "description": "an alias of <code>assert</code> that enforces strict version of comparison methods",
      "type": "assert.strict",
      "readOnly": true,
      "values": []
    },
    "string": {
      "description": "String resources. See\n<a href=\"https://developer.android.com/reference/android/R.string.html\">R.string</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "style": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.ActivityIndicatorStyle.BIG",
        "Ti.UI.ActivityIndicatorStyle.DARK",
        "Ti.UI.ActivityIndicatorStyle.BIG_DARK",
        "Ti.UI.ActivityIndicatorStyle.PLAIN",
        "Ti.UI.BUTTON_STYLE_FILLED",
        "Ti.UI.BUTTON_STYLE_OUTLINED",
        "Ti.UI.BUTTON_STYLE_TEXT",
        "Ti.UI.BUTTON_STYLE_OPTION_POSITIVE",
        "Ti.UI.BUTTON_STYLE_OPTION_NEGATIVE",
        "Ti.UI.BUTTON_STYLE_OPTION_NEUTRAL",
        "Ti.UI.iOS.ListViewStyle.GROUPED",
        "Ti.UI.iOS.ListViewStyle.PLAIN",
        "Ti.UI.iOS.ListViewStyle.INSET_GROUPED",
        "Ti.UI.iOS.SEARCH_BAR_STYLE_PROMINENT",
        "Ti.UI.iOS.SEARCH_BAR_STYLE_MINIMAL",
        "Ti.UI.SWITCH_STYLE_CHECKBOX",
        "Ti.UI.SWITCH_STYLE_TOGGLE_BUTTON",
        "Ti.UI.SWITCH_STYLE_SLIDER",
        "Ti.UI.SWITCH_STYLE_CHIP",
        "Ti.UI.Android.TABS_STYLE_DEFAULT",
        "Ti.UI.Android.TABS_STYLE_BOTTOM_NAVIGATION",
        "Ti.UI.iOS.TableViewStyle.GROUPED",
        "Ti.UI.iOS.TableViewStyle.PLAIN",
        "Ti.UI.iOS.TableViewStyle.INSET_GROUPED",
        "Ti.UI.iOS.FEEDBACK_GENERATOR_IMPACT_STYLE_LIGHT",
        "Ti.UI.iOS.FEEDBACK_GENERATOR_IMPACT_STYLE_MEDIUM",
        "Ti.UI.iOS.FEEDBACK_GENERATOR_IMPACT_STYLE_HEAVY",
        "Ti.UI.iOS.PREVIEW_ACTION_STYLE_DEFAULT",
        "Ti.UI.iOS.PREVIEW_ACTION_STYLE_SELECTED",
        "Ti.UI.iOS.PREVIEW_ACTION_STYLE_DESTRUCTIVE"
      ]
    },
    "styleable": {
      "description": "Styleable resources. See\n<a href=\"https://developer.android.com/reference/android/R.styleable.html\">R.styleable</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "subThoroughfare": {
      "description": "The sub-location (e.g., street number) for the item according to guidelines established by the provider.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "subject": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "submitEnabled": {
      "description": "Whether to display the submit button when necessary or never display.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "subtitle": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "subtitleColor": {
      "description": "Default text color of the subtitle, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "subtitleTextColor": {
      "description": "Color for toolbar's subtitle",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "success": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "suffix": {
      "description": "Suffix for the person. Single value.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "suiteName": {
      "description": "Sets the name of the suite to be used to access UserDefaults.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "summaryArgument": {
      "description": "The string the notification adds to the category's summary format string.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "summaryArgumentCount": {
      "description": "The number of items the notification adds to the category's summary format string.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "summaryText": {
      "description": "Set the first line of text after the detail section in the big form of the notification.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "supportToolbar": {
      "description": "Toolbar instance that serves as ActionBar",
      "type": "Titanium.UI.Toolbar",
      "readOnly": true,
      "values": []
    },
    "supported": {
      "description": "Determines if user activities are supported (<code>true</code>) or not (<code>false</code>) by the device. <strong>Deprecated since 5.1.0. Use <a href=\"Titanium.App.iOS.UserActivity.isSupported\">Titanium.App.iOS.UserActivity.isSupported</a> instead.</strong>",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "supportedUserActivityTypes": {
      "description": "Provides an Array of the NSUserActivityTypes keys defined within your Titanium project.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "supportsNavigation": {
      "description": "Used to determine if navigation is supported.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "supportsPhoneCall": {
      "description": "Used to indicate that using the phone number is appropriate.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "suppressReturn": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "suppressesIncrementalRendering": {
      "description": "A Boolean value indicating whether the web view suppresses content rendering until it is fully\nloaded into memory.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "sustainedPerformanceMode": {
      "description": "Maintain a sustainable level of performance.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "swipeToClose": {
      "description": "Boolean value indicating if the user should be able to close a window using a swipe gesture.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "swipeable": {
      "description": "Boolean value indicating if tab navigation can be done by swipes, in addition to tab clicks.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "symbolicLink": {
      "description": "<code>true</code> if the file identified by this object is a symbolic link.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "sys": {
      "description": "The number of milliseconds the CPU has spent in sys mode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "systemButton": {
      "description": "Specifies an iOS system button appearance, as defined in <a href=\"Titanium.UI.iOS.SystemButton\">Titanium.UI.iOS.SystemButton</a>.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.iOS.SystemButton.ACTION",
        "Ti.UI.iOS.SystemButton.ACTIVITY",
        "Ti.UI.iOS.SystemButton.ADD",
        "Ti.UI.iOS.SystemButton.BOOKMARKS",
        "Ti.UI.iOS.SystemButton.CAMERA",
        "Ti.UI.iOS.SystemButton.CANCEL",
        "Ti.UI.iOS.SystemButton.COMPOSE",
        "Ti.UI.iOS.SystemButton.CONTACT_ADD",
        "Ti.UI.iOS.SystemButton.DISCLOSURE",
        "Ti.UI.iOS.SystemButton.DONE",
        "Ti.UI.iOS.SystemButton.EDIT",
        "Ti.UI.iOS.SystemButton.FAST_FORWARD",
        "Ti.UI.iOS.SystemButton.FIXED_SPACE",
        "Ti.UI.iOS.SystemButton.FLEXIBLE_SPACE",
        "Ti.UI.iOS.SystemButton.INFO_DARK",
        "Ti.UI.iOS.SystemButton.INFO_LIGHT",
        "Ti.UI.iOS.SystemButton.ORGANIZE",
        "Ti.UI.iOS.SystemButton.PAUSE",
        "Ti.UI.iOS.SystemButton.PLAY",
        "Ti.UI.iOS.SystemButton.REFRESH",
        "Ti.UI.iOS.SystemButton.REPLY",
        "Ti.UI.iOS.SystemButton.REWIND",
        "Ti.UI.iOS.SystemButton.SAVE",
        "Ti.UI.iOS.SystemButton.SPINNER",
        "Ti.UI.iOS.SystemButton.STOP",
        "Ti.UI.iOS.SystemButton.TRASH"
      ]
    },
    "systemId": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "systemMusicPlayer": {
      "description": "An instance of <a href=\"Titanium.Media.MusicPlayer\">Titanium.Media.MusicPlayer</a> representing the system-wide music player.",
      "type": "Titanium.Media.MusicPlayer",
      "readOnly": false,
      "values": []
    },
    "tabBarHidden": {
      "description": "Boolean value indicating if the tab bar should be hidden.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "tabBarVisible": {
      "description": "Programmatically shows / hides the bottom tab bar of the tab group.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "tabMode": {
      "description": "Property defining which tabMode is used for the TabGroup.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.TAB_MODE_FIXED",
        "Ti.UI.Android.TAB_MODE_SCROLLABLE"
      ]
    },
    "tableSeparatorInsets": {
      "description": "",
      "type": "HorizontalInsets",
      "readOnly": true,
      "values": []
    },
    "tabs": {
      "description": "Tabs managed by the tab group.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "tabsBackgroundColor": {
      "description": "Default background color for inactive tabs, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "tabsBackgroundImage": {
      "description": "Default background image for tabs.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "tabsBackgroundSelectedColor": {
      "description": "Default background selected color for tabs, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "tabsTintColor": {
      "description": "The tintColor to apply to the tabs. <strong>Deprecated since 9.0.3. Deprecated in favor of <a href=\"Titanium.UI.TabGroup.tintColor\">Titanium.UI.TabGroup.tintColor</a> or alternatively <a href=\"Titanium.UI.Tab.tintColor\">Titanium.UI.Tab.tintColor</a>.</strong>",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "tabsTranslucent": {
      "description": "A Boolean value that indicates whether the tab bar is translucent.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "tagName": {
      "description": "The name of the element, as defined by its tag.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "tailIndent": {
      "description": "The trailing indentation of the receiver.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "target": {
      "description": "Retrieve the target of this processing instruction. XML defines this as being the first token following the markup that begins the processing instruction.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "targetImageHeight": {
      "description": "Maximum height of the saved image. Depending on your phone and your value this might not be\nexactly the value you specify. Check <code>Ti.Media.cameraOutputSizes</code> first.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "targetImageWidth": {
      "description": "Maximum width of the saved image. Depending on your phone and your value this might not be\nexactly the value you specify. Check <code>Ti.Media.cameraOutputSizes</code> first.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "tempDirectory": {
      "description": "Path for the application's temporary directory.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "template": {
      "description": "Template ID configured with the <a href=\"Titanium.UI.ListView.templates\">Titanium.UI.ListView.templates</a> property or\n<a href=\"Titanium.UI.LIST_ITEM_TEMPLATE_DEFAULT\">Titanium.UI.LIST_ITEM_TEMPLATE_DEFAULT</a>.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "templates": {
      "description": "Contain key-value pairs mapping a style name (key) to an <a href=\"ItemTemplate\">ItemTemplate</a> (value).",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "tempo": {
      "description": "The tempo of the music contained in the audio file in Beats Per Minute.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "text": {
      "description": "",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "textAlign": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.TEXT_ALIGNMENT_CENTER",
        "Ti.UI.TEXT_ALIGNMENT_JUSTIFY",
        "Ti.UI.TEXT_ALIGNMENT_LEFT",
        "Ti.UI.TEXT_ALIGNMENT_RIGHT"
      ]
    },
    "textColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "textContent": {
      "description": "Content (value) of all text nodes within this node.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "textStyle": {
      "description": "The text style for the font.",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.TEXT_STYLE_HEADLINE",
        "Ti.UI.TEXT_STYLE_SUBHEADLINE",
        "Ti.UI.TEXT_STYLE_BODY",
        "Ti.UI.TEXT_STYLE_FOOTNOTE",
        "Ti.UI.TEXT_STYLE_CAPTION1",
        "Ti.UI.TEXT_STYLE_CAPTION2",
        "Ti.UI.TEXT_STYLE_CALLOUT",
        "Ti.UI.TEXT_STYLE_TITLE1",
        "Ti.UI.TEXT_STYLE_TITLE2",
        "Ti.UI.TEXT_STYLE_TITLE3",
        "Ti.UI.TEXT_STYLE_LARGE_TITLE"
      ]
    },
    "textTransform": {
      "description": "Property that specifies how to capitialize the text. Can be <code>lowercase</code>, <code>uppercase</code> or <code>none</code> (default)",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "textid": {
      "description": "Key identifying a string from the locale file to use for the label text.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "theme": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "thoroughfare": {
      "description": "The location (e.g., street name) for the item according to guidelines established by the provider.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "throwDeprecation": {
      "description": "The initial value of <code>process.throwDeprecation</code> indicates whether the <code>--throw-deprecation</code> flag is set on the current Node.js process. process.throwDeprecation is mutable, so whether or not deprecation warnings result in errors may be altered at runtime. See the documentation for the <code>'warning'</code> event and the <code>emitWarning()</code> method for more information.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "thumbColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "thumbImage": {
      "description": "Image for the slider thumb.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "thumbTintColor": {
      "description": "The color used to tint the appearance of the thumb.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "thumbnailData": {
      "description": "Image data for thumbnail for this item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "thumbnailURL": {
      "description": "File URL pointing to a thumbnail image for this item.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "tickerText": {
      "description": "Text to scroll across the screen when this item is added to the status bar.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "time": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "timeSignature": {
      "description": "The time signature of the musical composition contained in the audio/MIDI file.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "timeStyle": {
      "description": "Specifies the locale's built-in hour, minute, and second formatting styles.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "timeZone": {
      "description": "The time zone the <code>Date</code> object's value should be converted to when formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "timeZoneName": {
      "description": "Indicates how the time zone should be shown.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "timeout": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "timeoutForResource": {
      "description": "The maximum amount of time (in milliseconds) that a resource request should be allowed to take.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "times": {
      "description": "",
      "type": "CPUInfoTimes",
      "readOnly": true,
      "values": []
    },
    "timestamp": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "timezone": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "tint": {
      "description": "Color to combine with the image, as a color name or hex triplet.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "tintColor": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "title": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "titleAttributes": {
      "description": "",
      "type": "titleAttributesParams",
      "readOnly": true,
      "values": []
    },
    "titleColor": {
      "description": "Defines the color of the title of tab when it's inactive.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "titleCondensed": {
      "description": "Shortened version of the item's title.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "titleControl": {
      "description": "View to show in the title area of the nav bar.",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "titleImage": {
      "description": "Image to show in the title area of the nav bar, specified as a local file path or URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "titleOff": {
      "description": "Text to display on the switch in its &quot;off&quot; state, when the toggle button style is in use.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "titleOn": {
      "description": "Text to display on the switch in its &quot;on&quot; state, when the toggle button style is in use.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "titlePrompt": {
      "description": "Title prompt for the window.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "titleTextColor": {
      "description": "Color string with any Titanium supported format",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "titleid": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "titlepromptid": {
      "description": "Key identifying a string from the locale file to use for the window title prompt.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "tlsVersion": {
      "description": "Sets the TLS version to use for handshakes.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Network.TLS_VERSION_1_0",
        "Ti.Network.TLS_VERSION_1_1",
        "Ti.Network.TLS_VERSION_1_2",
        "Ti.Network.TLS_VERSION_1_3"
      ]
    },
    "toRecipients": {
      "description": "Recipients of the email included via the main <code>TO</code> field.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "toStream": {
      "description": "Stream being written to.",
      "type": "Titanium.IOStream",
      "readOnly": true,
      "values": []
    },
    "tokens": {
      "description": "The token of a search text field",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "toolbar": {
      "description": "",
      "type": "Titanium.UI.Toolbar",
      "readOnly": true,
      "values": []
    },
    "toolbarEnabled": {
      "description": "Determine whether to enable the toolbar.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "tooltip": {
      "description": "The default text to display in the control's tooltip.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "top": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "torch": {
      "description": "Enable or disable the camera torch.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "totalBitRate": {
      "description": "The total bit rate (audio and video combined) of the media.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "totalBytesProcessed": {
      "description": "Total number of bytes read from the stream so far,\nincluding the data passed to this current invocation of the handler.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "totalMemory": {
      "description": "System's total memory, measured in bytes.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "touchEnabled": {
      "description": "Determines whether view should receive touch events.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "touchFeedback": {
      "description": "A material design visual construct that provides an instantaneous visual confirmation of touch point.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "touchFeedbackColor": {
      "description": "Optional touch feedback ripple color. This has no effect unless <code>touchFeedback</code> is true.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "traceDeprecation": {
      "description": "The <code>process.traceDeprecation</code> property indicates whether the <code>--trace-deprecation</code> flag is set on the current Node.js process. See the documentation for the <code>'warning'</code> event and the <code>emitWarning()</code> method for more information about this flag's behavior.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "trackSignificantLocationChange": {
      "description": "Indicates if the location changes should be updated only when a significant change\nin location occurs.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "trackTintColor": {
      "description": "The color shown for the portion of the progress bar that is not filled.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "trackUserInteraction": {
      "description": "Indicates whether or not the user interaction shoud be tracked.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "transform": {
      "description": "",
      "type": "Titanium.UI.Matrix2D",
      "readOnly": true,
      "values": []
    },
    "transition": {
      "description": "",
      "type": "Object",
      "readOnly": false,
      "values": [
        "Ti.UI.iOS.AnimationStyle.CURL_DOWN",
        "Ti.UI.iOS.AnimationStyle.CURL_UP",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_LEFT",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_RIGHT",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_TOP",
        "Ti.UI.iOS.AnimationStyle.FLIP_FROM_BOTTOM",
        "Ti.UI.iOS.AnimationStyle.CROSS_DISSOLVE",
        "Ti.UI.iOS.AnimationStyle.NONE"
      ]
    },
    "transitionAnimation": {
      "description": "Use a transition animation when opening or closing windows in a\n<a href=\"Titanium.UI.NavigationWindow\">Titanium.UI.NavigationWindow</a> or <a href=\"Titanium.UI.Tab\">Titanium.UI.Tab</a>.",
      "type": "Titanium.Proxy",
      "readOnly": true,
      "values": []
    },
    "transitionFrom": {
      "description": "Animation to hide the current window.",
      "type": "Titanium.UI.Animation",
      "readOnly": true,
      "values": []
    },
    "transitionName": {
      "description": "A name to identify this view in activity transition.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "transitionTo": {
      "description": "Animation to show the new window.",
      "type": "Titanium.UI.Animation",
      "readOnly": true,
      "values": []
    },
    "translationX": {
      "description": "Horizontal location of the view relative to its left position in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "translationY": {
      "description": "Vertical location of the view relative to its top position in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "translationZ": {
      "description": "Depth of the view relative to its elevation in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "translucent": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "treatReferenceAsBoundary": {
      "description": "Use the animator's reference view as the boundary.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "trueHeading": {
      "description": "Declination in degrees from true North.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "tx": {
      "description": "The entry at position [3,1] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ty": {
      "description": "The entry at position [3,2] in the matrix.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "type": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.Calendar.ATTENDEE_TYPE_UNKNOWN",
        "Ti.Calendar.ATTENDEE_TYPE_PERSON",
        "Ti.Calendar.ATTENDEE_TYPE_ROOM",
        "Ti.Calendar.ATTENDEE_TYPE_RESOURCE",
        "Ti.Calendar.ATTENDEE_TYPE_NONE",
        "Ti.Calendar.ATTENDEE_TYPE_REQUIRED",
        "Ti.Calendar.ATTENDEE_TYPE_GROUP",
        "Ti.Codec.TYPE_BYTE",
        "Ti.Codec.TYPE_SHORT",
        "Ti.Codec.TYPE_INT",
        "Ti.Codec.TYPE_FLOAT",
        "Ti.Codec.TYPE_LONG",
        "Ti.Codec.TYPE_DOUBLE",
        "Ti.UI.Android.PROGRESS_INDICATOR_INDETERMINANT",
        "Ti.UI.Android.PROGRESS_INDICATOR_DETERMINANT",
        "Ti.UI.ATTRIBUTE_FONT",
        "Ti.UI.ATTRIBUTE_FOREGROUND_COLOR",
        "Ti.UI.ATTRIBUTE_BACKGROUND_COLOR",
        "Ti.UI.ATTRIBUTE_STRIKETHROUGH_STYLE",
        "Ti.UI.ATTRIBUTE_UNDERLINES_STYLE",
        "Ti.UI.ATTRIBUTE_LINK",
        "Ti.UI.ATTRIBUTE_UNDERLINE_COLOR",
        "Ti.UI.ATTRIBUTE_LIGATURE",
        "Ti.UI.ATTRIBUTE_KERN",
        "Ti.UI.ATTRIBUTE_STROKE_COLOR",
        "Ti.UI.ATTRIBUTE_STROKE_WIDTH",
        "Ti.UI.ATTRIBUTE_SHADOW",
        "Ti.UI.ATTRIBUTE_WRITING_DIRECTION",
        "Ti.UI.ATTRIBUTE_TEXT_EFFECT",
        "Ti.UI.ATTRIBUTE_BASELINE_OFFSET",
        "Ti.UI.ATTRIBUTE_STRIKETHROUGH_COLOR",
        "Ti.UI.ATTRIBUTE_OBLIQUENESS",
        "Ti.UI.ATTRIBUTE_EXPANSION",
        "Ti.UI.ATTRIBUTE_LINE_BREAK|deprecated",
        "Ti.UI.PICKER_TYPE_COUNT_DOWN_TIMER",
        "Ti.UI.PICKER_TYPE_DATE",
        "Ti.UI.PICKER_TYPE_DATE_AND_TIME",
        "Ti.UI.PICKER_TYPE_PLAIN",
        "Ti.UI.PICKER_TYPE_TIME",
        "Ti.UI.iOS.FEEDBACK_GENERATOR_TYPE_SELECTION",
        "Ti.UI.iOS.FEEDBACK_GENERATOR_TYPE_IMPACT",
        "Ti.UI.iOS.FEEDBACK_GENERATOR_TYPE_NOTIFICATION"
      ]
    },
    "types": {
      "description": "",
      "type": "util.types",
      "readOnly": true,
      "values": [
        "Ti.App.iOS.USER_NOTIFICATION_TYPE_NONE",
        "Ti.App.iOS.USER_NOTIFICATION_TYPE_BADGE",
        "Ti.App.iOS.USER_NOTIFICATION_TYPE_SOUND",
        "Ti.App.iOS.USER_NOTIFICATION_TYPE_ALERT",
        "Ti.App.iOS.USER_NOTIFICATION_TYPE_CRITICAL_ALERT",
        "Ti.App.iOS.USER_NOTIFICATION_TYPE_PROVISIONAL",
        "Ti.App.iOS.USER_NOTIFICATION_TYPE_PROVIDES_APP_NOTIFICATION_SETTINGS",
        "Ti.Network.NOTIFICATION_TYPE_ALERT",
        "Ti.Network.NOTIFICATION_TYPE_BADGE",
        "Ti.Network.NOTIFICATION_TYPE_SOUND",
        "Ti.Network.NOTIFICATION_TYPE_NEWSSTAND"
      ]
    },
    "uiFlags": {
      "description": "Additional UI flags to set on the Activity Window.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "uid": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "unique": {
      "description": "Create a new clipboard identified by a unique system-generated name.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "uniqueIdentifier": {
      "description": "Unique identifier to your application group.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "unselectedItemTintColor": {
      "description": "Unselected items in this tab group will be tinted with this color. Setting this value to null\nindicates that the tab group should use its default value instead.\n<strong>Deprecated since 9.0.3. Deprecated in favor of <a href=\"Titanium.UI.TabGroup.tintColor\">Titanium.UI.TabGroup.tintColor</a> or alternatively <a href=\"Titanium.UI.Tab.tintColor\">Titanium.UI.Tab.tintColor</a>.</strong>",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "updateCurrentIntent": {
      "description": "If this property is true, flag <a href=\"Titanium.Android.FLAG_UPDATE_CURRENT\">Titanium.Android.FLAG_UPDATE_CURRENT</a> will be\nappended to <code>flags</code> automatically. Default value is true.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "uprightHeight": {
      "description": "If the blob references an image, this provides the height in pixels after factoring in EXIF orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "uprightWidth": {
      "description": "If the blob references an image, this provides the width in pixels after factoring in EXIF orientation.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "uptime": {
      "description": "System uptime since last boot in seconds.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "uri": {
      "description": "URI to the file if it was scanned and added to the media library, or <code>null</code>\nif the file was not added.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "url": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "usage": {
      "description": "Indicates if the comparison is for sorting or searching when matching strings.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "useCameraX": {
      "description": "To use the new CameraX classes for &quot;camera with overlay&quot; set <code>useCameraX</code> to <code>true</code>",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "useCompatPadding": {
      "description": "Add padding on API level 21 and above to have the same measurements with previous versions.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "useGrouping": {
      "description": "Indicates if grouping separators should be displayed.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "useSpinner": {
      "description": "Determines if a multicolumn spinner or single column drop-down picker should be used.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "user": {
      "description": "The number of milliseconds the CPU has spent in user mode.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "userAgent": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "userGrouping": {
      "description": "Corresponds to the &quot;Grouping&quot; field in the Info tab in the &quot;Get Info&quot;\ndialog in iTunes.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "userInfo": {
      "description": "",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "userInterfaceStyle": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.App.iOS.USER_INTERFACE_STYLE_UNSPECIFIED|deprecated",
        "Ti.App.iOS.USER_INTERFACE_STYLE_LIGHT|deprecated",
        "Ti.App.iOS.USER_INTERFACE_STYLE_DARK|deprecated",
        "Ti.UI.USER_INTERFACE_STYLE_UNSPECIFIED",
        "Ti.UI.USER_INTERFACE_STYLE_LIGHT",
        "Ti.UI.USER_INTERFACE_STYLE_DARK"
      ]
    },
    "username": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "validRow": {
      "description": "Indicates whether the current row is valid.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "validatesSecureCertificate": {
      "description": "Determines how SSL certification validation is performed on connection.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "value": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": [
        "Ti.UI.ATTRIBUTE_UNDERLINE_STYLE_NONE",
        "Ti.UI.ATTRIBUTE_UNDERLINE_STYLE_SINGLE",
        "Ti.UI.ATTRIBUTE_UNDERLINE_STYLE_THICK",
        "Ti.UI.ATTRIBUTE_UNDERLINE_STYLE_DOUBLE",
        "Ti.UI.ATTRIBUTE_WRITING_DIRECTION_EMBEDDING",
        "Ti.UI.ATTRIBUTE_WRITING_DIRECTION_OVERRIDE",
        "Ti.UI.ATTRIBUTE_WRITING_DIRECTION_NATURAL",
        "Ti.UI.ATTRIBUTE_WRITING_DIRECTION_LEFT_TO_RIGHT",
        "Ti.UI.ATTRIBUTE_WRITING_DIRECTION_RIGHT_TO_LEFT",
        "Ti.UI.ATTRIBUTE_LETTERPRESS_STYLE"
      ]
    },
    "version": {
      "description": "",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "versionMajor": {
      "description": "The operating system's major version number.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "versionMinor": {
      "description": "The operating system's minor version number.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "versionPatch": {
      "description": "The operating system's patch version number.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "versions": {
      "description": "An object containing version information for included dependencies",
      "type": "Object",
      "readOnly": true,
      "values": []
    },
    "verticalAlign": {
      "description": "",
      "type": "Number",
      "readOnly": false,
      "values": [
        "Ti.Media.VERTICAL_ALIGN_CENTER",
        "Ti.Media.VERTICAL_ALIGN_TOP",
        "Ti.Media.VERTICAL_ALIGN_BOTTOM",
        "Ti.UI.TEXT_VERTICAL_ALIGNMENT_BOTTOM",
        "Ti.UI.TEXT_VERTICAL_ALIGNMENT_CENTER",
        "Ti.UI.TEXT_VERTICAL_ALIGNMENT_TOP"
      ]
    },
    "verticalBounce": {
      "description": "Determines whether vertical scroll bounce of the scrollable region is enabled.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "verticalMargin": {
      "description": "Vertical placement of the notifcation, <em>as a fraction of the screen height</em>.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "verticalMotionEffect": {
      "description": "Adds a vertical parallax effect to the view",
      "type": "MinMaxOptions",
      "readOnly": true,
      "values": []
    },
    "vibratePattern": {
      "description": "The vibration pattern for notifications posted to this channel.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "videoBitRate": {
      "description": "The video bit rate.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "videoMaximumDuration": {
      "description": "Maximum duration (in milliseconds) to allow video capture before completing.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "videoQuality": {
      "description": "Constant to indicate the video quality during capture.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.QUALITY_SD",
        "Ti.Media.QUALITY_HD",
        "Ti.Media.QUALITY_FHD",
        "Ti.Media.QUALITY_UHD",
        "Ti.Media.QUALITY_HIGH",
        "Ti.Media.QUALITY_LOW",
        "Ti.Media.QUALITY_MEDIUM"
      ]
    },
    "videos": {
      "description": "The list of selected videos.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "view": {
      "description": "",
      "type": "Titanium.UI.View",
      "readOnly": true,
      "values": []
    },
    "viewShadowColor": {
      "description": "Determines the color of the shadow.",
      "type": "String",
      "readOnly": true,
      "values": [
        "'transparent'",
        "'aqua'",
        "'black'",
        "'blue'",
        "'brown'",
        "'cyan'",
        "'darkgray'",
        "'fuchsia'",
        "'gray'",
        "'green'",
        "'lightgray'",
        "'lime'",
        "'magenta'",
        "'maroon'",
        "'navy'",
        "'olive'",
        "'orange'",
        "'pink'",
        "'purple'",
        "'red'",
        "'silver'",
        "'teal'",
        "'white'",
        "'yellow'"
      ]
    },
    "viewShadowOffset": {
      "description": "Determines the offset for the shadow of the view.",
      "type": "Point",
      "readOnly": true,
      "values": []
    },
    "viewShadowRadius": {
      "description": "Determines the blur radius used to create the shadow.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "views": {
      "description": "Sets the pages within this Scrollable View.",
      "type": "Array",
      "readOnly": true,
      "values": []
    },
    "visibility": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Android.VISIBILITY_PRIVATE",
        "Ti.Android.VISIBILITY_PUBLIC",
        "Ti.Android.VISIBILITY_SECRET",
        "Ti.Calendar.VISIBILITY_CONFIDENTIAL",
        "Ti.Calendar.VISIBILITY_DEFAULT",
        "Ti.Calendar.VISIBILITY_PRIVATE",
        "Ti.Calendar.VISIBILITY_PUBLIC"
      ]
    },
    "visible": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "visibleItems": {
      "description": "Number of visible rows to display. This is only applicable to a plain picker and when the\n<code>useSpinner</code> is <code>true</code>.\n<strong>Deprecated since 10.0.1. This property is ignored as of Titanium 10.0.1.</strong>",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "visibleText": {
      "description": "Returns the actual text seen on the screen. If the text is ellipsized it will be different to the normal <code>text</code>.",
      "type": "String",
      "readOnly": false,
      "values": []
    },
    "volume": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "waiting": {
      "description": "Boolean indicating if the playback is waiting for audio data from the network.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "waitsForConnectivity": {
      "description": "A Boolean value that indicates whether the session should wait for connectivity to become available, or fail immediately.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "wakeLock": {
      "description": "Will wake up the device for the given time (in milliseconds) when the notification is shown.\nThe application needs to also set the <code>android.permission.WAKE_LOCK</code> permission\nin the Android manifest section of the <code>tiapp.xml</code> file.\n<pre><code class=\"language-xml\">&lt;ti:app&gt;\n    &lt;android&gt;\n        &lt;manifest&gt;\n            &lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot; /&gt;\n        &lt;/manifest&gt;\n    &lt;/android&gt;\n&lt;/ti:app&gt;\n</code></pre>",
      "type": "wakeLockOptions",
      "readOnly": true,
      "values": []
    },
    "webpageURL": {
      "description": "When no suitable application is installed on a resuming device and the <code>webpageURL</code> property is set,\nthe user activity will instead be continued in a web browser by loading the specified URL.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "week": {
      "description": "The week number of the day of the week.\nValues range from -53 to 53. A negative value indicates a value from the end of\nthe range. 0 indicates the week number is irrelevant.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "weekday": {
      "description": "Indicates how a weekday name should be shown.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "weeksOfTheYear": {
      "description": "The weeks of the year that the event occurs, as an array of number objects.\nValues can be from 1 to 53 and from -1 to -53. This parameter is only valid for\nrecurrence rules of type <a href=\"Titanium.Calendar.RECURRENCEFREQUENCY_YEARLY\">RECURRENCEFREQUENCY_YEARLY</a>.",
      "type": "Array",
      "readOnly": false,
      "values": []
    },
    "weight": {
      "description": "The symbol weight to use for the SF Symbol.\nCan be one of <code>ultralight</code>, <code>light</code>, <code>thin</code>, <code>normal</code>, <code>semibold</code>, <code>bold</code>, <code>heavy</code> or <code>black</code>.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "when": {
      "description": "The timestamp for the notification (defaults to the current time).",
      "type": "Date",
      "readOnly": true,
      "values": []
    },
    "whichCamera": {
      "description": "Opens the camera with the specified camera direction.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.Media.CAMERA_FRONT",
        "Ti.Media.CAMERA_REAR"
      ]
    },
    "width": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.FILL",
        "Ti.UI.SIZE"
      ]
    },
    "willHandleTouches": {
      "description": "Explicitly specifies if this web view handles touches.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "willScrollOnStatusTap": {
      "description": "Controls the scroll-to-top gesture.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "win32": {
      "description": "The <code>path.win32</code> property provides access to Windows-specific implementations of the <code>path</code> methods.",
      "type": "path",
      "readOnly": true,
      "values": []
    },
    "window": {
      "description": "",
      "type": "Titanium.UI.Window",
      "readOnly": true,
      "values": []
    },
    "windowFlags": {
      "description": "Additional flags to set on the Activity Window.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "windowPixelFormat": {
      "description": "Set the pixel format for the Activity's Window.",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.PIXEL_FORMAT_A_8",
        "Ti.UI.Android.PIXEL_FORMAT_LA_88",
        "Ti.UI.Android.PIXEL_FORMAT_L_8",
        "Ti.UI.Android.PIXEL_FORMAT_OPAQUE",
        "Ti.UI.Android.PIXEL_FORMAT_RGBA_4444",
        "Ti.UI.Android.PIXEL_FORMAT_RGBA_5551",
        "Ti.UI.Android.PIXEL_FORMAT_RGBA_8888",
        "Ti.UI.Android.PIXEL_FORMAT_RGBX_8888",
        "Ti.UI.Android.PIXEL_FORMAT_RGB_332",
        "Ti.UI.Android.PIXEL_FORMAT_RGB_565",
        "Ti.UI.Android.PIXEL_FORMAT_RGB_888",
        "Ti.UI.Android.PIXEL_FORMAT_TRANSLUCENT",
        "Ti.UI.Android.PIXEL_FORMAT_TRANSPARENT",
        "Ti.UI.Android.PIXEL_FORMAT_UNKNOWN"
      ]
    },
    "windowSoftInputMode": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": [
        "Ti.UI.Android.SOFT_INPUT_STATE_ALWAYS_HIDDEN",
        "Ti.UI.Android.SOFT_INPUT_STATE_ALWAYS_VISIBLE",
        "Ti.UI.Android.SOFT_INPUT_STATE_HIDDEN",
        "Ti.UI.Android.SOFT_INPUT_STATE_UNSPECIFIED",
        "Ti.UI.Android.SOFT_INPUT_STATE_VISIBLE",
        "Ti.UI.Android.SOFT_INPUT_ADJUST_PAN",
        "Ti.UI.Android.SOFT_INPUT_ADJUST_RESIZE",
        "Ti.UI.Android.SOFT_INPUT_ADJUST_NOTHING",
        "Ti.UI.Android.SOFT_INPUT_ADJUST_UNSPECIFIED"
      ]
    },
    "withFileTypes": {
      "description": "If <code>true</code>, the results will be returned as <a href=\"fs.Dirent\">fs.Dirent</a>s",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "wobble": {
      "description": "Determines whether the wobble visual editing cue is enabled in edit mode.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "wordWrap": {
      "description": "Enable or disable word wrapping in the label. <strong>Deprecated since 8.0.0. If you want to disable wrapping, then set <a href=\"Titanium.UI.Label.maxLines\">Titanium.UI.Label.maxLines</a> to 1 instead.</strong>",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "wraps": {
      "description": "",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "writable": {
      "description": "<code>true</code> if the file identified by this object is writable.",
      "type": "Boolean",
      "readOnly": false,
      "values": [
        "true",
        "false"
      ]
    },
    "x": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "xOffset": {
      "description": "X offset from the default position, in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "xdpi": {
      "description": "Physical pixels per inch of the display in the X dimension.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "xml": {
      "description": "XML resources. See\n<a href=\"https://developer.android.com/reference/android/R.xml.html\">R.xml</a>\nin the Android Developer Reference.",
      "type": "Object",
      "readOnly": false,
      "values": []
    },
    "y": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "yOffset": {
      "description": "Y offset from the default position, in pixels.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "ydpi": {
      "description": "Physical pixels per inch of the display in the Y dimension.",
      "type": "Number",
      "readOnly": false,
      "values": []
    },
    "year": {
      "description": "Indicates how the year should be formatted.",
      "type": "String",
      "readOnly": true,
      "values": []
    },
    "z": {
      "description": "Raw geomagnetic data for the Z axis.",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "zIndex": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "zoomEnabled": {
      "description": "Specifies if pinch to zoom is enabled or not.",
      "type": "Boolean",
      "readOnly": true,
      "values": [
        "true",
        "false"
      ]
    },
    "zoomLevel": {
      "description": "",
      "type": "Number",
      "readOnly": true,
      "values": []
    },
    "zoomScale": {
      "description": "Scaling factor of the scroll view's content.",
      "type": "Number",
      "readOnly": true,
      "values": []
    }
  },
  "types": {
    "Ti.Proxy": {
      "description": "The base for all Titanium objects.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.Module": {
      "description": "Base type for all Titanium modules.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.UI.View": {
      "description": "An empty drawing surface or container",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap"
      ]
    },
    "Console": {
      "description": "Console logging facilities.",
      "functions": [
        "log",
        "info",
        "warn",
        "error",
        "debug",
        "time",
        "timeEnd",
        "timeLog",
        "trace",
        "count",
        "countReset",
        "assert",
        "group",
        "groupCollapsed",
        "groupEnd"
      ],
      "properties": [],
      "events": []
    },
    "Global": {
      "description": "The APIs that reside in the global scope, which may be called without a namespace prefix.",
      "functions": [
        "alert",
        "clearInterval",
        "clearTimeout",
        "decodeURIComponent",
        "encodeURIComponent",
        "L",
        "require",
        "setInterval",
        "setTimeout"
      ],
      "properties": [
        "OS_ANDROID",
        "OS_IOS",
        "OS_VERSION_MAJOR",
        "OS_VERSION_MINOR",
        "OS_VERSION_PATCH",
        "ENV_DEV",
        "ENV_DEVELOPMENT",
        "ENV_PROD",
        "ENV_PRODUCTION",
        "ENV_TEST",
        "DIST_ADHOC",
        "DIST_STORE",
        "console",
        "global",
        "Buffer",
        "process"
      ],
      "events": []
    },
    "Intl.Collator": {
      "description": "Immutable object used to perform language sensitive string comparisons.",
      "functions": [
        "compare",
        "resolvedOptions",
        "supportedLocalesOf"
      ],
      "properties": [
        "constructor"
      ],
      "events": []
    },
    "CollatorOptions": {
      "description": "Options to be passed into the <a href=\"Global.Intl.Collator.constructor\">Global.Intl.Collator.constructor</a> method.",
      "functions": [],
      "properties": [
        "localeMatcher",
        "usage",
        "sensitivity",
        "ignorePunctuation",
        "numeric",
        "caseFirst"
      ],
      "events": []
    },
    "Intl.DateTimeFormat": {
      "description": "Immutable object used to generate localized date and time formatted strings.",
      "functions": [
        "format",
        "formatToParts",
        "resolvedOptions",
        "supportedLocalesOf"
      ],
      "properties": [
        "constructor"
      ],
      "events": []
    },
    "DateTimeFormatOptions": {
      "description": "Options to be passed into the <a href=\"Global.Intl.DateTimeFormat.constructor\">Global.Intl.DateTimeFormat.constructor</a> method.",
      "functions": [],
      "properties": [
        "dateStyle",
        "timeStyle",
        "fractionalSecondDigits",
        "dayPeriod",
        "timeZone",
        "hour12",
        "hourCycle",
        "localeMatcher",
        "formatMatcher",
        "weekday",
        "era",
        "year",
        "month",
        "day",
        "hour",
        "minute",
        "second",
        "timeZoneName"
      ],
      "events": []
    },
    "DateTimeFormattedPart": {
      "description": "Generic type for elements of returned <code>Array</code> from &lt;Intl.DateTimeFormat.formatToParts&gt;",
      "functions": [],
      "properties": [
        "type",
        "value"
      ],
      "events": []
    },
    "Intl": {
      "description": "Namespace providing JavaScript's standard internationalization APIs.",
      "functions": [
        "getCanonicalLocales"
      ],
      "properties": [],
      "events": []
    },
    "Intl.NumberFormat": {
      "description": "Immutable object used to convert numbers to localized numeric strings.",
      "functions": [
        "format",
        "formatToParts",
        "resolvedOptions",
        "supportedLocalesOf"
      ],
      "properties": [
        "constructor"
      ],
      "events": []
    },
    "NumberFormatOptions": {
      "description": "Options to be passed into the <a href=\"Global.Intl.NumberFormat.constructor\">Global.Intl.NumberFormat.constructor</a> method.",
      "functions": [],
      "properties": [
        "style",
        "localeMatcher",
        "currency",
        "currencyDisplay",
        "useGrouping",
        "minimumIntegerDigits",
        "minimumFractionDigits",
        "maximumFractionDigits",
        "maximumSignificantDigits",
        "notation"
      ],
      "events": []
    },
    "NumberFormattedPart": {
      "description": "Generic type for elements of returned <code>Array</code> from &lt;Intl.Number.formatToParts&gt;",
      "functions": [],
      "properties": [
        "type",
        "value"
      ],
      "events": []
    },
    "String": {
      "description": "The JavaScript built-in String type.",
      "functions": [
        "format",
        "formatCurrency",
        "formatDate",
        "formatDecimal",
        "formatTime"
      ],
      "properties": [],
      "events": []
    },
    "Modules": {
      "description": "Optional Titanium modules.",
      "functions": [],
      "properties": [],
      "events": []
    },
    "assert": {
      "description": "A Node.js-compatible implementation of the core <code>assert</code> module",
      "functions": [
        "deepEqual",
        "deepStrictEqual",
        "doesNotReject",
        "doesNotThrow",
        "equal",
        "fail",
        "ifError",
        "notDeepEqual",
        "notDeepStrictEqual",
        "notEqual",
        "notStrictEqual",
        "ok",
        "rejects",
        "strictEqual",
        "throws"
      ],
      "properties": [
        "strict",
        "AssertionError"
      ],
      "events": []
    },
    "assert.strict": {
      "description": "An extension of <a href=\"assert\">assert</a> which overrides some of the methods to use their strict counterparts.",
      "functions": [
        "deepEqual",
        "deepStrictEqual",
        "doesNotReject",
        "doesNotThrow",
        "equal",
        "fail",
        "ifError",
        "notDeepEqual",
        "notDeepStrictEqual",
        "notEqual",
        "notStrictEqual",
        "ok",
        "rejects",
        "strictEqual",
        "throws"
      ],
      "properties": [
        "strict",
        "AssertionError"
      ],
      "events": []
    },
    "assert.AssertionError": {
      "description": "Indicates the failure of an assertion. All errors thrown by the <a href=\"assert\">assert</a> module will be instances of the <code>AssertionError</code> class.",
      "functions": [
        "constructor"
      ],
      "properties": [
        "actual",
        "expected",
        "generatedMessage",
        "code",
        "operator"
      ],
      "events": []
    },
    "assert.AssertionError.options": {
      "description": "options used in the <a href=\"assert.AssertionError\">assert.AssertionError</a> constructor argument",
      "functions": [],
      "properties": [
        "message",
        "actual",
        "expected",
        "operator",
        "stackStartFn"
      ],
      "events": []
    },
    "buffer": {
      "description": "A Node.js-compatible implementation of the core <code>buffer</code> module",
      "functions": [
        "alloc",
        "allocUnsafe",
        "allocUnsafeSlow",
        "byteLength",
        "compare",
        "concat",
        "from",
        "isBuffer",
        "isEncoding"
      ],
      "properties": [
        "poolSize",
        "INSPECT_MAX_BYTES",
        "kMaxLength"
      ],
      "events": []
    },
    "buffer.Buffer": {
      "description": "The <code>Buffer</code> class is a global type for dealing with binary data directly. It can be constructed in a variety of ways.",
      "functions": [
        "compare",
        "copy",
        "entries",
        "equals",
        "fill",
        "includes",
        "indexOf",
        "keys",
        "lastIndexOf",
        "readDoubleBE",
        "readDoubleLE",
        "readFloatBE",
        "readFloatLE",
        "readInt8",
        "readInt16BE",
        "readInt16LE",
        "readInt32BE",
        "readInt32LE",
        "readIntBE",
        "readIntLE",
        "readUInt8",
        "readUInt16BE",
        "readUInt16LE",
        "readUInt32BE",
        "readUInt32LE",
        "readUIntBE",
        "readUIntLE",
        "subarray",
        "slice",
        "swap16",
        "swap32",
        "swap64",
        "toJSON",
        "toString",
        "values",
        "write",
        "writeDoubleBE",
        "writeDoubleLE",
        "writeFloatBE",
        "writeFloatLE",
        "writeInt8",
        "writeInt16BE",
        "writeInt16LE",
        "writeInt32BE",
        "writeInt32LE",
        "writeIntBE",
        "writeIntLE",
        "writeUInt8",
        "writeUInt16BE",
        "writeUInt16LE",
        "writeUInt32BE",
        "writeUInt32LE",
        "writeUIntBE",
        "writeUIntLE"
      ],
      "properties": [
        "buffer",
        "byteOffset",
        "length"
      ],
      "events": []
    },
    "events": {
      "description": "A Node.js-compatible implementation of the core <code>events</code> module",
      "functions": [
        "listenerCount"
      ],
      "properties": [
        "defaultMaxListeners",
        "EventEmitter"
      ],
      "events": []
    },
    "EventEmitter": {
      "description": "The EventEmitter class is defined and exposed by the events module:\n<pre><code class=\"language-javascript\">const EventEmitter = require('events');\n</code></pre>\nAll EventEmitters emit the event 'newListener' when new listeners are added and 'removeListener' when existing listeners are removed.",
      "functions": [
        "addListener",
        "emit",
        "eventNames",
        "getMaxListeners",
        "listenerCount",
        "listeners",
        "off",
        "on",
        "once",
        "prependListener",
        "prependOnceListener",
        "rawListeners",
        "removeAllListeners",
        "removeListener",
        "setMaxListeners"
      ],
      "properties": [],
      "events": [
        "newListener",
        "removeListener"
      ]
    },
    "fs": {
      "description": "A Node.js-compatible implementation of the core <code>fs</code> module",
      "functions": [
        "access",
        "accessSync",
        "appendFile",
        "appendFileSync",
        "chmod",
        "chmodSync",
        "chown",
        "chownSync",
        "close",
        "closeSync",
        "copyFile",
        "copyFileSync",
        "exists",
        "existsSync(path)",
        "fchmod",
        "fchmodSync",
        "fchown",
        "fchownSync",
        "fdatasync",
        "fdatasyncSync",
        "fstat",
        "fstatSync",
        "lstat",
        "lstatSync",
        "mkdir",
        "mkdirSync",
        "mkdtemp",
        "mkdtempSync",
        "open",
        "openSync",
        "read",
        "readdir",
        "readdirSync",
        "readFile",
        "readFileSync",
        "readSync",
        "realpath",
        "realpath.native",
        "realpathSync",
        "realpathSync.native",
        "rename",
        "renameSync",
        "rmdir",
        "rmSync",
        "stat",
        "statSync",
        "symlink",
        "symlinkSync",
        "truncate",
        "truncateSync",
        "unlink",
        "unlinkSync",
        "unwatchFile",
        "utimes",
        "utimesSync",
        "watch",
        "watchFile",
        "write",
        "writeFile",
        "writeFileSync",
        "writeSync"
      ],
      "properties": [
        "constants",
        "Stats",
        "ReadStream",
        "WriteStream"
      ],
      "events": []
    },
    "fs.constants": {
      "description": "commonly used constants for file system operations",
      "functions": [],
      "properties": [
        "O_RDONLY",
        "O_WRONLY",
        "O_RDWR",
        "S_IFMT",
        "S_IFREG",
        "S_IFDIR",
        "S_IFCHR",
        "S_IFBLK",
        "S_IFIFO",
        "S_IFLNK",
        "S_IFSOCK",
        "O_CREAT",
        "O_EXCL",
        "O_NOCTTY",
        "O_TRUNC",
        "O_APPEND",
        "O_DIRECTORY",
        "O_NOFOLLOW",
        "O_SYNC",
        "O_DSYNC",
        "O_SYMLINK",
        "O_NONBLOCK",
        "S_IRWXU",
        "S_IRUSR",
        "S_IWUSR",
        "S_IXUSR",
        "S_IRWXG",
        "S_IRGRP",
        "S_IWGRP",
        "S_IXGRP",
        "S_IRWXO",
        "S_IROTH",
        "S_IWOTH",
        "S_IXOTH",
        "F_OK",
        "R_OK",
        "W_OK",
        "X_OK",
        "UV_FS_COPYFILE_EXCL",
        "COPYFILE_EXCL"
      ],
      "events": []
    },
    "fs.Stats": {
      "description": "A <code>fs.Stats</code> object provides information about a file.",
      "functions": [
        "isBlockDevice",
        "isCharacterDevice",
        "isDirectory",
        "isFIFO",
        "isFile",
        "isSocket",
        "isSymbolicLink"
      ],
      "properties": [
        "dev",
        "ino",
        "mode",
        "nlink",
        "uid",
        "gid",
        "rdev",
        "size",
        "blksize",
        "blocks",
        "atimeMs",
        "mtimeMs",
        "ctimeMs",
        "birthtimeMs",
        "atime",
        "mtime",
        "ctime",
        "birthtime"
      ],
      "events": []
    },
    "fs.Dirent": {
      "description": "A representation of a directory entry, which can be a file or a subdirectory within the directory, as returned by reading from an &lt;fs.Dir&gt;.\nThe directory entry is a combination of the file name and file type pairs.\n<strong>NOTE:</strong> Titanium does not currently implement this type.",
      "functions": [],
      "properties": [],
      "events": []
    },
    "fs.appendFile.options": {
      "description": "options for <a href=\"fs.appendFile\">fs.appendFile</a> and <a href=\"fs.appendFileSync\">fs.appendFileSync</a> methods",
      "functions": [],
      "properties": [
        "encoding",
        "mode",
        "flag"
      ],
      "events": []
    },
    "fs.mkdir.options": {
      "description": "options for <a href=\"fs.mkdir\">fs.mkdir</a> and <a href=\"fs.mkdirSync\">fs.mkdirSync</a> methods",
      "functions": [],
      "properties": [
        "recursive",
        "mode"
      ],
      "events": []
    },
    "fs.mkdtemp.options": {
      "description": "options for <a href=\"fs.mkdtemp\">fs.mkdtemp</a> and <a href=\"fs.mkdtempSync\">fs.mkdtempSync</a> methods",
      "functions": [],
      "properties": [
        "encoding"
      ],
      "events": []
    },
    "fs.readdir.options": {
      "description": "options for <a href=\"fs.readdir\">fs.readdir</a> and <a href=\"fs.readdirSync\">fs.readdirSync</a> methods",
      "functions": [],
      "properties": [
        "encoding",
        "withFileTypes"
      ],
      "events": []
    },
    "fs.readFile.options": {
      "description": "options for <a href=\"fs.readFile\">fs.readFile</a> and <a href=\"fs.readFileSync\">fs.readFileSync</a> methods",
      "functions": [],
      "properties": [
        "encoding",
        "flag"
      ],
      "events": []
    },
    "fs.rm.options": {
      "description": "options for &lt;fs.rm&gt; and <a href=\"fs.rmSync\">fs.rmSync</a> methods",
      "functions": [],
      "properties": [
        "force",
        "maxRetries",
        "recursive",
        "retryDelay"
      ],
      "events": []
    },
    "fs.rmDir.options": {
      "description": "options for &lt;fs.rmDir&gt; and &lt;fs.rmDirSync&gt; methods",
      "functions": [],
      "properties": [
        "maxRetries",
        "recursive",
        "retryDelay"
      ],
      "events": []
    },
    "fs.stat.options": {
      "description": "options for <a href=\"fs.fstat\">fs.fstat</a>, <a href=\"fs.fstatSync\">fs.fstatSync</a>, <a href=\"fs.lstat\">fs.lstat</a>, <a href=\"fs.lstatSync\">fs.lstatSync</a>, <a href=\"fs.stat\">fs.stat</a>, and <a href=\"fs.statSync\">fs.statSync</a> methods",
      "functions": [],
      "properties": [
        "bigint"
      ],
      "events": []
    },
    "fs.writeFile.options": {
      "description": "options for <a href=\"fs.writeFile\">fs.writeFile</a> and <a href=\"fs.writeFileSync\">fs.writeFileSync</a> methods",
      "functions": [],
      "properties": [
        "encoding",
        "mode",
        "flag"
      ],
      "events": []
    },
    "fs.WriteStream": {
      "description": "Instances of <code>fs.WriteStream</code> are created and returned using the <code>fs.createWriteStream()</code> function.\n<strong>NOTE:</strong> Titanium defines an empty class for this type. No methods/properties are implemented!",
      "functions": [],
      "properties": [],
      "events": []
    },
    "fs.ReadStream": {
      "description": "Instances of <code>fs.ReadStream</code> are created and returned using the <code>fs.createReadStream()</code> function.\n<strong>NOTE:</strong> Titanium defines an empty class for this type. No methods/properties are implemented!",
      "functions": [],
      "properties": [],
      "events": []
    },
    "os": {
      "description": "A Node.js-compatible implementation of the core <code>os</code> module",
      "functions": [
        "arch",
        "cpus",
        "endianness",
        "freemem",
        "getPriority",
        "homedir",
        "hostname",
        "loadavg",
        "networkInterfaces",
        "platform",
        "release",
        "setPriority",
        "tmpdir",
        "totalmem",
        "type",
        "uptime",
        "userInfo"
      ],
      "properties": [
        "EOL",
        "constants"
      ],
      "events": []
    },
    "os.constants": {
      "description": "Abstract type defined for <a href=\"os.constants\">os.constants</a>.",
      "functions": [],
      "properties": [
        "signals",
        "priority",
        "errno"
      ],
      "events": []
    },
    "os.constants.priority": {
      "description": "Abstract type defined for <a href=\"os.constants.priority\">os.constants.priority</a>",
      "functions": [],
      "properties": [
        "PRIORITY_LOW",
        "PRIORITY_BELOW_NORMAL",
        "PRIORITY_NORMAL",
        "PRIORITY_ABOVE_NORMAL",
        "PRIORITY_HIGH",
        "PRIORITY_HIGHEST"
      ],
      "events": []
    },
    "CPUInfo": {
      "description": "Abstract type defined for the return value <a href=\"os.cpus\">os.cpus</a><code>()</code>.",
      "functions": [],
      "properties": [
        "model",
        "speed",
        "times"
      ],
      "events": []
    },
    "CPUInfoTimes": {
      "description": "Abstract type defined for the return value of <a href=\"os.cpus\">os.cpus</a><code>()</code>.",
      "functions": [],
      "properties": [
        "user",
        "nice",
        "sys",
        "idle",
        "irq"
      ],
      "events": []
    },
    "OSUserInfo": {
      "description": "Abstract type returned by <a href=\"os.userInfo\">os.userInfo</a><code>()</code>.",
      "functions": [],
      "properties": [
        "uid",
        "gid",
        "username",
        "homedir",
        "shell"
      ],
      "events": []
    },
    "EncodingOptions": {
      "description": "Abstract type defined for <a href=\"os.userInfo\">os.userInfo</a><code>()</code>. <strong>NOTE</strong> that these options are currently ignored by Titanium!",
      "functions": [],
      "properties": [
        "encoding"
      ],
      "events": []
    },
    "path": {
      "description": "A Node.js-compatible implementation of the core <code>path</code> module",
      "functions": [
        "basename",
        "dirname",
        "extname",
        "format",
        "isAbsolute",
        "join",
        "normalize",
        "parse",
        "relative",
        "resolve",
        "toNamespacedPath"
      ],
      "properties": [
        "delimiter",
        "posix",
        "sep",
        "win32"
      ],
      "events": []
    },
    "PathObject": {
      "description": "Abstract type defined for <a href=\"path.format\">path.format</a> and <a href=\"path.parse\">path.parse</a>",
      "functions": [],
      "properties": [
        "dir",
        "root",
        "base",
        "name",
        "ext"
      ],
      "events": []
    },
    "process": {
      "description": "A Node.js-compatible implementation of the core <code>process</code> module",
      "functions": [
        "addListener",
        "emit",
        "eventNames",
        "getMaxListeners",
        "listenerCount",
        "listeners",
        "off",
        "on",
        "once",
        "prependListener",
        "prependOnceListener",
        "rawListeners",
        "removeAllListeners",
        "removeListener",
        "setMaxListeners",
        "abort",
        "binding",
        "chdir",
        "cpuUsage",
        "cwd",
        "disconnect",
        "dlopen",
        "emitWarning",
        "exit",
        "umask",
        "uptime"
      ],
      "properties": [
        "arch",
        "argv",
        "argv0",
        "channel",
        "config",
        "connected",
        "debugPort",
        "env",
        "execArgv",
        "execPath",
        "exitCode",
        "noDeprecation",
        "pid",
        "platform",
        "ppid",
        "stderr",
        "stdout",
        "title",
        "throwDeprecation",
        "traceDeprecation",
        "version",
        "versions"
      ],
      "events": [
        "newListener",
        "removeListener",
        "uncaughtException",
        "warning"
      ]
    },
    "EmitWarningOptions": {
      "description": "An abstract type for the options that may be passed to <a href=\"process.emitWarning\">process.emitWarning</a>().",
      "functions": [],
      "properties": [
        "type",
        "code",
        "ctor",
        "detail"
      ],
      "events": []
    },
    "string_decoder": {
      "description": "A Node.js-compatible implementation of the core <code>string_decoder</code> module",
      "functions": [],
      "properties": [
        "StringDecoder"
      ],
      "events": []
    },
    "StringDecoder": {
      "description": "The primary class exported by the <a href=\"string_decoder\">string_decoder</a> core module.",
      "functions": [
        "constructor",
        "end",
        "write"
      ],
      "properties": [],
      "events": []
    },
    "util": {
      "description": "A Node.js-compatible implementation of the core <code>util</code> module",
      "functions": [
        "callbackify",
        "debug",
        "debuglog",
        "deprecate",
        "format",
        "formatWithOptions",
        "inherits",
        "inspect",
        "isArray",
        "isBoolean",
        "isBuffer",
        "isDate",
        "isError",
        "isFunction",
        "isNull",
        "isNullOrUndefined",
        "isNumber",
        "isObject",
        "isPrimitive",
        "isRegExp",
        "isString",
        "isSymbol",
        "isUndefined",
        "log",
        "promisify"
      ],
      "properties": [
        "types"
      ],
      "events": []
    },
    "UtilInspectOptions": {
      "description": "Abstract type for the options object passed to <a href=\"util.inspect\">util.inspect</a>",
      "functions": [],
      "properties": [
        "showHidden",
        "depth",
        "colors",
        "customInspect",
        "showProxy",
        "maxArrayLength",
        "maxStringLength",
        "breakLength",
        "compact",
        "sorted",
        "getters"
      ],
      "events": []
    },
    "util.types": {
      "description": "<code>util.types</code> provides type checks for different kinds of built-in objects. Unlike <code>instanceof</code> or <code>Object.prototype.toString.call(value)</code>, these checks do not inspect properties of the object that are accessible from JavaScript (like their prototype), and usually have the overhead of calling into C++.\nThe result generally does not make any guarantees about what kinds of properties or behavior a value exposes in JavaScript. They are primarily useful for addon developers who prefer to do type checking in JavaScript.",
      "functions": [
        "isAnyArrayBuffer",
        "isArgumentsObject",
        "isArrayBuffer",
        "isArrayBufferView",
        "isAsyncFunction",
        "isBigInt64Array",
        "isBigUint64Array",
        "isBooleanObject",
        "isBoxedPrimitive",
        "isDataView",
        "isDate",
        "isFloat32Array",
        "isFloat64Array",
        "isGeneratorFunction",
        "isGeneratorObject",
        "isInt8Array",
        "isInt16Array",
        "isInt32Array",
        "isMap",
        "isMapIterator",
        "isNativeError",
        "isNumberObject",
        "isPromise",
        "isRegExp",
        "isSet",
        "isSetIterator",
        "isSharedArrayBuffer",
        "isStringObject",
        "isSymbolObject",
        "isTypedArray",
        "isUint8Array",
        "isUint8ClampedArray",
        "isUint16Array",
        "isUint32Array",
        "isWeakMap",
        "isWeakSet"
      ],
      "properties": [],
      "events": []
    },
    "Ti.API": {
      "description": "The top-level API module, containing methods to output messages to the system log.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "debug",
        "error",
        "info",
        "log",
        "timestamp",
        "trace",
        "warn"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.Accelerometer": {
      "description": "The top-level Accelerometer module, used to determine the device's physical position.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": [
        "update"
      ]
    },
    "Ti.Android.ActionBar": {
      "description": "An action bar is a window feature that identifies the application and user location,\nand provides user actions and navigation modes.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "hide",
        "setDisplayShowHomeEnabled",
        "setDisplayShowTitleEnabled",
        "show"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "backgroundImage",
        "displayHomeAsUp",
        "homeAsUpIndicator",
        "homeButtonEnabled",
        "icon",
        "logo",
        "navigationMode",
        "onHomeIconItemSelected",
        "subtitle",
        "title",
        "customView",
        "visible"
      ],
      "events": []
    },
    "Ti.Android.Activity": {
      "description": "The Titanium binding of an Android Activity.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "finish",
        "getString",
        "invalidateOptionsMenu",
        "setRequestedOrientation|deprecated",
        "setResult",
        "setSupportActionBar",
        "startActivity",
        "startActivityForResult",
        "openOptionsMenu",
        "sendBroadcast",
        "sendBroadcastWithPermission"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "actionBar",
        "intent",
        "onCreate",
        "onCreateOptionsMenu",
        "onDestroy",
        "onPause",
        "onPrepareOptionsMenu",
        "onRestart",
        "onResume",
        "onStart",
        "onStop",
        "requestedOrientation",
        "supportToolbar"
      ],
      "events": [
        "newintent",
        "onIntent",
        "userleavehint",
        "userinteraction"
      ]
    },
    "ActivityResult": {
      "description": "Simple object passed to the\n<a href=\"Titanium.Android.Activity.startActivityForResult\">startActivityForResult</a> callback.",
      "functions": [],
      "properties": [
        "requestCode",
        "resultCode",
        "intent"
      ],
      "events": []
    },
    "ActivityLifecycleCallbackObject": {
      "description": "Simple object passed to the <a href=\"Titanium.Android.Activity\">Titanium.Android.Activity</a> callbacks for\nonCreate, onDestroy, onPause, onResume, onStart, onStop, onRestart.\nAdditional properties may be set on the Object.",
      "functions": [],
      "properties": [
        "source"
      ],
      "events": []
    },
    "OptionsMenuCallbackObject": {
      "description": "Simple object passed to the <a href=\"Titanium.Android.Activity\">Titanium.Android.Activity</a> callbacks for\nonPrepareOptionsMenu and onCreateOptionsMenu.\nAdditional properties may be set on the Object.",
      "functions": [],
      "properties": [
        "menu"
      ],
      "events": []
    },
    "Ti.Android": {
      "description": "The top-level Android module.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createIntentChooser",
        "createPendingIntent",
        "createService",
        "createServiceIntent",
        "hasPermission",
        "requestPermissions",
        "isServiceRunning",
        "registerBroadcastReceiver",
        "unregisterBroadcastReceiver",
        "startService",
        "stopService",
        "createBroadcastIntent",
        "createBigPictureStyle",
        "createBigTextStyle",
        "createBroadcastReceiver",
        "createIntent",
        "createNotification",
        "createNotificationChannel",
        "createQuickSettingsService",
        "createRemoteViews"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ACTION_AIRPLANE_MODE_CHANGED",
        "ACTION_ALL_APPS",
        "ACTION_ANSWER",
        "ACTION_ATTACH_DATA",
        "ACTION_BATTERY_CHANGED",
        "ACTION_BATTERY_LOW",
        "ACTION_BATTERY_OKAY",
        "ACTION_BOOT_COMPLETED",
        "ACTION_BUG_REPORT",
        "ACTION_CALL",
        "ACTION_CALL_BUTTON",
        "ACTION_CAMERA_BUTTON",
        "ACTION_CHOOSER",
        "ACTION_CLOSE_SYSTEM_DIALOGS",
        "ACTION_CONFIGURATION_CHANGED",
        "ACTION_CREATE_SHORTCUT",
        "ACTION_DATE_CHANGED",
        "ACTION_DEFAULT",
        "ACTION_DELETE",
        "ACTION_DEVICE_STORAGE_LOW",
        "ACTION_DIAL",
        "ACTION_EDIT",
        "ACTION_GET_CONTENT",
        "ACTION_GTALK_SERVICE_CONNECTED",
        "ACTION_GTALK_SERVICE_DISCONNECTED",
        "ACTION_HEADSET_PLUG",
        "ACTION_INPUT_METHOD_CHANGED",
        "ACTION_INSERT",
        "ACTION_INSERT_OR_EDIT",
        "ACTION_MAIN",
        "ACTION_MANAGE_PACKAGE_STORAGE",
        "ACTION_MEDIA_BAD_REMOVAL",
        "ACTION_MEDIA_BUTTON",
        "ACTION_MEDIA_CHECKING",
        "ACTION_MEDIA_EJECT",
        "ACTION_MEDIA_MOUNTED",
        "ACTION_MEDIA_NOFS",
        "ACTION_MEDIA_REMOVED",
        "ACTION_MEDIA_SCANNER_FINISHED",
        "ACTION_MEDIA_SCANNER_SCAN_FILE",
        "ACTION_MEDIA_SCANNER_STARTED",
        "ACTION_MEDIA_SHARED",
        "ACTION_MEDIA_UNMOUNTABLE",
        "ACTION_MEDIA_UNMOUNTED",
        "ACTION_NEW_OUTGOING_CALL",
        "ACTION_PACKAGE_ADDED",
        "ACTION_PACKAGE_CHANGED",
        "ACTION_PACKAGE_DATA_CLEARED",
        "ACTION_PACKAGE_REMOVED",
        "ACTION_PACKAGE_REPLACED",
        "ACTION_PACKAGE_RESTARTED",
        "ACTION_PICK",
        "ACTION_PICK_ACTIVITY",
        "ACTION_POWER_CONNECTED",
        "ACTION_POWER_DISCONNECTED",
        "ACTION_POWER_USAGE_SUMMARY",
        "ACTION_PROVIDER_CHANGED",
        "ACTION_REBOOT",
        "ACTION_RUN",
        "ACTION_SCREEN_OFF",
        "ACTION_SCREEN_ON",
        "ACTION_SEARCH",
        "ACTION_SEARCH_LONG_PRESS",
        "ACTION_SEND",
        "ACTION_SENDTO",
        "ACTION_SEND_MULTIPLE",
        "ACTION_SET_WALLPAPER",
        "ACTION_SHUTDOWN",
        "ACTION_SYNC",
        "ACTION_SYSTEM_TUTORIAL",
        "ACTION_TIME_CHANGED",
        "ACTION_TIME_TICK",
        "ACTION_UID_REMOVED",
        "ACTION_USER_PRESENT",
        "ACTION_VIEW",
        "ACTION_VOICE_COMMAND",
        "ACTION_WALLPAPER_CHANGED",
        "ACTION_WEB_SEARCH",
        "CATEGORY_ALTERNATIVE",
        "CATEGORY_BROWSABLE",
        "CATEGORY_DEFAULT",
        "CATEGORY_DEVELOPMENT_PREFERENCE",
        "CATEGORY_EMBED",
        "CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST",
        "CATEGORY_HOME",
        "CATEGORY_INFO",
        "CATEGORY_LAUNCHER",
        "CATEGORY_MONKEY",
        "CATEGORY_OPENABLE",
        "CATEGORY_PREFERENCE",
        "CATEGORY_SAMPLE_CODE",
        "CATEGORY_SELECTED_ALTERNATIVE",
        "CATEGORY_TAB",
        "CATEGORY_TEST",
        "CATEGORY_UNIT_TEST",
        "EXTRA_ALARM_COUNT",
        "EXTRA_BCC",
        "EXTRA_CC",
        "EXTRA_DATA_REMOVED",
        "EXTRA_DONT_KILL_APP",
        "EXTRA_EMAIL",
        "EXTRA_INTENT",
        "EXTRA_KEY_EVENT",
        "EXTRA_PHONE_NUMBER",
        "EXTRA_REPLACING",
        "EXTRA_SHORTCUT_ICON",
        "EXTRA_SHORTCUT_ICON_RESOURCE",
        "EXTRA_SHORTCUT_INTENT",
        "EXTRA_SHORTCUT_NAME",
        "EXTRA_STREAM",
        "EXTRA_SUBJECT",
        "EXTRA_TEMPLATE",
        "EXTRA_TEXT",
        "EXTRA_TITLE",
        "EXTRA_UID",
        "FILL_IN_ACTION",
        "FILL_IN_CATEGORIES",
        "FILL_IN_COMPONENT",
        "FILL_IN_DATA",
        "FILL_IN_PACKAGE",
        "FLAG_ACTIVITY_BROUGHT_TO_FRONT",
        "FLAG_ACTIVITY_CLEAR_TOP",
        "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET",
        "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS",
        "FLAG_ACTIVITY_FORWARD_RESULT",
        "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY",
        "FLAG_ACTIVITY_MULTIPLE_TASK",
        "FLAG_ACTIVITY_NEW_TASK",
        "FLAG_ACTIVITY_NO_ANIMATION",
        "FLAG_ACTIVITY_NO_HISTORY",
        "FLAG_ACTIVITY_NO_USER_ACTION",
        "FLAG_ACTIVITY_PREVIOUS_IS_TOP",
        "FLAG_ACTIVITY_REORDER_TO_FRONT",
        "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED",
        "FLAG_ACTIVITY_SINGLE_TOP",
        "FLAG_DEBUG_LOG_RESOLUTION",
        "FLAG_FROM_BACKGROUND",
        "FLAG_GRANT_READ_URI_PERMISSION",
        "FLAG_GRANT_WRITE_URI_PERMISSION",
        "FLAG_RECEIVER_REGISTERED_ONLY",
        "FLAG_CANCEL_CURRENT",
        "FLAG_IMMUTABLE",
        "FLAG_MUTABLE",
        "FLAG_NO_CREATE",
        "FLAG_ONE_SHOT",
        "FLAG_UPDATE_CURRENT",
        "CATEGORY_ALARM",
        "CATEGORY_CALL",
        "CATEGORY_EMAIL",
        "CATEGORY_ERROR",
        "CATEGORY_EVENT",
        "CATEGORY_MESSAGE",
        "CATEGORY_PROGRESS",
        "CATEGORY_PROMO",
        "CATEGORY_RECOMMENDATION",
        "CATEGORY_SERVICE",
        "CATEGORY_SOCIAL",
        "CATEGORY_STATUS",
        "CATEGORY_TRANSPORT",
        "DEFAULT_ALL",
        "DEFAULT_LIGHTS",
        "DEFAULT_SOUND",
        "DEFAULT_VIBRATE",
        "FOREGROUND_SERVICE_TYPE_MANIFEST",
        "FOREGROUND_SERVICE_TYPE_NONE",
        "FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK",
        "FOREGROUND_SERVICE_TYPE_PHONE_CALL",
        "FOREGROUND_SERVICE_TYPE_LOCATION",
        "FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE",
        "FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION",
        "FOREGROUND_SERVICE_TYPE_MICROPHONE",
        "FOREGROUND_SERVICE_TYPE_CAMERA",
        "FLAG_AUTO_CANCEL",
        "FLAG_INSISTENT",
        "FLAG_NO_CLEAR",
        "FLAG_ONGOING_EVENT",
        "FLAG_ONLY_ALERT_ONCE",
        "FLAG_SHOW_LIGHTS",
        "PRIORITY_MAX",
        "PRIORITY_HIGH",
        "PRIORITY_DEFAULT",
        "PRIORITY_LOW",
        "PRIORITY_MIN",
        "VISIBILITY_PRIVATE",
        "VISIBILITY_PUBLIC",
        "VISIBILITY_SECRET",
        "TILE_STATE_UNAVAILABLE",
        "TILE_STATE_INACTIVE",
        "TILE_STATE_ACTIVE",
        "WAKE_LOCK_PARTIAL",
        "WAKE_LOCK_FULL",
        "WAKE_LOCK_SCREEN_DIM",
        "WAKE_LOCK_SCREEN_BRIGHT",
        "WAKE_LOCK_ACQUIRE_CAUSES_WAKEUP",
        "WAKE_LOCK_ON_AFTER_RELEASE",
        "PENDING_INTENT_FOR_ACTIVITY",
        "PENDING_INTENT_FOR_BROADCAST",
        "PENDING_INTENT_FOR_SERVICE",
        "PENDING_INTENT_MAX_VALUE",
        "R",
        "RESULT_CANCELED",
        "RESULT_FIRST_USER",
        "RESULT_OK",
        "SCREEN_ORIENTATION_BEHIND",
        "SCREEN_ORIENTATION_LANDSCAPE",
        "SCREEN_ORIENTATION_NOSENSOR",
        "SCREEN_ORIENTATION_PORTRAIT",
        "SCREEN_ORIENTATION_SENSOR",
        "SCREEN_ORIENTATION_UNSPECIFIED",
        "SCREEN_ORIENTATION_USER",
        "SHOW_AS_ACTION_ALWAYS",
        "SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW",
        "SHOW_AS_ACTION_IF_ROOM",
        "SHOW_AS_ACTION_NEVER",
        "SHOW_AS_ACTION_WITH_TEXT",
        "NAVIGATION_MODE_STANDARD",
        "NAVIGATION_MODE_TABS",
        "START_NOT_STICKY",
        "START_REDELIVER_INTENT",
        "STREAM_ALARM",
        "STREAM_DEFAULT",
        "STREAM_MUSIC",
        "STREAM_NOTIFICATION",
        "STREAM_RING",
        "STREAM_SYSTEM",
        "STREAM_VOICE_CALL",
        "URI_INTENT_SCHEME",
        "IMPORTANCE_DEFAULT",
        "IMPORTANCE_HIGH",
        "IMPORTANCE_LOW",
        "IMPORTANCE_MAX",
        "IMPORTANCE_MIN",
        "IMPORTANCE_NONE",
        "IMPORTANCE_UNSPECIFIED",
        "currentActivity",
        "currentService",
        "rootActivity"
      ],
      "events": []
    },
    "ServiceIntentOptions": {
      "description": "Options passed to <a href=\"Titanium.Android.createServiceIntent\">Titanium.Android.createServiceIntent</a>.",
      "functions": [],
      "properties": [
        "url",
        "startMode"
      ],
      "events": []
    },
    "RequestPermissionAccessResult": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "Ti.Android.BigPictureStyle": {
      "description": "Helper object for generating large-format notifications that include a large image attachment.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "bigLargeIcon",
        "bigPicture",
        "bigContentTitle",
        "decodeRetries",
        "summaryText"
      ],
      "events": []
    },
    "Ti.Android.BigTextStyle": {
      "description": "Helper object for generating large-format notifications that include a lot of text.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "bigText",
        "bigContentTitle",
        "summaryText"
      ],
      "events": []
    },
    "Ti.Android.BroadcastReceiver": {
      "description": "Monitor and handle Android system broadcasts.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "onReceived",
        "url"
      ],
      "events": []
    },
    "Ti.Android.Intent": {
      "description": "Message objects passed between Android application components.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addCategory",
        "addFlags",
        "getBlobExtra",
        "getBooleanExtra",
        "getData|deprecated",
        "getDoubleExtra",
        "getIntExtra",
        "getLongExtra",
        "getStringExtra",
        "hasExtra",
        "putExtra",
        "putExtraUri"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "action",
        "className",
        "data",
        "flags",
        "packageName",
        "type",
        "url"
      ],
      "events": []
    },
    "Ti.Android.Menu": {
      "description": "The Titanium binding of an Android Options Menu.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "clear",
        "close",
        "findItem",
        "getItem",
        "hasVisibleItems",
        "removeGroup",
        "removeItem",
        "setGroupEnabled",
        "setGroupVisible",
        "size"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "items"
      ],
      "events": []
    },
    "Ti.Android.MenuItem": {
      "description": "The Titanium binding of an Android menu item.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "collapseActionView",
        "expandActionView",
        "isActionViewExpanded|deprecated",
        "isCheckable|deprecated",
        "isChecked|deprecated",
        "isEnabled|deprecated",
        "isVisible|deprecated",
        "setCheckable|deprecated",
        "setChecked|deprecated",
        "setEnabled|deprecated",
        "setVisible|deprecated"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "actionView",
        "actionViewExpanded",
        "checkable",
        "checked",
        "enabled",
        "groupId",
        "icon",
        "itemId",
        "order",
        "showAsAction",
        "title",
        "titleCondensed",
        "visible"
      ],
      "events": [
        "click",
        "expand",
        "collapse"
      ]
    },
    "Ti.Android.Notification": {
      "description": "UI notifications that can be sent while the application is in the background.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "setLatestEventInfo",
        "setProgress",
        "addAction"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "audioStreamType",
        "category",
        "channelId",
        "contentIntent",
        "contentText",
        "contentTitle",
        "contentView",
        "defaults",
        "deleteIntent",
        "flags",
        "groupKey",
        "groupSummary",
        "icon",
        "largeIcon",
        "color",
        "ledARGB",
        "ledOffMS",
        "ledOnMS",
        "number",
        "priority",
        "sound",
        "style",
        "tickerText",
        "visibility",
        "wakeLock",
        "when"
      ],
      "events": []
    },
    "wakeLockOptions": {
      "description": "Parameter for wakeLock",
      "functions": [],
      "properties": [
        "time",
        "flags"
      ],
      "events": []
    },
    "Ti.Android.NotificationChannel": {
      "description": "Module for notification channels.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "bypassDnd",
        "description",
        "enableLights",
        "enableVibration",
        "groupId",
        "importance",
        "id",
        "lightColor",
        "lockscreenVisibility",
        "name",
        "showBadge",
        "sound",
        "vibratePattern"
      ],
      "events": []
    },
    "Ti.Android.NotificationManager": {
      "description": "Module for managing notifications.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "cancel",
        "cancelAll",
        "notify",
        "createNotificationChannel",
        "deleteNotificationChannel",
        "areNotificationsEnabled"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "DEFAULT_ALL",
        "DEFAULT_LIGHTS",
        "DEFAULT_SOUND",
        "DEFAULT_VIBRATE",
        "FLAG_AUTO_CANCEL",
        "FLAG_INSISTENT",
        "FLAG_NO_CLEAR",
        "FLAG_ONGOING_EVENT",
        "FLAG_ONLY_ALERT_ONCE",
        "FLAG_SHOW_LIGHTS",
        "STREAM_DEFAULT",
        "notificationChannels"
      ],
      "events": []
    },
    "NotificationChannels": {
      "description": "The parameter passed to the <code>error</code> callback of <a href=\"PreviewImageOptions\">PreviewImageOptions</a>.",
      "functions": [],
      "properties": [
        "name",
        "id"
      ],
      "events": []
    },
    "Ti.Android.PendingIntent": {
      "description": "The Titanium binding of an Android <code>PendingIntent</code>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "flags",
        "intent",
        "updateCurrentIntent"
      ],
      "events": []
    },
    "Ti.Android.QuickSettingsService": {
      "description": "Android service for creating custom quick settings tiles and handling user's interaction with them.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "foregroundCancel",
        "foregroundNotify",
        "start",
        "stop",
        "updateTile",
        "setIcon|deprecated",
        "setState|deprecated",
        "setLabel|deprecated",
        "getIcon|deprecated",
        "getState|deprecated",
        "getLabel|deprecated",
        "isLocked",
        "isSecure",
        "showDialog",
        "startActivityAndCollapse",
        "unlockAndRun"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "intent",
        "serviceInstanceId",
        "icon",
        "state",
        "label"
      ],
      "events": [
        "pause",
        "resume",
        "start",
        "stop",
        "taskremoved",
        "startlistening",
        "stoplistening",
        "tileadded",
        "tileremoved",
        "tiledialogoptionselected",
        "tiledialogcancelled",
        "tiledialogpositive",
        "tiledialogneutral",
        "tiledialognegative"
      ]
    },
    "showParams": {
      "description": "Dictionary of options for the <a href=\"Titanium.UI.OptionDialog.show\">Titanium.UI.OptionDialog.show</a> method.",
      "functions": [],
      "properties": [
        "title",
        "message",
        "buttonNames",
        "options",
        "animated",
        "view",
        "rect"
      ],
      "events": []
    },
    "Ti.Android.R": {
      "description": "The Titanium binding of the native Android <code>R</code> class, giving access to\nAndroid system-wide resources or application resources.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "anim",
        "animator",
        "array",
        "attr",
        "bool",
        "color",
        "dimen",
        "drawable",
        "fraction",
        "id",
        "integer",
        "interpolator",
        "layout",
        "menu",
        "mipmap",
        "plurals",
        "raw",
        "string",
        "style",
        "styleable",
        "transition",
        "xml"
      ],
      "events": []
    },
    "Ti.Android.RemoteViews": {
      "description": "The Titanium binding of <a href=\"https://developer.android.com/reference/android/widget/RemoteViews.html\">Android RemoteViews</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "setBoolean",
        "setChronometer",
        "setDouble",
        "setImageViewResource",
        "setImageViewUri",
        "setInt",
        "setOnClickPendingIntent",
        "setProgressBar",
        "setString",
        "setTextColor",
        "setTextViewText",
        "setUri",
        "setViewVisibility"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "layoutId",
        "packageName"
      ],
      "events": []
    },
    "Ti.Android.Service": {
      "description": "Android application component that executes in the background.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "foregroundCancel",
        "foregroundNotify",
        "start",
        "stop"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "intent",
        "serviceInstanceId"
      ],
      "events": [
        "pause",
        "resume",
        "start",
        "stop",
        "taskremoved"
      ]
    },
    "Ti.App.Android": {
      "description": "A module used to access Android application resources.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "R",
        "appVersionCode",
        "appVersionName",
        "launchIntent"
      ],
      "events": [
        "shortcutitemclick"
      ]
    },
    "Ti.App": {
      "description": "The top-level App module is mainly used for accessing information about the\napplication at runtime, and for sending or listening for system events.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "fireSystemEvent",
        "getArguments|deprecated"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "EVENT_ACCESSIBILITY_ANNOUNCEMENT",
        "EVENT_ACCESSIBILITY_CHANGED",
        "accessibilityEnabled",
        "copyright",
        "currentService",
        "deployType",
        "description",
        "guid",
        "forceSplashAsSnapshot",
        "id",
        "installId",
        "idleTimerDisabled",
        "name",
        "proximityDetection",
        "proximityState",
        "disableNetworkActivityIndicator",
        "publisher",
        "sessionId",
        "url",
        "version",
        "keyboardVisible",
        "trackUserInteraction",
        "arguments"
      ],
      "events": [
        "accessibilitychanged",
        "close",
        "memorywarning",
        "pause",
        "paused",
        "proximity",
        "uncaughtException",
        "resume",
        "resumed",
        "started",
        "keyboardframechanged",
        "significanttimechange",
        "shortcutitemclick",
        "userinteraction"
      ]
    },
    "launchOptions": {
      "description": "Dictionary describing the arguments passed to the application on startup.\nUse the <a href=\"Titanium.App.getArguments\">getArguments</a> method to retrieve the launch options.",
      "functions": [],
      "properties": [
        "url",
        "source",
        "launchOptionsLocationKey"
      ],
      "events": []
    },
    "Ti.App.Properties": {
      "description": "The App Properties module is used for storing application-related data in property/value pairs\nthat persist beyond application sessions and device power cycles.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "getBool",
        "getDouble",
        "getInt",
        "getList",
        "getObject",
        "getString",
        "hasProperty",
        "listProperties",
        "removeProperty",
        "removeAllProperties",
        "setBool",
        "setDouble",
        "setInt",
        "setList",
        "setObject",
        "setString"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": [
        "change"
      ]
    },
    "Ti.App.iOS.ActivityAttributes": {
      "description": "Use this module to communicate with the native iOS 16+ Dynamic Island APIs.",
      "functions": [
        "startActivity"
      ],
      "properties": [],
      "events": []
    },
    "Ti.App.iOS.BackgroundService": {
      "description": "A service that runs when the application is placed in the background.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "stop",
        "unregister"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "url"
      ],
      "events": []
    },
    "Ti.App.iOS.LocalNotification": {
      "description": "A local notification to alert the user of new or pending application information.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "cancel|deprecated"
      ],
      "properties": [
        "bubbleParent",
        "apiName"
      ],
      "events": []
    },
    "Ti.App.iOS.SearchQuery": {
      "description": "A search query object manages the criteria to apply when searching app content that you have previously\nindexed by using the Core Spotlight APIs.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "start",
        "cancel",
        "isCancelled"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "queryString",
        "attributes"
      ],
      "events": [
        "founditems",
        "completed"
      ]
    },
    "Ti.App.iOS.SearchableIndex": {
      "description": "The SearchableIndex module is used to add or remove Ti.App.iOS.SearchableItem objects from the device search index.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "isSupported",
        "addToDefaultSearchableIndex",
        "deleteAllSearchableItems",
        "deleteAllSearchableItemByDomainIdenifiers",
        "deleteSearchableItemsByIdentifiers"
      ],
      "properties": [
        "bubbleParent",
        "apiName"
      ],
      "events": []
    },
    "Ti.App.iOS.SearchableItem": {
      "description": "Used to create a unique object containing all of the search information that will appear in the device search index.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "attributeSet",
        "domainIdentifier",
        "expirationDate",
        "uniqueIdentifier"
      ],
      "events": []
    },
    "Ti.App.iOS.SearchableItemAttributeSet": {
      "description": "The SearchableItemAttributeSet module defines metadata properties for SearchItem and UserActivity objects.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "itemContentType",
        "displayName",
        "alternateNames",
        "path",
        "contentURL",
        "thumbnailURL",
        "thumbnailData",
        "relatedUniqueIdentifier",
        "metadataModificationDate",
        "contentType",
        "contentTypeTree",
        "keywords",
        "title",
        "subject",
        "theme",
        "contentDescription",
        "identifier",
        "audiences",
        "fileSize",
        "pageCount",
        "pageWidth",
        "pageHeight",
        "securityMethod",
        "creator",
        "encodingApplications",
        "kind",
        "fontNames",
        "audioSampleRate",
        "audioChannelCount",
        "tempo",
        "keySignature",
        "timeSignature",
        "audioEncodingApplication",
        "composer",
        "lyricist",
        "album",
        "artist",
        "audioTrackNumber",
        "recordingDate",
        "musicalGenre",
        "generalMIDISequence",
        "musicalInstrumentCategory",
        "musicalInstrumentName",
        "supportsPhoneCall",
        "supportsNavigation",
        "containerTitle",
        "containerDisplayName",
        "containerIdentifier",
        "containerOrder",
        "editors",
        "participants",
        "projects",
        "downloadedDate",
        "lastUsedDate",
        "contentCreationDate",
        "contentModificationDate",
        "addedDate",
        "contentSources",
        "comment",
        "copyright",
        "duration",
        "contactKeywords",
        "codecs",
        "organizations",
        "mediaTypes",
        "version",
        "role",
        "streamable",
        "totalBitRate",
        "videoBitRate",
        "audioBitRate",
        "deliveryType",
        "languages",
        "rights",
        "publishers",
        "contributors",
        "coverage",
        "rating",
        "ratingDescription",
        "playCount",
        "information",
        "director",
        "producer",
        "genre",
        "performers",
        "originalFormat",
        "originalSource",
        "local",
        "contentRating",
        "url",
        "fullyFormattedAddress",
        "subThoroughfare",
        "thoroughfare",
        "postalCode"
      ],
      "events": []
    },
    "Ti.App.iOS.UserActivity": {
      "description": "The UserActivity module is used to enable device Handoff and to create User Activities.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addContentAttributeSet",
        "becomeCurrent",
        "invalidate",
        "resignCurrent",
        "isSupported",
        "deleteSavedUserActivitiesForPersistentIdentifiers",
        "deleteAllSavedUserActivities"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "activityType",
        "eligibleForPublicIndexing",
        "eligibleForSearch",
        "eligibleForHandoff",
        "eligibleForPrediction",
        "persistentIdentifier",
        "expirationDate",
        "keywords",
        "needsSave",
        "requiredUserInfoKeys",
        "supported",
        "title",
        "userInfo",
        "webpageURL"
      ],
      "events": [
        "useractivitywillsave|deprecated",
        "useractivitywascontinued",
        "useractivitydeleted"
      ]
    },
    "Ti.App.iOS.UserDefaults": {
      "description": "The UserDefaults module is used for storing application-related data in property/value pairs\nthat persist beyond application sessions and device power cycles. UserDefaults allows the suiteName\nof the UserDefaults to be specified at creation time.\n<strong>Important</strong>: Using this API requires the <code>NSPrivacyAccessedAPICategoryUserDefaults</code> property set in the\nprivacy manifest that was introduced in iOS 17. You can learn more about it <a href=\"https://developer.apple.com/documentation/bundleresources/privacy_manifest_files/describing_use_of_required_reason_api\">here</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "getBool",
        "getDouble",
        "getInt",
        "getList",
        "getObject",
        "getString",
        "hasProperty",
        "listProperties",
        "removeProperty",
        "removeAllProperties",
        "setBool",
        "setDouble",
        "setInt",
        "setList",
        "setObject",
        "setString"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "suiteName"
      ],
      "events": [
        "change"
      ]
    },
    "Ti.App.iOS.UserNotificationAction": {
      "description": "An action the user selects in response to an interactive notification.",
      "functions": [],
      "properties": [
        "apiName",
        "activationMode",
        "behavior",
        "authenticationRequired",
        "destructive",
        "identifier",
        "title"
      ],
      "events": []
    },
    "Ti.App.iOS.UserNotificationCategory": {
      "description": "A set of notification actions to associate with a notification.",
      "functions": [],
      "properties": [
        "apiName",
        "actionsForDefaultContext",
        "actionsForMinimalContext",
        "categorySummaryFormat",
        "identifier",
        "intentIdentifiers",
        "hiddenPreviewsBodyPlaceholder",
        "options"
      ],
      "events": []
    },
    "Ti.App.iOS.UserNotificationCenter": {
      "description": "The top-level App iOS Notification Center module. It is used to control scheduled notifications\nand receive details about the system-wide notification settings.",
      "functions": [
        "getPendingNotifications",
        "getDeliveredNotifications",
        "removePendingNotifications",
        "removeDeliveredNotifications",
        "requestUserNotificationSettings"
      ],
      "properties": [
        "apiName"
      ],
      "events": []
    },
    "UserNotificationCallbackResponse": {
      "description": "Response when receiving pending or local notifications\nin <a href=\"Titanium.App.iOS.UserNotificationCenter.getPendingNotifications\">Titanium.App.iOS.UserNotificationCenter.getPendingNotifications</a> and\n<a href=\"Titanium.App.iOS.UserNotificationCenter.getDeliveredNotifications\">Titanium.App.iOS.UserNotificationCenter.getDeliveredNotifications</a>.",
      "functions": [],
      "properties": [
        "notifications"
      ],
      "events": []
    },
    "UserNotificationDictionary": {
      "description": "Dictionary of notification data used in the array of <code>notifications</code>\nwhen receiving pending or local notifications in\n<a href=\"Titanium.App.iOS.UserNotificationCenter.getPendingNotifications\">Titanium.App.iOS.UserNotificationCenter.getPendingNotifications</a> and\n<a href=\"Titanium.App.iOS.UserNotificationCenter.getDeliveredNotifications\">Titanium.App.iOS.UserNotificationCenter.getDeliveredNotifications</a>.",
      "functions": [],
      "properties": [
        "alertTitle",
        "alertSubtitle",
        "alertAction",
        "alertBody",
        "alertLaunchImage",
        "badge",
        "date",
        "sound",
        "timezone",
        "userInfo",
        "category",
        "identifier",
        "region"
      ],
      "events": []
    },
    "UserInfoDictionary": {
      "description": "Dictionary object of parameters.",
      "functions": [],
      "properties": [
        "showInForground"
      ],
      "events": []
    },
    "GetUserNotificationSettings": {
      "description": "Dictionary object of parameters used to register the application with local notifications using\nthe <a href=\"Titanium.App.iOS.registerUserNotificationSettings\">Titanium.App.iOS.registerUserNotificationSettings</a> method.",
      "functions": [],
      "properties": [
        "types",
        "categories",
        "authorizationStatus",
        "soundSetting",
        "badgeSetting",
        "alertSetting",
        "notificationCenterSetting",
        "lockScreenSetting",
        "carPlaySetting",
        "criticalAlertSetting",
        "providesAppNotificationSettings",
        "alertStyle"
      ],
      "events": []
    },
    "Ti.App.iOS": {
      "description": "The top-level App iOS module, available only to iOS devices, that includes the facilities to\ncreate and manage local notifications and background services.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createUserDefaults",
        "cancelAllLocalNotifications|deprecated",
        "cancelLocalNotification|deprecated",
        "registerBackgroundService",
        "registerUserNotificationSettings",
        "scheduleLocalNotification",
        "setMinimumBackgroundFetchInterval",
        "endBackgroundHandler",
        "sendWatchExtensionReply|deprecated",
        "createUserNotificationAction",
        "createUserNotificationCategory"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "EVENT_ACCESSIBILITY_LAYOUT_CHANGED",
        "EVENT_ACCESSIBILITY_SCREEN_CHANGED",
        "BACKGROUNDFETCHINTERVAL_MIN",
        "BACKGROUNDFETCHINTERVAL_NEVER",
        "USER_NOTIFICATION_TYPE_NONE",
        "USER_NOTIFICATION_TYPE_BADGE",
        "USER_NOTIFICATION_TYPE_SOUND",
        "USER_NOTIFICATION_TYPE_ALERT",
        "USER_NOTIFICATION_TYPE_CRITICAL_ALERT",
        "USER_NOTIFICATION_TYPE_PROVISIONAL",
        "USER_NOTIFICATION_TYPE_PROVIDES_APP_NOTIFICATION_SETTINGS",
        "USER_NOTIFICATION_ACTIVATION_MODE_BACKGROUND",
        "USER_NOTIFICATION_ACTIVATION_MODE_FOREGROUND",
        "USER_NOTIFICATION_BEHAVIOR_DEFAULT",
        "USER_NOTIFICATION_BEHAVIOR_TEXTINPUT",
        "USER_NOTIFICATION_AUTHORIZATION_STATUS_NOT_DETERMINED",
        "USER_NOTIFICATION_AUTHORIZATION_STATUS_AUTHORIZED",
        "USER_NOTIFICATION_AUTHORIZATION_STATUS_DENIED",
        "USER_NOTIFICATION_AUTHORIZATION_STATUS_PROVISIONAL",
        "USER_NOTIFICATION_SETTING_NOT_SUPPORTED",
        "USER_NOTIFICATION_SETTING_ENABLED",
        "USER_NOTIFICATION_SETTING_DISABLED",
        "USER_NOTIFICATION_ALERT_STYLE_NONE",
        "USER_NOTIFICATION_ALERT_STYLE_ALERT",
        "USER_NOTIFICATION_ALERT_STYLE_BANNER",
        "USER_NOTIFICATION_CATEGORY_OPTION_NONE",
        "USER_NOTIFICATION_CATEGORY_OPTION_CUSTOM_DISMISS_ACTION",
        "USER_NOTIFICATION_CATEGORY_OPTION_ALLOW_IN_CARPLAY",
        "USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_TITLE",
        "USER_NOTIFICATION_CATEGORY_OPTION_HIDDEN_PREVIEWS_SHOW_SUBTITLE",
        "USER_INTERFACE_STYLE_UNSPECIFIED",
        "USER_INTERFACE_STYLE_LIGHT",
        "USER_INTERFACE_STYLE_DARK",
        "UTTYPE_TEXT",
        "UTTYPE_PLAIN_TEXT",
        "UTTYPE_UTF8_PLAIN_TEXT",
        "UTTYPE_UTF16_EXTERNAL_PLAIN_TEXT",
        "UTTYPE_UTF16_PLAIN_TEXT",
        "UTTYPE_RTF",
        "UTTYPE_HTML",
        "UTTYPE_XML",
        "UTTYPE_PDF",
        "UTTYPE_RTFD",
        "UTTYPE_FLAT_RTFD",
        "UTTYPE_TXN_TEXT_AND_MULTIMEDIA_DATA",
        "UTTYPE_WEB_ARCHIVE",
        "UTTYPE_IMAGE",
        "UTTYPE_JPEG",
        "UTTYPE_JPEG2000",
        "UTTYPE_TIFF",
        "UTTYPE_PICT",
        "UTTYPE_GIF",
        "UTTYPE_PNG",
        "UTTYPE_QUICKTIME_IMAGE",
        "UTTYPE_APPLE_ICNS",
        "UTTYPE_BMP",
        "UTTYPE_ICO",
        "UTTYPE_MOVIE",
        "UTTYPE_VIDEO",
        "UTTYPE_AUDIO",
        "UTTYPE_QUICKTIME_MOVIE",
        "UTTYPE_MPEG",
        "UTTYPE_MPEG4",
        "UTTYPE_MP3",
        "UTTYPE_MPEG4_AUDIO",
        "UTTYPE_APPLE_PROTECTED_MPEG4_AUDIO",
        "currentUserNotificationSettings",
        "supportedUserActivityTypes",
        "applicationOpenSettingsURL",
        "userInterfaceStyle"
      ],
      "events": [
        "notification",
        "localnotificationaction",
        "remotenotificationaction",
        "backgroundfetch",
        "silentpush",
        "backgroundtransfer",
        "downloadprogress",
        "uploadprogress",
        "downloadcompleted",
        "sessioncompleted",
        "sessioneventscompleted",
        "usernotificationsettings",
        "watchkitextensionrequest|deprecated",
        "continueactivity",
        "shortcutitemclick",
        "handleurl",
        "traitcollectionchange",
        "screenshotcaptured"
      ]
    },
    "NotificationParams": {
      "description": "Dictionary object of parameters used to create a notification using\n<a href=\"Titanium.App.iOS.scheduleLocalNotification\">Titanium.App.iOS.scheduleLocalNotification</a>.",
      "functions": [],
      "properties": [
        "identifier",
        "alertAction",
        "alertBody",
        "alertTitle",
        "alertSubtitle",
        "alertLaunchImage",
        "attachments",
        "badge",
        "category",
        "date",
        "repeat",
        "sound",
        "timezone",
        "userInfo",
        "region",
        "summaryArgument",
        "summaryArgumentCount"
      ],
      "events": []
    },
    "UserNotificationAttachment": {
      "description": "Provide at least the property <code>identifier</code> and <code>url</code> property to identify a local\nimage, sound or video. If your media is invalid, the API will throw an error log and\nskip the invalid attachment.",
      "functions": [],
      "properties": [
        "identifier",
        "url",
        "options"
      ],
      "events": []
    },
    "LaunchOptionsType": {
      "description": "Dictionary object of parameters used to identify an incoming URL that is handled\nby the application.",
      "functions": [],
      "properties": [
        "source",
        "url"
      ],
      "events": []
    },
    "UserNotificationSettings": {
      "description": "Dictionary object of parameters used to register the application with local notifications using\nthe <a href=\"Titanium.App.iOS.registerUserNotificationSettings\">Titanium.App.iOS.registerUserNotificationSettings</a> method.\nTo retrieve the current notification settings, use the\n<a href=\"Titanium.App.iOS.UserNotificationCenter.requestUserNotificationSettings\">Titanium.App.iOS.UserNotificationCenter.requestUserNotificationSettings</a> method.",
      "functions": [],
      "properties": [
        "types",
        "categories"
      ],
      "events": []
    },
    "Ti.Blob": {
      "description": "A container for binary data.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "toString",
        "append",
        "imageAsCropped",
        "imageAsResized",
        "imageAsCompressed",
        "imageAsThumbnail",
        "imageWithAlpha",
        "imageWithRoundedCorner",
        "imageWithTransparentBorder",
        "toArrayBuffer",
        "arrayBuffer"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "file",
        "length",
        "text",
        "mimeType",
        "height",
        "uprightHeight",
        "width",
        "uprightWidth",
        "nativePath",
        "size",
        "rotation"
      ],
      "events": []
    },
    "Ti.BlobStream": {
      "description": "Wrapper around <a href=\"Titanium.Blob\">Titanium.Blob</a> that implements the <a href=\"Titanium.IOStream\">Titanium.IOStream</a> interface.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "read",
        "write",
        "isWritable",
        "isReadable",
        "close"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.Buffer": {
      "description": "Buffer is a mutable, resizable container for raw data.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "append",
        "insert",
        "copy",
        "clone",
        "fill",
        "clear",
        "release",
        "toString",
        "toBlob"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "length",
        "value",
        "type",
        "byteOrder"
      ],
      "events": []
    },
    "Ti.BufferStream": {
      "description": "Wrapper around <a href=\"Titanium.Buffer\">Titanium.Buffer</a> that implements the <a href=\"Titanium.IOStream\">Titanium.IOStream</a> interface.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "read",
        "write",
        "isWritable",
        "isReadable",
        "close"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.Calendar.Alert": {
      "description": "An object that represents a single alert for an event in an calendar.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "absoluteDate",
        "relativeOffset",
        "alarmTime",
        "begin",
        "end",
        "eventId",
        "id",
        "minutes",
        "state"
      ],
      "events": []
    },
    "Ti.Calendar.Attendee": {
      "description": "An object that represents a single attendee of an event.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "isOrganizer",
        "name",
        "email",
        "role",
        "type",
        "status"
      ],
      "events": []
    },
    "Ti.Calendar": {
      "description": "The Calendar module provides an API for accessing the native calendar functionality.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "getCalendarById",
        "hasCalendarPermissions",
        "requestCalendarPermissions"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "METHOD_ALERT",
        "METHOD_DEFAULT",
        "METHOD_EMAIL",
        "METHOD_SMS",
        "STATE_DISMISSED",
        "STATE_FIRED",
        "STATE_SCHEDULED",
        "STATUS_NONE",
        "STATUS_CANCELED",
        "STATUS_CONFIRMED",
        "STATUS_TENTATIVE",
        "AVAILABILITY_NOTSUPPORTED",
        "AVAILABILITY_BUSY",
        "AVAILABILITY_FREE",
        "AVAILABILITY_TENTATIVE",
        "AVAILABILITY_UNAVAILABLE",
        "AUTHORIZATION_AUTHORIZED",
        "AUTHORIZATION_DENIED",
        "AUTHORIZATION_RESTRICTED",
        "AUTHORIZATION_UNKNOWN",
        "SPAN_THISEVENT",
        "SPAN_FUTUREEVENTS",
        "RECURRENCEFREQUENCY_DAILY",
        "RECURRENCEFREQUENCY_WEEKLY",
        "RECURRENCEFREQUENCY_MONTHLY",
        "RECURRENCEFREQUENCY_YEARLY",
        "VISIBILITY_CONFIDENTIAL",
        "VISIBILITY_DEFAULT",
        "VISIBILITY_PRIVATE",
        "VISIBILITY_PUBLIC",
        "ATTENDEE_STATUS_UNKNOWN",
        "ATTENDEE_STATUS_PENDING",
        "ATTENDEE_STATUS_ACCEPTED",
        "ATTENDEE_STATUS_DECLINED",
        "ATTENDEE_STATUS_TENTATIVE",
        "ATTENDEE_STATUS_INVITED",
        "ATTENDEE_STATUS_NONE",
        "ATTENDEE_STATUS_DELEGATED",
        "ATTENDEE_STATUS_IN_PROCESS",
        "RELATIONSHIP_ATTENDEE",
        "RELATIONSHIP_NONE",
        "RELATIONSHIP_ORGANIZER",
        "RELATIONSHIP_PERFORMER",
        "RELATIONSHIP_SPEAKER",
        "RELATIONSHIP_UNKNOWN",
        "ATTENDEE_ROLE_UNKNOWN",
        "ATTENDEE_ROLE_OPTIONAL",
        "ATTENDEE_ROLE_REQUIRED",
        "ATTENDEE_ROLE_CHAIR",
        "ATTENDEE_ROLE_NON_PARTICIPANT",
        "ATTENDEE_TYPE_UNKNOWN",
        "ATTENDEE_TYPE_PERSON",
        "ATTENDEE_TYPE_ROOM",
        "ATTENDEE_TYPE_RESOURCE",
        "ATTENDEE_TYPE_NONE",
        "ATTENDEE_TYPE_REQUIRED",
        "ATTENDEE_TYPE_GROUP",
        "SOURCE_TYPE_LOCAL",
        "SOURCE_TYPE_EXCHANGE",
        "SOURCE_TYPE_CALDAV",
        "SOURCE_TYPE_MOBILEME",
        "SOURCE_TYPE_SUBSCRIBED",
        "SOURCE_TYPE_BIRTHDAYS",
        "calendarAuthorization",
        "allAlerts",
        "allCalendars",
        "allEditableCalendars",
        "selectableCalendars",
        "defaultCalendar"
      ],
      "events": [
        "change"
      ]
    },
    "EventsAuthorizationResponse": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "Ti.Calendar.Calendar": {
      "description": "An object that represents a single calendar.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createEvent",
        "createEvents",
        "getEventById",
        "getEventsById",
        "deleteEvents",
        "getEventsBetweenDates",
        "getEventsInDate|deprecated",
        "getEventsInMonth|deprecated",
        "getEventsInYear|deprecated"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "hidden",
        "id",
        "name",
        "selected",
        "sourceTitle",
        "sourceType",
        "sourceIdentifier"
      ],
      "events": []
    },
    "Ti.Calendar.Event": {
      "description": "An object that represents a single event in a calendar.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createAlert",
        "createReminder",
        "getExtendedProperty",
        "setExtendedProperty",
        "createRecurrenceRule",
        "save",
        "remove",
        "refresh",
        "addRecurrenceRule",
        "removeRecurrenceRule"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "alerts",
        "allDay",
        "begin",
        "notes",
        "description",
        "end",
        "extendedProperties",
        "hasAlarm",
        "id",
        "location",
        "reminders",
        "status",
        "availability",
        "isDetached",
        "title",
        "recurrenceRules",
        "visibility",
        "attendees"
      ],
      "events": []
    },
    "Ti.Calendar.RecurrenceRule": {
      "description": "An object that is used to describe the recurrence pattern for a recurring event.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "calendarID",
        "frequency",
        "interval",
        "daysOfTheWeek",
        "daysOfTheMonth",
        "monthsOfTheYear",
        "weeksOfTheYear",
        "daysOfTheYear",
        "setPositions",
        "end"
      ],
      "events": []
    },
    "daysOfTheWeekDictionary": {
      "description": "Dictionary containing <code>daysOfWeek</code> and <code>week</code>.",
      "functions": [],
      "properties": [
        "daysOfWeek",
        "week"
      ],
      "events": []
    },
    "recurrenceEndDictionary": {
      "description": "Dictionary containing either <code>endDate</code> or <code>occurrenceCount</code> property.",
      "functions": [],
      "properties": [
        "endDate",
        "occurrenceCount"
      ],
      "events": []
    },
    "Ti.Calendar.Reminder": {
      "description": "An object that represents a single reminder for an event in a calendar.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "id",
        "method",
        "minutes"
      ],
      "events": []
    },
    "Ti.Codec": {
      "description": "A module for translating between primitive types and raw byte streams.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "getNativeByteOrder",
        "encodeNumber",
        "decodeNumber",
        "encodeString",
        "decodeString"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "CHARSET_ASCII",
        "CHARSET_ISO_LATIN_1",
        "CHARSET_UTF8",
        "CHARSET_UTF16",
        "CHARSET_UTF16BE",
        "CHARSET_UTF16LE",
        "TYPE_BYTE",
        "TYPE_SHORT",
        "TYPE_INT",
        "TYPE_FLOAT",
        "TYPE_LONG",
        "TYPE_DOUBLE",
        "BIG_ENDIAN",
        "LITTLE_ENDIAN"
      ],
      "events": []
    },
    "EncodeNumberDict": {
      "description": "Named parameters for <a href=\"Titanium.Codec.encodeNumber\">Titanium.Codec.encodeNumber</a>.",
      "functions": [],
      "properties": [
        "source",
        "dest",
        "type",
        "position",
        "byteOrder"
      ],
      "events": []
    },
    "DecodeNumberDict": {
      "description": "Named parameters for <a href=\"Titanium.Codec.decodeNumber\">Titanium.Codec.decodeNumber</a>.",
      "functions": [],
      "properties": [
        "source",
        "type",
        "position",
        "byteOrder"
      ],
      "events": []
    },
    "EncodeStringDict": {
      "description": "Named parameters for <a href=\"Titanium.Codec.encodeString\">Titanium.Codec.encodeString</a>.",
      "functions": [],
      "properties": [
        "source",
        "dest",
        "destPosition",
        "sourcePosition",
        "sourceLength",
        "charset"
      ],
      "events": []
    },
    "DecodeStringDict": {
      "description": "Named parameters for <a href=\"Titanium.Codec.decodeString\">Titanium.Codec.decodeString</a>.",
      "functions": [],
      "properties": [
        "source",
        "position",
        "length",
        "charset"
      ],
      "events": []
    },
    "Ti.Contacts": {
      "description": "The top-level Contacts module, used for accessing and modifying the system contacts address book.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createGroup",
        "createPerson",
        "getAllGroups",
        "getAllPeople",
        "getGroupByIdentifier",
        "getPeopleWithName",
        "getPersonByIdentifier",
        "removeGroup",
        "removePerson",
        "save",
        "showContacts",
        "hasContactsPermissions",
        "requestContactsPermissions"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "includeNote",
        "CONTACTS_KIND_ORGANIZATION",
        "CONTACTS_KIND_PERSON",
        "CONTACTS_SORT_FIRST_NAME",
        "CONTACTS_SORT_LAST_NAME",
        "AUTHORIZATION_AUTHORIZED",
        "AUTHORIZATION_DENIED",
        "AUTHORIZATION_UNKNOWN",
        "contactsAuthorization"
      ],
      "events": [
        "reload"
      ]
    },
    "showContactsParams": {
      "description": "Dictionary of options for the <a href=\"Titanium.Contacts.showContacts\">Titanium.Contacts.showContacts</a> method.",
      "functions": [],
      "properties": [
        "animated",
        "fields",
        "cancel",
        "selectedPerson",
        "selectedProperty"
      ],
      "events": []
    },
    "ContactsAuthorizationResponse": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "Ti.Contacts.Group": {
      "description": "An object which represents a group in the system contacts address book.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "members",
        "remove",
        "sortedMembers"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "name",
        "identifier"
      ],
      "events": []
    },
    "Ti.Contacts.Person": {
      "description": "An object that represents a contact record for a person or organization in the system contacts\naddress book.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "address",
        "birthday",
        "alternateBirthday",
        "date",
        "department",
        "email",
        "firstName",
        "firstPhonetic",
        "fullName",
        "id",
        "identifier",
        "image",
        "instantMessage",
        "socialProfile",
        "jobTitle",
        "kind",
        "lastName",
        "lastPhonetic",
        "middleName",
        "middlePhonetic",
        "nickname",
        "note",
        "organization",
        "phone",
        "prefix",
        "recordId",
        "relatedNames",
        "suffix",
        "url"
      ],
      "events": []
    },
    "Ti.Database.DB": {
      "description": "The <code>Database</code> instance returned by <a href=\"Titanium.Database.open\">Titanium.Database.open</a> or <a href=\"Titanium.Database.install\">Titanium.Database.install</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "close",
        "execute",
        "executeAsync",
        "executeAll",
        "executeAllAsync",
        "remove"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "file",
        "lastInsertRowId",
        "name",
        "rowsAffected"
      ],
      "events": []
    },
    "BatchQueryError": {
      "description": "Simple <code>Error</code> instance thrown from the\n<a href=\"Titanium.Database.DB.executeAll\">executeAll</a> method in case of failure",
      "functions": [],
      "properties": [
        "index",
        "results"
      ],
      "events": []
    },
    "PossibleBatchQueryError": {
      "description": "Simple <code>Error</code> argument provided to the callback from the\n<a href=\"Titanium.Database.DB.executeAllAsync\">executeAllAsync</a> method in case of failure",
      "functions": [],
      "properties": [
        "index"
      ],
      "events": []
    },
    "Ti.Database": {
      "description": "The top-level <code>Database</code> module, used for creating and accessing the\nin-application SQLite database.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "install",
        "open"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "FIELD_TYPE_DOUBLE",
        "FIELD_TYPE_FLOAT",
        "FIELD_TYPE_INT",
        "FIELD_TYPE_STRING"
      ],
      "events": []
    },
    "Ti.Database.ResultSet": {
      "description": "The ResultSet instance returned by <a href=\"Titanium.Database.DB.execute\">Titanium.Database.DB.execute</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "close",
        "field",
        "fieldByName",
        "fieldName",
        "getFieldName",
        "isValidRow",
        "next"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "fieldCount",
        "rowCount",
        "validRow"
      ],
      "events": []
    },
    "ErrorResponse": {
      "description": "Properties used in any event or callback which needs to report a success or failure.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "SuccessResponse": {
      "description": "Properties used in any event or callback which needs to report a success.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "FailureResponse": {
      "description": "Properties used in any event or callback which needs to report a failure.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "Ti.Event": {
      "description": "The base type for all Titanium events.",
      "functions": [],
      "properties": [
        "source",
        "type",
        "bubbles",
        "cancelBubble"
      ],
      "events": []
    },
    "Ti.Filesystem.File": {
      "description": "Object representing a path to a file or directory in the device's persistent storage.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "append",
        "copy",
        "createDirectory",
        "createFile",
        "createTimestamp|deprecated",
        "createdAt",
        "deleteDirectory",
        "deleteFile",
        "exists",
        "extension",
        "getDirectoryListing",
        "getParent|deprecated",
        "getProtectionKey",
        "isDirectory",
        "isFile",
        "modificationTimestamp|deprecated",
        "modifiedAt",
        "move",
        "open",
        "read",
        "rename",
        "resolve",
        "setProtectionKey",
        "spaceAvailable",
        "write"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "executable",
        "hidden",
        "name",
        "nativePath",
        "parent",
        "readonly",
        "size",
        "remoteBackup",
        "symbolicLink",
        "writable"
      ],
      "events": []
    },
    "Ti.Filesystem.FileStream": {
      "description": "Wrapper around <code>Titanium.Filesystem.File</code> that implements the <code>Titanium.IOStream</code> interface",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "read",
        "write",
        "isWritable",
        "isReadable",
        "close"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.Filesystem": {
      "description": "The top level filesystem module, used to access files and directories on the device.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createTempDirectory",
        "createTempFile",
        "getFile",
        "getAsset",
        "isExternalStoragePresent",
        "hasStoragePermissions",
        "requestStoragePermissions",
        "openStream",
        "directoryForSuite"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "MODE_APPEND",
        "MODE_READ",
        "MODE_WRITE",
        "IOS_FILE_PROTECTION_NONE",
        "IOS_FILE_PROTECTION_COMPLETE",
        "IOS_FILE_PROTECTION_COMPLETE_UNLESS_OPEN",
        "IOS_FILE_PROTECTION_COMPLETE_UNTIL_FIRST_USER_AUTHENTICATION",
        "applicationCacheDirectory",
        "applicationDataDirectory",
        "applicationDirectory",
        "applicationSupportDirectory",
        "externalCacheDirectory",
        "externalStorageDirectory",
        "lineEnding",
        "resourcesDirectory",
        "resRawDirectory",
        "separator",
        "tempDirectory"
      ],
      "events": []
    },
    "RequestStorageAccessResult": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "Ti.Geolocation.Android": {
      "description": "Module for Android-specific geolocation functionality.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addLocationProvider",
        "removeLocationProvider",
        "addLocationRule",
        "removeLocationRule",
        "createLocationProvider",
        "createLocationRule"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "manualMode",
        "PROVIDER_GPS",
        "PROVIDER_NETWORK",
        "PROVIDER_PASSIVE"
      ],
      "events": []
    },
    "Ti.Geolocation.Android.LocationProvider": {
      "description": "Represents a source of location information, such as GPS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "name",
        "minUpdateTime",
        "minUpdateDistance"
      ],
      "events": []
    },
    "Ti.Geolocation.Android.LocationRule": {
      "description": "A location rule to filter the results returned by location providers.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "name",
        "accuracy",
        "minAge",
        "maxAge"
      ],
      "events": []
    },
    "Ti.Geolocation": {
      "description": "The top level Geolocation module. The Geolocation module is used for accessing device location based information.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "forwardGeocoder",
        "getCurrentHeading",
        "getCurrentPosition",
        "hasLocationPermissions",
        "requestLocationPermissions",
        "requestTemporaryFullAccuracyAuthorization",
        "reverseGeocoder"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ACCURACY_BEST",
        "ACCURACY_HUNDRED_METERS",
        "ACCURACY_KILOMETER",
        "ACCURACY_NEAREST_TEN_METERS",
        "ACCURACY_THREE_KILOMETERS",
        "ACCURACY_HIGH",
        "ACCURACY_BEST_FOR_NAVIGATION",
        "ACCURACY_LOW",
        "ACCURACY_REDUCED",
        "AUTHORIZATION_AUTHORIZED",
        "AUTHORIZATION_DENIED",
        "AUTHORIZATION_RESTRICTED",
        "AUTHORIZATION_UNKNOWN",
        "AUTHORIZATION_ALWAYS",
        "AUTHORIZATION_WHEN_IN_USE",
        "ERROR_DENIED",
        "ERROR_HEADING_FAILURE",
        "ERROR_LOCATION_UNKNOWN",
        "ERROR_NETWORK",
        "ERROR_REGION_MONITORING_DELAYED",
        "ERROR_REGION_MONITORING_DENIED",
        "ERROR_REGION_MONITORING_FAILURE",
        "ACTIVITYTYPE_OTHER",
        "ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION",
        "ACTIVITYTYPE_FITNESS",
        "ACTIVITYTYPE_OTHER_NAVIGATION",
        "ACCURACY_AUTHORIZATION_FULL",
        "ACCURACY_AUTHORIZATION_REDUCED",
        "accuracy",
        "distanceFilter",
        "hasCompass",
        "headingFilter",
        "headingTime",
        "locationServicesAuthorization",
        "locationServicesEnabled",
        "showCalibration",
        "showBackgroundLocationIndicator",
        "trackSignificantLocationChange",
        "allowsBackgroundLocationUpdates",
        "activityType",
        "locationAccuracyAuthorization",
        "pauseLocationUpdateAutomatically",
        "lastGeolocation"
      ],
      "events": [
        "calibration",
        "heading",
        "location",
        "locationupdatepaused",
        "locationupdateresumed",
        "authorization"
      ]
    },
    "LocationResults": {
      "description": "Argument passed to the <a href=\"Titanium.Geolocation.getCurrentPosition\">getCurrentPosition</a> callback.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "provider",
        "coords"
      ],
      "events": []
    },
    "LocationCoordinates": {
      "description": "Simple object holding the data for a location update.",
      "functions": [],
      "properties": [
        "latitude",
        "longitude",
        "altitude",
        "accuracy",
        "altitudeAccuracy",
        "heading",
        "speed",
        "timestamp",
        "floor"
      ],
      "events": []
    },
    "LocationCoordinatesFloor": {
      "description": "Simple object holding floor of the building on which the user is located.",
      "functions": [],
      "properties": [
        "level"
      ],
      "events": []
    },
    "ForwardGeocodeResponse": {
      "description": "Simple object returned in the callback from the\n<a href=\"Titanium.Geolocation.forwardGeocoder\">forwardGeocoder</a> method.\nNote that Android includes a number of extra fields.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "accuracy",
        "longitude",
        "latitude",
        "street",
        "street1",
        "city",
        "region1",
        "region2",
        "postalCode",
        "country",
        "countryCode",
        "country_code",
        "displayAddress",
        "address"
      ],
      "events": []
    },
    "HeadingResponse": {
      "description": "Argument passed to the <a href=\"Titanium.Geolocation.getCurrentHeading\">getCurrentHeading</a> callback.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "heading"
      ],
      "events": []
    },
    "HeadingData": {
      "description": "Simple object holding compass heading data.",
      "functions": [],
      "properties": [
        "accuracy",
        "magneticHeading",
        "trueHeading",
        "timestamp",
        "x",
        "y",
        "z"
      ],
      "events": []
    },
    "LocationProviderDict": {
      "description": "Simple object describing a location provider.",
      "functions": [],
      "properties": [
        "accuracy",
        "name",
        "power"
      ],
      "events": []
    },
    "ReverseGeocodeResponse": {
      "description": "Simple object returned in the callback from the\n<a href=\"Titanium.Geolocation.reverseGeocoder\">reverseGeocoder</a> method.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "places"
      ],
      "events": []
    },
    "GeocodedAddress": {
      "description": "Simple object representing a place, returned in the callback from the\n<a href=\"Titanium.Geolocation.reverseGeocoder\">reverseGeocoder</a> method.",
      "functions": [],
      "properties": [
        "street",
        "street1",
        "city",
        "region1",
        "region2",
        "postalCode",
        "state",
        "country",
        "countryCode",
        "longitude",
        "latitude",
        "address"
      ],
      "events": []
    },
    "LocationAuthorizationResponse": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "LocationAccuracyAuthorizationResponse": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "accuracyAuthorization"
      ],
      "events": []
    },
    "Ti.Gesture": {
      "description": "The Gesture module is responsible for high-level device gestures such as orientation changes\nand shake gestures.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "stopListener"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "portrait",
        "landscape",
        "orientation"
      ],
      "events": [
        "orientationchange",
        "shake"
      ]
    },
    "Ti.IOStream": {
      "description": "IOStream is the interface that all stream types implement.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "read",
        "write",
        "isWritable",
        "isReadable",
        "close"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.Locale": {
      "description": "The top level Locale module.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "formatTelephoneNumber",
        "getCurrencyCode",
        "getCurrencySymbol",
        "setLanguage",
        "getLocaleCurrencySymbol",
        "getString",
        "parseDecimal"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "currentCountry",
        "currentLanguage",
        "currentLocale"
      ],
      "events": [
        "change"
      ]
    },
    "Ti.Media.Android": {
      "description": "Android-specific media-related functionality.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "scanMediaFiles",
        "setSystemWallpaper"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "MediaScannerResponse": {
      "description": "Simple object passed to the <a href=\"Titanium.Media.Android.scanMediaFiles\">scanMediaFiles</a> callback.",
      "functions": [],
      "properties": [
        "path",
        "uri"
      ],
      "events": []
    },
    "Ti.Media.AudioPlayer": {
      "description": "An audio player object used for streaming audio to the device, and low-level control of the audio playback.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "getPaused|deprecated",
        "isPaused|deprecated",
        "getPlaying|deprecated",
        "isPlaying|deprecated",
        "pause",
        "play|deprecated",
        "setPaused|deprecated",
        "seekToTime",
        "release",
        "getAudioSessionId|deprecated",
        "start",
        "restart",
        "stateDescription",
        "stop"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "STATE_BUFFERING",
        "STATE_INITIALIZED",
        "STATE_PAUSED",
        "STATE_PLAYING",
        "STATE_STARTING",
        "STATE_STOPPED",
        "STATE_STOPPING",
        "STATE_WAITING_FOR_DATA",
        "STATE_WAITING_FOR_QUEUE",
        "AUDIO_TYPE_ALARM",
        "AUDIO_TYPE_SIGNALLING",
        "AUDIO_TYPE_MEDIA",
        "AUDIO_TYPE_NOTIFICATION",
        "AUDIO_TYPE_RING",
        "AUDIO_TYPE_VOICE",
        "allowBackground",
        "audioFocus",
        "audioSessionId",
        "audioType",
        "bitRate",
        "duration",
        "idle",
        "muted",
        "externalPlaybackActive",
        "allowsExternalPlayback",
        "rate",
        "paused",
        "playing",
        "progress",
        "state",
        "url",
        "volume",
        "waiting",
        "bufferSize",
        "time"
      ],
      "events": [
        "change",
        "complete",
        "metadata",
        "error",
        "progress",
        "seek"
      ]
    },
    "TiMetadataItemType": {
      "description": "An abstract type to represent a metadata item inside the <code>metadata</code> event (iOS only).",
      "functions": [],
      "properties": [
        "key",
        "keySpace",
        "value",
        "extraAttributes"
      ],
      "events": []
    },
    "Ti.Media.AudioRecorder": {
      "description": "An audio recorder object used for recording audio from the device microphone.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "pause",
        "resume",
        "start",
        "stop"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "compression",
        "format",
        "paused",
        "recording",
        "stopped"
      ],
      "events": []
    },
    "Ti.Media.Item": {
      "description": "A representation of a media item returned by <a href=\"Titanium.Media.openMusicLibrary\">openMusicLibrary</a> or <a href=\"Titanium.Media.queryMusicLibrary\">queryMusicLibrary</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "albumArtist",
        "albumArtistPersistentID",
        "albumPersistentID",
        "albumTitle",
        "albumTrackCount",
        "albumTrackNumber",
        "artist",
        "artwork",
        "assetURL",
        "beatsPerMinute",
        "bookmarkTime",
        "comments",
        "composer",
        "dateAdded",
        "discCount",
        "discNumber",
        "genre",
        "genrePersistentID",
        "hasProtectedAsset",
        "isCloudItem",
        "isCompilation",
        "isExplicit",
        "lastPlayedDate",
        "lyrics",
        "mediaType",
        "persistentID",
        "playCount",
        "playbackDuration",
        "playbackStoreID",
        "podcastTitle",
        "podcastPersistentID",
        "rating",
        "releaseDate",
        "skipCount",
        "title",
        "userGrouping"
      ],
      "events": []
    },
    "Ti.Media": {
      "description": "The top-level Media module.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "beep",
        "hideCamera",
        "hideMusicLibrary",
        "isMediaTypeSupported",
        "openMusicLibrary",
        "openPhotoGallery",
        "previewImage",
        "saveToPhotoGallery",
        "setOverrideAudioRoute",
        "showCamera",
        "hasMusicLibraryPermissions",
        "requestMusicLibraryPermissions",
        "queryMusicLibrary",
        "startMicrophoneMonitor",
        "stopMicrophoneMonitor",
        "takePicture",
        "startVideoCapture",
        "stopVideoCapture",
        "pauseVideoCapture",
        "resumeVideoCapture",
        "switchCamera",
        "hasCameraPermissions",
        "requestCameraPermissions",
        "hasPhotoGalleryPermissions",
        "requestPhotoGalleryPermissions",
        "takeScreenshot",
        "vibrate",
        "hasAudioPermissions|deprecated",
        "hasAudioRecorderPermissions",
        "requestAudioRecorderPermissions",
        "createAudioPlayer",
        "createAudioRecorder",
        "createSound",
        "createSystemAlert|deprecated",
        "createVideoPlayer"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "AUDIO_FILEFORMAT_3GP2",
        "AUDIO_FILEFORMAT_3GPP",
        "AUDIO_FILEFORMAT_AIFF",
        "AUDIO_FILEFORMAT_AMR",
        "AUDIO_FILEFORMAT_CAF",
        "AUDIO_FILEFORMAT_MP3",
        "AUDIO_FILEFORMAT_MP4",
        "AUDIO_FILEFORMAT_MP4A",
        "AUDIO_FILEFORMAT_WAVE",
        "AUDIO_FORMAT_AAC",
        "AUDIO_FORMAT_ALAW",
        "AUDIO_FORMAT_APPLE_LOSSLESS",
        "AUDIO_FORMAT_ILBC",
        "AUDIO_FORMAT_IMA4",
        "AUDIO_FORMAT_LINEAR_PCM",
        "AUDIO_FORMAT_ULAW",
        "AUDIO_SESSION_CATEGORY_AMBIENT",
        "AUDIO_SESSION_CATEGORY_PLAYBACK",
        "AUDIO_SESSION_CATEGORY_PLAY_AND_RECORD",
        "AUDIO_SESSION_CATEGORY_RECORD",
        "AUDIO_SESSION_CATEGORY_SOLO_AMBIENT",
        "AUDIO_SESSION_OVERRIDE_ROUTE_NONE",
        "AUDIO_SESSION_OVERRIDE_ROUTE_SPEAKER",
        "AUDIO_SESSION_PORT_LINEIN",
        "AUDIO_SESSION_PORT_BUILTINMIC",
        "AUDIO_SESSION_PORT_HEADSETMIC",
        "AUDIO_SESSION_PORT_LINEOUT",
        "AUDIO_SESSION_PORT_HEADPHONES",
        "AUDIO_SESSION_PORT_BLUETOOTHA2DP",
        "AUDIO_SESSION_PORT_BUILTINRECEIVER",
        "AUDIO_SESSION_PORT_BUILTINSPEAKER",
        "AUDIO_SESSION_PORT_HDMI",
        "AUDIO_SESSION_PORT_AIRPLAY",
        "AUDIO_SESSION_PORT_BLUETOOTHHFP",
        "AUDIO_SESSION_PORT_USBAUDIO",
        "AUDIO_SESSION_PORT_BLUETOOTHLE",
        "AUDIO_SESSION_PORT_CARAUDIO",
        "AUDIO_STATE_BUFFERING",
        "AUDIO_STATE_INITIALIZED",
        "AUDIO_STATE_PAUSED",
        "AUDIO_STATE_PLAYING",
        "AUDIO_STATE_STARTING",
        "AUDIO_STATE_STOPPED",
        "AUDIO_STATE_STOPPING",
        "AUDIO_STATE_WAITING_FOR_DATA",
        "VERTICAL_ALIGN_CENTER",
        "VERTICAL_ALIGN_TOP",
        "VERTICAL_ALIGN_BOTTOM",
        "ASPECT_RATIO_4_3",
        "ASPECT_RATIO_16_9",
        "CAMERA_FLASH_AUTO",
        "CAMERA_FLASH_OFF",
        "CAMERA_FLASH_ON",
        "CAMERA_FRONT",
        "CAMERA_REAR",
        "CAMERA_AUTHORIZATION_AUTHORIZED",
        "CAMERA_AUTHORIZATION_DENIED",
        "CAMERA_AUTHORIZATION_RESTRICTED",
        "CAMERA_AUTHORIZATION_UNKNOWN",
        "DEVICE_BUSY",
        "IMAGE_SCALING_AUTO",
        "IMAGE_SCALING_NONE",
        "IMAGE_SCALING_FILL",
        "IMAGE_SCALING_ASPECT_FILL",
        "IMAGE_SCALING_ASPECT_FIT",
        "MEDIA_TYPE_PHOTO",
        "MEDIA_TYPE_LIVEPHOTO",
        "MEDIA_TYPE_VIDEO",
        "MUSIC_MEDIA_TYPE_ALL",
        "MUSIC_MEDIA_TYPE_ANY_AUDIO",
        "MUSIC_MEDIA_TYPE_AUDIOBOOK",
        "MUSIC_MEDIA_TYPE_MUSIC",
        "MUSIC_MEDIA_TYPE_PODCAST",
        "MUSIC_MEDIA_GROUP_TITLE",
        "MUSIC_MEDIA_GROUP_ALBUM",
        "MUSIC_MEDIA_GROUP_ARTIST",
        "MUSIC_MEDIA_GROUP_ALBUM_ARTIST",
        "MUSIC_MEDIA_GROUP_COMPOSER",
        "MUSIC_MEDIA_GROUP_GENRE",
        "MUSIC_MEDIA_GROUP_PLAYLIST",
        "MUSIC_MEDIA_GROUP_PODCAST_TITLE",
        "MUSIC_PLAYER_REPEAT_ALL",
        "MUSIC_PLAYER_REPEAT_DEFAULT",
        "MUSIC_PLAYER_REPEAT_NONE",
        "MUSIC_PLAYER_REPEAT_ONE",
        "MUSIC_PLAYER_SHUFFLE_ALBUMS",
        "MUSIC_PLAYER_SHUFFLE_DEFAULT",
        "MUSIC_PLAYER_SHUFFLE_NONE",
        "MUSIC_PLAYER_SHUFFLE_SONGS",
        "MUSIC_PLAYER_STATE_INTERRUPTED",
        "MUSIC_PLAYER_STATE_PAUSED",
        "MUSIC_PLAYER_STATE_PLAYING",
        "MUSIC_PLAYER_STATE_SEEK_BACKWARD",
        "MUSIC_PLAYER_STATE_SEEK_FORWARD",
        "MUSIC_PLAYER_STATE_STOPPED",
        "NO_CAMERA",
        "NO_VIDEO",
        "QUALITY_SD",
        "QUALITY_HD",
        "QUALITY_FHD",
        "QUALITY_UHD",
        "QUALITY_HIGH",
        "QUALITY_LOW",
        "QUALITY_MEDIUM",
        "QUALITY_640x480",
        "QUALITY_IFRAME_1280x720",
        "QUALITY_IFRAME_960x540",
        "UNKNOWN_ERROR",
        "NO_FOCUS",
        "VIDEO_CONTROL_DEFAULT",
        "VIDEO_CONTROL_EMBEDDED",
        "VIDEO_CONTROL_FULLSCREEN",
        "VIDEO_CONTROL_HIDDEN",
        "VIDEO_CONTROL_NONE",
        "VIDEO_FINISH_REASON_PLAYBACK_ENDED",
        "VIDEO_FINISH_REASON_PLAYBACK_ERROR",
        "VIDEO_FINISH_REASON_USER_EXITED",
        "VIDEO_LOAD_STATE_FAILED",
        "VIDEO_LOAD_STATE_PLAYABLE",
        "VIDEO_LOAD_STATE_UNKNOWN",
        "VIDEO_MEDIA_TYPE_AUDIO",
        "VIDEO_MEDIA_TYPE_CLOSED_CAPTION",
        "VIDEO_MEDIA_TYPE_DEPTH_DATA",
        "VIDEO_MEDIA_TYPE_METADATA",
        "VIDEO_MEDIA_TYPE_METADATA_OBJECT",
        "VIDEO_MEDIA_TYPE_MUXED",
        "VIDEO_MEDIA_TYPE_SUBTITLE",
        "VIDEO_MEDIA_TYPE_TEXT",
        "VIDEO_MEDIA_TYPE_TIMECODE",
        "VIDEO_MEDIA_TYPE_VIDEO",
        "VIDEO_PLAYBACK_STATE_INTERRUPTED",
        "VIDEO_PLAYBACK_STATE_PAUSED",
        "VIDEO_PLAYBACK_STATE_PLAYING",
        "VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD",
        "VIDEO_PLAYBACK_STATE_SEEKING_FORWARD",
        "VIDEO_PLAYBACK_STATE_STOPPED",
        "VIDEO_REPEAT_MODE_NONE",
        "VIDEO_REPEAT_MODE_ONE",
        "VIDEO_SCALING_ASPECT_FILL",
        "VIDEO_SCALING_ASPECT_FIT",
        "VIDEO_SCALING_MODE_FILL",
        "VIDEO_SCALING_NONE",
        "VIDEO_SCALING_RESIZE",
        "VIDEO_SCALING_RESIZE_ASPECT",
        "VIDEO_SCALING_RESIZE_ASPECT_FILL",
        "VIDEO_TIME_OPTION_EXACT",
        "VIDEO_TIME_OPTION_NEAREST_KEYFRAME",
        "VIDEO_TIME_OPTION_CLOSEST_SYNC",
        "VIDEO_TIME_OPTION_NEXT_SYNC",
        "VIDEO_TIME_OPTION_PREVIOUS_SYNC",
        "appMusicPlayer",
        "audioPlaying",
        "audioSessionCategory",
        "availableCameras",
        "aspectRatio",
        "scalingMode",
        "verticalAlign",
        "useCameraX",
        "availableCameraMediaTypes",
        "availablePhotoGalleryMediaTypes",
        "availablePhotoMediaTypes",
        "averageMicrophonePower",
        "cameraFlashMode",
        "canRecord",
        "currentRoute",
        "isCameraSupported",
        "cameraAuthorization",
        "cameraOutputSizes",
        "maxZoomLevel",
        "minZoomLevel",
        "peakMicrophonePower",
        "systemMusicPlayer",
        "volume",
        "torch",
        "zoomLevel"
      ],
      "events": [
        "cameraready",
        "routechange",
        "volume"
      ]
    },
    "MusicLibraryOptionsType": {
      "description": "Simple object for specifying options to <a href=\"Titanium.Media.openMusicLibrary\">openMusicLibrary</a>.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "cancel",
        "autohide",
        "animated",
        "mediaTypes",
        "allowMultipleSelections"
      ],
      "events": []
    },
    "MusicLibraryResponseType": {
      "description": "Simple object passed to the <a href=\"Titanium.Media.openMusicLibrary\">openMusicLibrary</a>\n<code>success</code> callback function.",
      "functions": [],
      "properties": [
        "representative",
        "items",
        "types"
      ],
      "events": []
    },
    "MediaQueryType": {
      "description": "A specifier for a media library query. By default, filters perform an exact match.",
      "functions": [],
      "properties": [
        "grouping",
        "mediaType",
        "title",
        "albumTitle",
        "artist",
        "albumArtist",
        "genre",
        "composer",
        "isCompilation",
        "playCount",
        "persistentID",
        "albumPersistentID",
        "albumArtistPersistentID",
        "genrePersistentID",
        "composerPersistentID",
        "isCloudItem",
        "hasProtectedAsset",
        "podcastTitle",
        "podcastPersistentID"
      ],
      "events": []
    },
    "MediaQueryInfoType": {
      "description": "A full query descriptor for a filtering predicate.",
      "functions": [],
      "properties": [
        "value",
        "exact"
      ],
      "events": []
    },
    "CameraOptionsType": {
      "description": "Simple object for specifying options to <a href=\"Titanium.Media.showCamera\">showCamera</a>.",
      "functions": [],
      "properties": [
        "success",
        "open",
        "error",
        "cancel",
        "recording",
        "androidback",
        "autohide",
        "animated",
        "saveToPhotoGallery",
        "allowEditing",
        "zoomEnabled",
        "targetImageWidth",
        "targetImageHeight",
        "mediaTypes",
        "videoMaximumDuration",
        "videoQuality",
        "whichCamera",
        "showControls",
        "overlay",
        "transform",
        "inPopOver",
        "popoverView",
        "arrowDirection",
        "autorotate"
      ],
      "events": []
    },
    "PhotoGalleryOptionsType": {
      "description": "Simple object for specifying options to\n<a href=\"Titanium.Media.openPhotoGallery\">openPhotoGallery</a>.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "cancel",
        "autohide",
        "animated",
        "allowEditing",
        "mediaTypes",
        "popoverView",
        "arrowDirection",
        "allowMultiple",
        "maxImages",
        "pathOnly",
        "selectionLimit",
        "allowTranscoding"
      ],
      "events": []
    },
    "CameraMediaMultipleItemsType": {
      "description": "A media object from photo gallery when &lt;Titanium.Media.allowMultiple&gt; is <code>true</code>.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "images",
        "livePhotos",
        "videos"
      ],
      "events": []
    },
    "CameraMediaItemType": {
      "description": "A media object from the camera or photo gallery.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "media",
        "path",
        "mediaType",
        "cropRect",
        "previewRect",
        "livePhoto"
      ],
      "events": []
    },
    "CameraOpen": {
      "description": "Parameters of the open callback",
      "functions": [],
      "properties": [
        "width",
        "height"
      ],
      "events": []
    },
    "PreviewImageOptions": {
      "description": "Options passed to <a href=\"Titanium.Media.previewImage\">Titanium.Media.previewImage</a>.",
      "functions": [],
      "properties": [
        "image",
        "success",
        "error"
      ],
      "events": []
    },
    "PreviewImageError": {
      "description": "The parameter passed to the <code>error</code> callback of <a href=\"PreviewImageOptions\">PreviewImageOptions</a>.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "message"
      ],
      "events": []
    },
    "ScreenshotResult": {
      "description": "The parameter passed to the <a href=\"Titanium.Media.takeScreenshot\">Titanium.Media.takeScreenshot</a> callback.",
      "functions": [],
      "properties": [
        "media"
      ],
      "events": []
    },
    "MediaAuthorizationResponse": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "RequestCameraAccessResult": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "RequestMusicLibraryAccessResult": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "RequestPhotoGalleryAccessResult": {
      "description": "Argument passed to the callback when a request finishes successfully or erroneously.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "RouteDescription": {
      "description": "An Object describing the current audio route.",
      "functions": [],
      "properties": [
        "inputs",
        "outputs"
      ],
      "events": []
    },
    "CameraRecordingCallback": {
      "description": "Infos about the current video recording",
      "functions": [],
      "properties": [
        "duration",
        "size"
      ],
      "events": []
    },
    "Ti.Media.MusicPlayer": {
      "description": "This object represents a music controller.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "pause",
        "play",
        "seekBackward",
        "seekForward",
        "setQueue",
        "skipToBeginning",
        "skipToNext",
        "skipToPrevious",
        "stop",
        "stopSeeking"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "currentPlaybackTime",
        "nowPlaying",
        "playbackState",
        "repeatMode",
        "shuffleMode"
      ],
      "events": [
        "playingchange",
        "statechange"
      ]
    },
    "Ti.Media.Sound": {
      "description": "An object for playing basic audio resources.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "isLooping|deprecated",
        "isPaused|deprecated",
        "isPlaying|deprecated",
        "pause",
        "play",
        "release",
        "reset",
        "setLooping|deprecated",
        "setPaused|deprecated",
        "stop"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "STATE_BUFFERING",
        "STATE_INITIALIZED",
        "STATE_PAUSED",
        "STATE_PLAYING",
        "STATE_STARTING",
        "STATE_STOPPED",
        "STATE_STOPPING",
        "STATE_WAITING_FOR_DATA",
        "STATE_WAITING_FOR_QUEUE",
        "AUDIO_TYPE_ALARM",
        "AUDIO_TYPE_SIGNALLING",
        "AUDIO_TYPE_MEDIA",
        "AUDIO_TYPE_NOTIFICATION",
        "AUDIO_TYPE_RING",
        "AUDIO_TYPE_VOICE",
        "allowBackground",
        "audioType",
        "duration",
        "looping",
        "paused",
        "playing",
        "time",
        "url",
        "volume"
      ],
      "events": [
        "change",
        "complete",
        "error",
        "interrupted",
        "resume"
      ]
    },
    "Ti.Media.VideoPlayer": {
      "description": "A native control for playing videos.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "cancelAllThumbnailImageRequests",
        "pause",
        "play",
        "release",
        "requestThumbnailImagesAtTimes",
        "stop"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "allowsAirPlay",
        "autoplay",
        "autoHide",
        "backgroundView",
        "currentPlaybackTime",
        "duration",
        "endPlaybackTime",
        "fairPlayConfiguration",
        "fullscreen",
        "initialPlaybackTime",
        "loadState",
        "media",
        "mediaControlStyle",
        "mediaTypes",
        "moviePlayerStatus",
        "naturalSize",
        "speed",
        "overlayView",
        "pictureInPictureEnabled",
        "playableDuration",
        "playbackState",
        "playing",
        "repeatMode",
        "scalingMode",
        "showsControls",
        "url",
        "volume"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "keypressed",
        "longpress",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "complete",
        "durationavailable",
        "error",
        "load",
        "loadstate",
        "naturalsizeavailable",
        "playbackstate",
        "playing",
        "preload",
        "resize"
      ]
    },
    "ThumbnailResponse": {
      "description": "Simple object passed to the thumbnail callback in response to the\n<a href=\"Titanium.Media.VideoPlayer.requestThumbnailImagesAtTimes\">requestThumbnailImagesAtTimes</a>\nmethod.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "image",
        "time"
      ],
      "events": []
    },
    "MovieSize": {
      "description": "Simple object used to describe the size of a movie.",
      "functions": [],
      "properties": [
        "width",
        "height"
      ],
      "events": []
    },
    "FairPlayConfiguration": {
      "description": "An object representing a FairPlay Streaming configuration.",
      "functions": [],
      "properties": [
        "licenseURL",
        "certificate"
      ],
      "events": []
    },
    "Ti.Network.BonjourBrowser": {
      "description": "A browser for the discovery and retrieval of Bonjour services available on the network.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "search",
        "stopSearch"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "domain",
        "isSearching",
        "serviceType"
      ],
      "events": [
        "updatedservices"
      ]
    },
    "Ti.Network.BonjourService": {
      "description": "Describes a service on the network which is published by Bonjour.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "publish",
        "resolve",
        "stop"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "domain",
        "isLocal",
        "name",
        "socket",
        "type"
      ],
      "events": [
        "publish",
        "resolve",
        "stop"
      ]
    },
    "Ti.Network.Cookie": {
      "description": "Cookie object used to manage the system cookie store and HTTP client cookie store.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "isValid"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "comment",
        "domain",
        "expiryDate",
        "maxAge",
        "httponly",
        "name",
        "originalUrl",
        "path",
        "secure",
        "value",
        "version"
      ],
      "events": []
    },
    "Ti.Network.HTTPClient": {
      "description": "HTTP client object that (mostly) implements the XMLHttpRequest specification.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "abort",
        "clearCookies",
        "getAllResponseHeaders",
        "getResponseHeader",
        "open",
        "send",
        "setRequestHeader",
        "setTimeout|deprecated"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "DONE",
        "HEADERS_RECEIVED",
        "LOADING",
        "OPENED",
        "UNSENT",
        "allResponseHeaders",
        "responseHeaders",
        "autoEncodeUrl",
        "autoRedirect",
        "connected",
        "connectionType",
        "domain",
        "enableKeepAlive",
        "file",
        "location",
        "ondatastream",
        "onerror",
        "onload",
        "onreadystatechange",
        "onsendstream",
        "password",
        "readyState",
        "responseData",
        "responseText",
        "responseDictionary",
        "responseXML",
        "securityManager",
        "status",
        "statusText",
        "timeout",
        "timeoutForResource",
        "waitsForConnectivity",
        "username",
        "validatesSecureCertificate",
        "tlsVersion",
        "cache"
      ],
      "events": []
    },
    "SecurityManagerProtocol": {
      "description": "The protocol that the <a href=\"Titanium.Network.HTTPClient.securityManager\">Titanium.Network.HTTPClient.securityManager</a> must implement.",
      "functions": [
        "willHandleURL",
        "connectionDelegateForUrl",
        "getTrustManagers",
        "getKeyManagers"
      ],
      "properties": [],
      "events": []
    },
    "APSConnectionDelegate": {
      "description": "An extension of the <a href=\"https://developer.apple.com/library/mac/documentation/Foundation/Reference/NSURLConnectionDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/intf/NSURLConnectionDelegate\">NSURLConnectionDelegate</a> protocol to allow users to participate in authentication and resource management for this HTTPClient.",
      "functions": [],
      "properties": [],
      "events": []
    },
    "ReadyStatePayload": {
      "description": "An Object describing the current ready state. See <a href=\"Titanium.Network.HTTPClient.onreadystatechange\">onreadystatechange</a> for more information.",
      "functions": [],
      "properties": [
        "readyState"
      ],
      "events": []
    },
    "Ti.Network": {
      "description": "The top level network module.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addHTTPCookie",
        "addSystemCookie",
        "createBonjourBrowser",
        "createBonjourService",
        "decodeURIComponent",
        "encodeURIComponent",
        "getHTTPCookies",
        "getHTTPCookiesForDomain",
        "getSystemCookies",
        "removeAllHTTPCookies",
        "removeAllSystemCookies",
        "removeHTTPCookie",
        "removeHTTPCookiesForDomain",
        "removeSystemCookie",
        "registerForPushNotifications",
        "unregisterForPushNotifications",
        "createCookie",
        "createHTTPClient",
        "createTCPSocket|deprecated"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "NETWORK_LAN",
        "NETWORK_MOBILE",
        "NETWORK_NONE",
        "NETWORK_UNKNOWN",
        "NETWORK_WIFI",
        "NOTIFICATION_TYPE_ALERT",
        "NOTIFICATION_TYPE_BADGE",
        "NOTIFICATION_TYPE_SOUND",
        "NOTIFICATION_TYPE_NEWSSTAND",
        "TLS_VERSION_1_0",
        "TLS_VERSION_1_1",
        "TLS_VERSION_1_2",
        "TLS_VERSION_1_3",
        "PROGRESS_UNKNOWN",
        "allHTTPCookies",
        "networkType",
        "networkTypeName",
        "online",
        "remoteDeviceUUID",
        "remoteNotificationTypes",
        "remoteNotificationsEnabled"
      ],
      "events": [
        "change"
      ]
    },
    "PushNotificationConfig": {
      "description": "Simple object for specifying push notification options to\n<a href=\"Titanium.Network.registerForPushNotifications\">registerForPushNotifications</a>.",
      "functions": [],
      "properties": [
        "types",
        "success",
        "error",
        "callback"
      ],
      "events": []
    },
    "PushNotificationSuccessArg": {
      "description": "A simple object passed to the\n<a href=\"Titanium.Network.registerForPushNotifications\">registerForPushNotifications</a> success callback.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "type",
        "deviceToken"
      ],
      "events": []
    },
    "PushNotificationErrorArg": {
      "description": "A simple object passed to the\n<a href=\"Titanium.Network.registerForPushNotifications\">registerForPushNotifications</a> error callback.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "type"
      ],
      "events": []
    },
    "PushNotificationData": {
      "description": "A simple object representing a push notification.",
      "functions": [],
      "properties": [
        "data",
        "inBackground"
      ],
      "events": []
    },
    "Ti.Network.Socket": {
      "description": "Socket module, used for creating sockets.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createTCP"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "INITIALIZED",
        "CONNECTED",
        "LISTENING",
        "CLOSED",
        "ERROR"
      ],
      "events": []
    },
    "Ti.Network.Socket.TCP": {
      "description": "TCP socket that implements the <code>Titanium.IOStream</code> interface.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "read",
        "write",
        "isWritable",
        "isReadable",
        "close",
        "connect",
        "listen",
        "accept"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "host",
        "port",
        "secure",
        "listenQueueSize",
        "timeout",
        "connected",
        "error",
        "accepted",
        "state"
      ],
      "events": []
    },
    "ConnectedCallbackArgs": {
      "description": "Argument object passed to the <a href=\"Titanium.Network.Socket.TCP.connected\">connected</a> callback when the socket connects.",
      "functions": [],
      "properties": [
        "socket"
      ],
      "events": []
    },
    "ErrorCallbackArgs": {
      "description": "Object passed to the error callback when the socket enters the <a href=\"Titanium.Network.Socket.ERROR\">ERROR</a> state.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "socket"
      ],
      "events": []
    },
    "AcceptedCallbackArgs": {
      "description": "Argument object passed to the <a href=\"Titanium.Network.Socket.TCP.accepted\">accepted</a>\ncallback when a listener accepts a connection.",
      "functions": [],
      "properties": [
        "socket",
        "inbound"
      ],
      "events": []
    },
    "AcceptDict": {
      "description": "Options object for the <a href=\"Titanium.Network.Socket.TCP.accept\">accept</a> method.",
      "functions": [],
      "properties": [
        "timeout",
        "error"
      ],
      "events": []
    },
    "Ti.Platform.Android": {
      "description": "The Android-specific Platform module, used to access the device's platform-related functionality.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "API_LEVEL",
        "PHYSICAL_SIZE_CATEGORY_LARGE",
        "PHYSICAL_SIZE_CATEGORY_NORMAL",
        "PHYSICAL_SIZE_CATEGORY_SMALL",
        "PHYSICAL_SIZE_CATEGORY_UNDEFINED",
        "PHYSICAL_SIZE_CATEGORY_XLARGE",
        "physicalSizeCategory"
      ],
      "events": []
    },
    "Ti.Platform.DisplayCaps": {
      "description": "The Display Caps object returned by the <a href=\"Titanium.Platform.displayCaps\">Titanium.Platform.displayCaps</a> property.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "density",
        "dpi",
        "logicalDensityFactor",
        "platformHeight",
        "platformWidth",
        "xdpi",
        "ydpi"
      ],
      "events": []
    },
    "Ti.Platform": {
      "description": "The top-level Platform module.  The Platform module is used to access the device's platform-related\nfunctionality.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "canOpenURL",
        "cpus",
        "createUUID",
        "openURL",
        "is24HourTimeFormat"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "BATTERY_STATE_CHARGING",
        "BATTERY_STATE_FULL",
        "BATTERY_STATE_UNKNOWN",
        "BATTERY_STATE_UNPLUGGED",
        "address",
        "architecture",
        "availableMemory",
        "batteryLevel",
        "batteryMonitoring",
        "batteryState",
        "displayCaps",
        "id",
        "identifierForVendor",
        "identifierForAdvertising",
        "isAdvertisingTrackingEnabled",
        "isTranslatedBinaryOnAppleSilicon",
        "locale",
        "macaddress",
        "manufacturer",
        "model",
        "name",
        "netmask",
        "osname",
        "ostype",
        "processorCount",
        "runtime",
        "totalMemory",
        "uptime",
        "username",
        "version",
        "versionMajor",
        "versionMinor",
        "versionPatch"
      ],
      "events": [
        "battery"
      ]
    },
    "CPU": {
      "description": "Simple object holding the data for a logical cpu.",
      "functions": [],
      "properties": [
        "model",
        "speed",
        "times"
      ],
      "events": []
    },
    "CPUTimes": {
      "description": "Simple object holding the data for a logical cpu execution times.",
      "functions": [],
      "properties": [
        "user",
        "nice",
        "sys",
        "idle",
        "irq"
      ],
      "events": []
    },
    "OpenURLOptions": {
      "description": "The optional options to pass to the URL handling (iOS 10+). Pass a\ndictionary with one or more of the following string-keys:\n* <code>UIApplicationOpenURLOptionsSourceApplicationKey</code> (String value)\n* <code>UIApplicationOpenURLOptionsAnnotationKey</code> (Array value)\n* <code>UIApplicationOpenURLOptionsOpenInPlaceKey</code> (Boolean value)\n* <code>UIApplicationOpenURLOptionUniversalLinksOnly</code> (Boolean value)\nRead more about the available keys in the <a href=\"https://developer.apple.com/documentation/uikit/uiapplicationopenurloptionskey?language=objc\">Apple documentation</a>.",
      "functions": [],
      "properties": [
        "UIApplicationOpenURLOptionsSourceApplicationKey",
        "UIApplicationOpenURLOptionsAnnotationKey",
        "UIApplicationOpenURLOptionsOpenInPlaceKey",
        "UIApplicationOpenURLOptionUniversalLinksOnly"
      ],
      "events": []
    },
    "Ti.Stream": {
      "description": "Stream module containing stream utility methods.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createStream",
        "read",
        "readAll",
        "write",
        "writeStream",
        "pump"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "MODE_READ",
        "MODE_WRITE",
        "MODE_APPEND"
      ],
      "events": []
    },
    "CreateStreamArgs": {
      "description": "Argument passed to <a href=\"Titanium.Stream.createStream\">createStream</a>.",
      "functions": [],
      "properties": [
        "source",
        "mode"
      ],
      "events": []
    },
    "ReadCallbackArgs": {
      "description": "Argument passed to the read callback when an asynchronous <a href=\"Titanium.Stream.read\">read</a> operation\nfinishes.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "source",
        "bytesProcessed"
      ],
      "events": []
    },
    "WriteCallbackArgs": {
      "description": "Argument passed to the write callback when an asynchronous\n<a href=\"Titanium.Stream.write\">write</a> operation\nfinishes.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "source",
        "bytesProcessed"
      ],
      "events": []
    },
    "WriteStreamCallbackArgs": {
      "description": "Argument passed to the callback when an asynchronous\n<a href=\"Titanium.Stream.writeStream\">writeStream</a> operation finishes.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "fromStream",
        "toStream",
        "bytesProcessed"
      ],
      "events": []
    },
    "PumpCallbackArgs": {
      "description": "Argument passed to the callback each time the\n<a href=\"Titanium.Stream.pump\">pump</a> operation has new data to deliver.",
      "functions": [],
      "properties": [
        "success",
        "error",
        "code",
        "source",
        "buffer",
        "bytesProcessed",
        "totalBytesProcessed"
      ],
      "events": []
    },
    "Titanium": {
      "description": "The top-level Titanium module.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createBuffer"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "userAgent",
        "version",
        "buildDate",
        "buildHash"
      ],
      "events": []
    },
    "CreateBufferArgs": {
      "description": "Arguments to be passed to createBuffer",
      "functions": [],
      "properties": [
        "value",
        "length",
        "type",
        "byteOrder"
      ],
      "events": []
    },
    "Ti.UI.ActivityIndicator": {
      "description": "An activity indicator that lets the user know an action is taking place.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "bottom",
        "elevation",
        "filterTouchesWhenObscured",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "previewContext",
        "right",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tooltip",
        "top",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "width",
        "color",
        "font",
        "indicatorColor",
        "message",
        "messageid",
        "style"
      ],
      "events": [
        "rotate"
      ]
    },
    "Ti.UI.ActivityIndicatorStyle": {
      "description": "A set of constants for the styles available for <a href=\"Titanium.UI.ActivityIndicator\">Titanium.UI.ActivityIndicator</a> objects.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "BIG",
        "DARK",
        "BIG_DARK",
        "PLAIN"
      ],
      "events": []
    },
    "Ti.UI.AlertDialog": {
      "description": "An alert dialog is a modal view that includes an optional title, a message and buttons,\npositioned in the middle of the display.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "replaceAt",
        "show",
        "stopAnimation",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "previewContext",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tintColor",
        "tooltip",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "androidView",
        "buttonNames",
        "cancel",
        "buttonClickRequired",
        "canceledOnTouchOutside",
        "destructive",
        "hintText",
        "hinttextid",
        "keyboardType",
        "keyboardAppearance",
        "loginPlaceholder",
        "loginHintText",
        "loginhinttextid",
        "loginReturnKeyType",
        "loginValue",
        "loginKeyboardType",
        "message",
        "messageid",
        "ok",
        "okid",
        "passwordPlaceholder",
        "passwordHintText",
        "passwordhinttextid",
        "passwordReturnKeyType",
        "passwordValue",
        "passwordKeyboardType",
        "placeholder",
        "persistent",
        "preferred",
        "returnKeyType",
        "style",
        "severity",
        "title",
        "titleid",
        "value"
      ],
      "events": [
        "click",
        "rotate"
      ]
    },
    "Ti.UI.Android": {
      "description": "The Android-specific UI capabilities. All properties, methods and events in this namespace will\nonly work on Android systems.\n<h4>Drawer Layout</h4>\nThe drawer-layout components acts as a top-level container for window content that allows\nfor interactive &quot;drawer&quot; views to be pulled out from one or both vertical edges of the window.\nIt is represented by a <code>centerView</code> and optional <code>leftView</code> and <code>rightView</code> components that\ncan be swiped in and out with additional configuration and transitions. Learn more about\ndrawer-layouts in it's dedicated <a href=\"Titanium.UI.Android.DrawerLayout\">Titanium.UI.Android.DrawerLayout</a> docs.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "harmonizedColor",
        "moveToBackground",
        "hideSoftKeyboard",
        "openPreferences",
        "getColorResource",
        "createCardView",
        "createCollapseToolbar",
        "createDrawerLayout",
        "createFloatingActionButton",
        "createProgressIndicator",
        "createSearchView",
        "createSnackbar"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "FLAG_LAYOUT_NO_LIMITS",
        "FLAG_TRANSLUCENT_NAVIGATION",
        "FLAG_TRANSLUCENT_STATUS",
        "GRAVITY_AXIS_CLIP",
        "GRAVITY_AXIS_PULL_AFTER",
        "GRAVITY_AXIS_PULL_BEFORE",
        "GRAVITY_AXIS_SPECIFIED",
        "GRAVITY_AXIS_X_SHIFT",
        "GRAVITY_AXIS_Y_SHIFT",
        "GRAVITY_BOTTOM",
        "GRAVITY_CENTER",
        "GRAVITY_CENTER_HORIZONTAL",
        "GRAVITY_CENTER_VERTICAL",
        "GRAVITY_CLIP_HORIZONTAL",
        "GRAVITY_CLIP_VERTICAL",
        "GRAVITY_DISPLAY_CLIP_HORIZONTAL",
        "GRAVITY_DISPLAY_CLIP_VERTICAL",
        "GRAVITY_END",
        "GRAVITY_FILL",
        "GRAVITY_FILL_HORIZONTAL",
        "GRAVITY_FILL_VERTICAL",
        "GRAVITY_HORIZONTAL_GRAVITY_MASK",
        "GRAVITY_LEFT",
        "GRAVITY_NO_GRAVITY",
        "GRAVITY_RELATIVE_HORIZONTAL_GRAVITY_MASK",
        "GRAVITY_RELATIVE_LAYOUT_DIRECTION",
        "GRAVITY_RIGHT",
        "GRAVITY_START",
        "GRAVITY_TOP",
        "GRAVITY_VERTICAL_GRAVITY_MASK",
        "OVER_SCROLL_ALWAYS",
        "OVER_SCROLL_IF_CONTENT_SCROLLS",
        "OVER_SCROLL_NEVER",
        "PIXEL_FORMAT_A_8",
        "PIXEL_FORMAT_LA_88",
        "PIXEL_FORMAT_L_8",
        "PIXEL_FORMAT_OPAQUE",
        "PIXEL_FORMAT_RGBA_4444",
        "PIXEL_FORMAT_RGBA_5551",
        "PIXEL_FORMAT_RGBA_8888",
        "PIXEL_FORMAT_RGBX_8888",
        "PIXEL_FORMAT_RGB_332",
        "PIXEL_FORMAT_RGB_565",
        "PIXEL_FORMAT_RGB_888",
        "PIXEL_FORMAT_TRANSLUCENT",
        "PIXEL_FORMAT_TRANSPARENT",
        "PIXEL_FORMAT_UNKNOWN",
        "PROGRESS_INDICATOR_DIALOG",
        "PROGRESS_INDICATOR_STATUS_BAR",
        "PROGRESS_INDICATOR_INDETERMINANT",
        "PROGRESS_INDICATOR_DETERMINANT",
        "SOFT_INPUT_ADJUST_PAN",
        "SOFT_INPUT_ADJUST_RESIZE",
        "SOFT_INPUT_ADJUST_NOTHING",
        "SOFT_INPUT_ADJUST_UNSPECIFIED",
        "SOFT_INPUT_STATE_ALWAYS_HIDDEN",
        "SOFT_INPUT_STATE_ALWAYS_VISIBLE",
        "SOFT_INPUT_STATE_HIDDEN",
        "SOFT_INPUT_STATE_UNSPECIFIED",
        "SOFT_INPUT_STATE_VISIBLE",
        "SOFT_KEYBOARD_DEFAULT_ON_FOCUS",
        "SOFT_KEYBOARD_HIDE_ON_FOCUS",
        "SOFT_KEYBOARD_SHOW_ON_FOCUS",
        "STATUS_BAR_LIGHT",
        "SWITCH_STYLE_CHECKBOX",
        "SWITCH_STYLE_TOGGLEBUTTON",
        "SWITCH_STYLE_SWITCH",
        "WEBVIEW_PLUGINS_OFF",
        "WEBVIEW_PLUGINS_ON",
        "WEBVIEW_PLUGINS_ON_DEMAND",
        "WEBVIEW_LOAD_DEFAULT",
        "WEBVIEW_LOAD_NO_CACHE",
        "WEBVIEW_LOAD_CACHE_ONLY",
        "WEBVIEW_LOAD_CACHE_ELSE_NETWORK",
        "TRANSITION_EXPLODE",
        "TRANSITION_FADE_IN",
        "TRANSITION_FADE_OUT",
        "TRANSITION_SLIDE_TOP",
        "TRANSITION_SLIDE_RIGHT",
        "TRANSITION_SLIDE_BOTTOM",
        "TRANSITION_SLIDE_LEFT",
        "TRANSITION_CHANGE_BOUNDS",
        "TRANSITION_CHANGE_CLIP_BOUNDS",
        "TRANSITION_CHANGE_TRANSFORM",
        "TRANSITION_CHANGE_IMAGE_TRANSFORM",
        "TRANSITION_NONE",
        "TABS_STYLE_DEFAULT",
        "TABS_STYLE_BOTTOM_NAVIGATION",
        "TAB_MODE_FIXED",
        "TAB_MODE_SCROLLABLE",
        "SCROLL_FLAG_ENTER_ALWAYS",
        "SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED",
        "SCROLL_FLAG_EXIT_UNTIL_COLLAPSED",
        "SCROLL_FLAG_NO_SCROLL",
        "SCROLL_FLAG_SCROLL",
        "SCROLL_FLAG_SNAP",
        "SCROLL_FLAG_SNAP_MARGINS",
        "WEBVIEW_SCROLLBARS_DEFAULT",
        "WEBVIEW_SCROLLBARS_HIDE_VERTICAL",
        "WEBVIEW_SCROLLBARS_HIDE_HORIZONTAL",
        "WEBVIEW_SCROLLBARS_HIDE_ALL"
      ],
      "events": []
    },
    "Ti.UI.Android.CardView": {
      "description": "CardView provides a layout container with rounded corners and a shadow indicating the view is elevated.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "viewShadowColor",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "maxElevation",
        "preventCornerOverlap",
        "useCompatPadding",
        "padding",
        "paddingBottom",
        "paddingLeft",
        "paddingRight",
        "paddingTop"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap"
      ]
    },
    "Ti.UI.Android.CollapseToolbar": {
      "description": "A collapsing toolbar layout.",
      "functions": [
        "stopAnimation"
      ],
      "properties": [
        "apiName",
        "accessibilityDisableLongPress",
        "height",
        "id",
        "tooltip",
        "top",
        "barColor",
        "contentScrimColor",
        "image",
        "imageHeight",
        "title",
        "color",
        "navigationIconColor",
        "contentView",
        "displayHomeAsUp",
        "flags",
        "onHomeIconItemSelected"
      ],
      "events": [
        "rotate"
      ]
    },
    "Ti.UI.Android.DrawerLayout": {
      "description": "A panel that displays the app's main navigation options on the left edge of the screen.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "toggleLeft",
        "openLeft",
        "closeLeft",
        "toggleRight",
        "openRight",
        "closeRight",
        "interceptTouchEvent"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "viewShadowColor",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "LOCK_MODE_LOCKED_CLOSED",
        "LOCK_MODE_LOCKED_OPEN",
        "LOCK_MODE_UNDEFINED",
        "LOCK_MODE_UNLOCKED",
        "isLeftOpen",
        "isRightOpen",
        "isLeftVisible",
        "isRightVisible",
        "leftWidth",
        "rightWidth",
        "leftView",
        "rightView",
        "centerView",
        "drawerIndicatorEnabled",
        "drawerLockMode",
        "leftDrawerLockMode",
        "rightDrawerLockMode",
        "toolbarEnabled",
        "toolbar"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "open",
        "close",
        "change",
        "slide"
      ]
    },
    "Ti.UI.Android.FloatingActionButton": {
      "description": "A floating action button (FAB) is a circular button that triggers the primary action in your app's UI.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "hide",
        "insertAt",
        "replaceAt",
        "show",
        "stopAnimation",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "backgroundColor",
        "bottom",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "id",
        "left",
        "right",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tooltip",
        "top",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "visible",
        "customSize",
        "maxImageSize",
        "image",
        "iconSize"
      ],
      "events": [
        "click",
        "rotate"
      ]
    },
    "Ti.UI.Android.ProgressIndicator": {
      "description": "A progress dialog or a horizontal progress bar in the title of the window.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "hide",
        "insertAt",
        "replaceAt",
        "show",
        "stopAnimation",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "id",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tooltip",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "cancelable",
        "canceledOnTouchOutside",
        "message",
        "messageid",
        "min",
        "max",
        "location",
        "type"
      ],
      "events": [
        "rotate",
        "cancel"
      ]
    },
    "Ti.UI.Android.SearchView": {
      "description": "A specialized text field for entering search text.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "blur",
        "focus"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "viewShadowColor",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "color",
        "hintText",
        "hintTextColor",
        "value",
        "iconified",
        "iconifiedByDefault",
        "submitEnabled"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "blur",
        "cancel",
        "change",
        "submit"
      ]
    },
    "Ti.UI.Android.Snackbar": {
      "description": "Snackbars provide brief messages about app processes at the bottom of the screen.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "hide",
        "insertAt",
        "replaceAt",
        "show",
        "stopAnimation",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "id",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tooltip",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "LENGTH_SHORT",
        "LENGTH_LONG",
        "LENGTH_INDEFINITE",
        "length",
        "action",
        "message"
      ],
      "events": [
        "click",
        "rotate"
      ]
    },
    "AnimatedOptions": {
      "description": "A JavaScript object holding an <code>animated</code> property. Used for many UI methods as a means of specifying some transition should be animated.",
      "functions": [],
      "properties": [
        "animated"
      ],
      "events": []
    },
    "AnimatedWithDurationOptions": {
      "description": "A JavaScript object holding <code>animated</code> and <code>duration</code> properties. Used on iOS For <a href=\"Titanium.UI.TableView\">TablewView</a> and <a href=\"Titanium.UI.ListView\">ListView</a> content offset transitions.",
      "functions": [],
      "properties": [
        "animated",
        "duration"
      ],
      "events": []
    },
    "Ti.UI.Animation": {
      "description": "The <code>Animation</code> object defines an animation that can be applied to a view.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "anchorPoint",
        "autoreverse",
        "backgroundColor",
        "bottom",
        "center",
        "color",
        "curve",
        "dampingRatio",
        "delay",
        "duration",
        "rotationY",
        "rotationX",
        "elevation",
        "height",
        "left",
        "opacity",
        "opaque",
        "repeat",
        "right",
        "springVelocity",
        "bounce",
        "top",
        "transform",
        "transition",
        "view",
        "visible",
        "width",
        "zIndex"
      ],
      "events": [
        "cancel",
        "complete",
        "start"
      ]
    },
    "Attribute": {
      "description": "An abstract datatype for specifying an attributed string attribute.",
      "functions": [],
      "properties": [
        "type",
        "value",
        "range"
      ],
      "events": []
    },
    "ParagraphAttribute": {
      "description": "An abstract datatype for specifying an Paragraph style attribute.",
      "functions": [],
      "properties": [
        "alignment",
        "firstLineHeadIndent",
        "headIndent",
        "tailIndent",
        "lineBreakMode",
        "maximumLineHeight",
        "minimumLineHeight",
        "lineSpacing",
        "paragraphSpacingAfter",
        "paragraphSpacingBefore",
        "lineHeightMultiple",
        "hyphenationFactor",
        "allowsDefaultTighteningForTruncation"
      ],
      "events": []
    },
    "Ti.UI.AttributedString": {
      "description": "An attributed string proxy manages character strings and associated sets of attributes (for example,\nfont and foregroundcolor) that apply to individual characters or ranges of characters in the string.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addAttribute"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "text",
        "attributes"
      ],
      "events": []
    },
    "Ti.UI.Button": {
      "description": "A button widget that has four states: normal, disabled, focused and selected.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "attributedString",
        "color",
        "disabledColor",
        "enabled",
        "font",
        "image",
        "imageIsMask",
        "selectedColor",
        "shadowColor",
        "shadowOffset",
        "shadowRadius",
        "style",
        "systemButton",
        "textAlign",
        "title",
        "titleid",
        "verticalAlign"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "touchfiltered"
      ]
    },
    "Ti.UI.ButtonBar": {
      "description": "An iOS button bar component.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "index",
        "labels",
        "textColor",
        "selectedTextColor",
        "selectedButtonColor"
      ],
      "events": [
        "click",
        "focus",
        "keypressed",
        "longpress",
        "pinch",
        "postlayout",
        "rotate"
      ]
    },
    "Ti.UI.Clipboard": {
      "description": "A module used for accessing clipboard data.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "clearData",
        "clearText",
        "getData",
        "getText",
        "hasData",
        "hasText",
        "hasURLs",
        "hasImages",
        "hasColors",
        "setData",
        "setText",
        "setItems",
        "getItems",
        "remove"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "name",
        "unique",
        "allowCreation"
      ],
      "events": []
    },
    "ClipboardItemsType": {
      "description": "Dictionary describing the items for <a href=\"Titanium.UI.Clipboard.setItems\">Titanium.UI.Clipboard.setItems</a>.",
      "functions": [],
      "properties": [
        "items",
        "options"
      ],
      "events": []
    },
    "Ti.UI.Color": {
      "description": "Represents a color used for UI components.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "toHex"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.UI.DashboardItem": {
      "description": "A dashboard item is a view that is displayed as an icon in a <a href=\"Titanium.UI.DashboardView\">Titanium.UI.DashboardView</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "badge",
        "canDelete",
        "image",
        "selectedImage"
      ],
      "events": [
        "click",
        "delete",
        "move"
      ]
    },
    "Ti.UI.DashboardView": {
      "description": "A dashboard view is an iOS Springboard-like view of <a href=\"Titanium.UI.DashboardItem\">Titanium.UI.DashboardItem</a> items that may\nbe deleted and reordered by the user using its built-in edit mode.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "toImage",
        "convertPointToView",
        "getViewById",
        "startEditing",
        "stopEditing"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "height",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "size",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "transform",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "columnCount",
        "rowCount",
        "data",
        "editable",
        "wobble"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "keypressed",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "twofingertap",
        "commit",
        "delete",
        "dragend",
        "dragstart",
        "edit",
        "move",
        "pagechanged"
      ]
    },
    "Dimension": {
      "description": "A simple object consisting of the position and size measurements. Effectively combines <a href=\"Size\">Size</a> and <a href=\"Point\">Point</a> but ensures numeric x/y values.",
      "functions": [],
      "properties": [
        "height",
        "width",
        "x",
        "y"
      ],
      "events": []
    },
    "DimensionWithAbsolutes": {
      "description": "An extension of <a href=\"Dimension\">Dimension</a> where Android returns additional absolute X/Y values/properties for <a href=\"Titanium.UI.View.rect\">Titanium.UI.View.rect</a>",
      "functions": [],
      "properties": [
        "height",
        "width",
        "x",
        "y",
        "absoluteX",
        "absoluteY"
      ],
      "events": []
    },
    "Ti.UI.EmailDialog": {
      "description": "An email dialog is a modal window that allows users to compose and send an email.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "replaceAt",
        "show",
        "stopAnimation",
        "getViewById",
        "addAttachment",
        "isSupported",
        "open"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "previewContext",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tooltip",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "CANCELLED",
        "FAILED",
        "SAVED",
        "SENT",
        "barColor",
        "bccRecipients",
        "ccRecipients",
        "html",
        "messageBody",
        "subject",
        "toRecipients"
      ],
      "events": [
        "rotate",
        "complete"
      ]
    },
    "Font": {
      "description": "An abstract datatype for specifying a text font.",
      "functions": [],
      "properties": [
        "fontFamily",
        "fontSize",
        "fontWeight",
        "fontStyle",
        "textStyle"
      ],
      "events": []
    },
    "Ti.UI.ImageView": {
      "description": "A view to display a single image or series of animated images.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "pause",
        "resume",
        "start",
        "stop",
        "toBlob",
        "addSymbolEffect"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "animating",
        "autorotate",
        "decodeRetries",
        "defaultImage",
        "duration",
        "enableZoomControls",
        "hires",
        "image",
        "imageTouchFeedback",
        "imageTouchFeedbackColor",
        "images",
        "paused",
        "preventDefaultImage",
        "repeatCount",
        "reverse",
        "scalingMode"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "change",
        "load",
        "start",
        "stop",
        "error",
        "pause"
      ]
    },
    "Ti.UI.Label": {
      "description": "A text label, with an optional background image.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "attributedString",
        "autoLink",
        "autoSize",
        "backgroundPaddingBottom",
        "backgroundPaddingLeft",
        "backgroundPaddingRight",
        "backgroundPaddingTop",
        "color",
        "ellipsize",
        "font",
        "highlightedColor",
        "html",
        "breakStrategy",
        "hyphenationFrequency",
        "includeFontPadding",
        "lines",
        "lineCount",
        "letterSpacing",
        "lineSpacing",
        "maxLines",
        "minimumFontSize",
        "shadowColor",
        "shadowOffset",
        "shadowRadius",
        "text",
        "textTransform",
        "textAlign",
        "textid",
        "visibleText",
        "wordWrap",
        "verticalAlign"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "link"
      ]
    },
    "LabelLineSpacing": {
      "description": "See <a href=\"https://developer.android.com/reference/android/widget/TextView#setLineSpacing(float,%20float)\">TextView.setLineSpacing</a>",
      "functions": [],
      "properties": [
        "add",
        "multiply"
      ],
      "events": []
    },
    "Ti.UI.ListItem": {
      "description": "A list item is an individual item in a list section.",
      "functions": [],
      "properties": [
        "apiName",
        "lifecycleContainer",
        "itemId",
        "accessoryType",
        "backgroundColor",
        "backgroundImage",
        "backgroundGradient",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundSelectedGradient",
        "selectedBackgroundColor",
        "selectedBackgroundImage",
        "selectedBackgroundGradient",
        "canEdit",
        "canInsert",
        "canMove",
        "editActions",
        "searchableText",
        "color",
        "subtitleColor",
        "selectedColor",
        "selectedSubtitleColor",
        "font",
        "height",
        "image",
        "title",
        "selectionStyle",
        "subtitle"
      ],
      "events": []
    },
    "ItemTemplate": {
      "description": "Template that represents the basic appearance of a list item.",
      "functions": [],
      "properties": [
        "properties",
        "events",
        "childTemplates"
      ],
      "events": []
    },
    "ViewTemplate": {
      "description": "Template that represents a view subcomponent of an <a href=\"ItemTemplate\">ItemTemplate</a>.",
      "functions": [],
      "properties": [
        "type",
        "bindId",
        "properties",
        "events",
        "childTemplates"
      ],
      "events": []
    },
    "ListDataItem": {
      "description": "Represents displayed item data.",
      "functions": [],
      "properties": [
        "template",
        "properties"
      ],
      "events": []
    },
    "RowActionType": {
      "description": "Represents the custom edit action for a ListItem or TableViewRow.",
      "functions": [],
      "properties": [
        "title",
        "identifier",
        "style",
        "color",
        "image",
        "state"
      ],
      "events": []
    },
    "Ti.UI.ListSection": {
      "description": "A list section is a container within a list view used to organize list items.",
      "functions": [
        "applyProperties",
        "setItems",
        "appendItems",
        "insertItemsAt",
        "replaceItemsAt",
        "deleteItemsAt",
        "getItemAt",
        "updateItemAt"
      ],
      "properties": [
        "apiName",
        "lifecycleContainer",
        "footerTitle",
        "footerView",
        "headerTitle",
        "headerView",
        "items",
        "itemCount",
        "filteredItemCount"
      ],
      "events": []
    },
    "Ti.UI.ListView": {
      "description": "A list view is used to present information, organized in to sections and items,\nin a vertically-scrolling view.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "scrollToItem",
        "deselectItem",
        "appendSection",
        "deleteSectionAt",
        "insertSectionAt",
        "replaceSectionAt",
        "selectItem",
        "setContentInsets",
        "setContentOffset",
        "setMarker",
        "addMarker"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "allowsSelection",
        "canScroll",
        "contentOffset",
        "disableBounce",
        "editing",
        "requiresEditingToMove",
        "fastScroll",
        "fixedSize",
        "allowsSelectionDuringEditing",
        "allowsMultipleSelectionDuringEditing",
        "allowsMultipleSelectionInteraction",
        "lazyLoadingEnabled",
        "pruneSectionsOnEdit",
        "templates",
        "sections",
        "defaultItemTemplate",
        "separatorHeight",
        "footerDividersEnabled",
        "footerTitle",
        "footerView",
        "headerDividersEnabled",
        "headerTitle",
        "headerView",
        "pullView",
        "refreshControl",
        "searchView",
        "searchText",
        "caseInsensitiveSearch",
        "continuousUpdate",
        "forceUpdates",
        "keepSectionsInSearch",
        "keyboardDismissMode",
        "sectionIndexTitles",
        "scrollIndicatorStyle",
        "willScrollOnStatusTap",
        "sectionCount",
        "sectionHeaderTopPadding",
        "showSelectionCheck",
        "showVerticalScrollIndicator",
        "separatorColor",
        "separatorInsets",
        "separatorStyle",
        "style",
        "tableSeparatorInsets",
        "listSeparatorInsets",
        "rowSeparatorInsets",
        "dimBackgroundForSearch",
        "showSearchBarInNavBar",
        "resultsBackgroundColor",
        "resultsSeparatorColor",
        "resultsSeparatorStyle",
        "resultsSeparatorInsets",
        "selectedItems"
      ],
      "events": [
        "rotate",
        "indexclick",
        "itemclick",
        "itemsselected",
        "delete",
        "insert",
        "dragstart",
        "dragend",
        "marker",
        "movestart",
        "moveend",
        "move",
        "noresults",
        "pull",
        "prefetch",
        "cancelprefetch",
        "pullend",
        "editaction",
        "scrollstart",
        "scrollend",
        "scrolling"
      ]
    },
    "ListViewAnimationProperties": {
      "description": "A simple object for specifying the animation properties to use when inserting or deleting\nsections or cells, or scrolling the list.",
      "functions": [],
      "properties": [
        "animated",
        "animationStyle",
        "position"
      ],
      "events": []
    },
    "ListViewIndexEntry": {
      "description": "A simple object that represents an index entry in a <code>ListView</code>.",
      "functions": [],
      "properties": [
        "title",
        "index"
      ],
      "events": []
    },
    "ListViewMarkerProps": {
      "description": "The parameter for <a href=\"Titanium.UI.ListView.setMarker\">setMarker</a> and <a href=\"Titanium.UI.ListView.addMarker\">addMarker</a> methods.",
      "functions": [],
      "properties": [
        "sectionIndex",
        "itemIndex"
      ],
      "events": []
    },
    "ListItemEventType": {
      "description": "The arguments for the <a href=\"Titanium.UI.ListView.prefetch\">Titanium.UI.ListView.prefetch</a> and <a href=\"Titanium.UI.ListView.cancelprefetch\">Titanium.UI.ListView.cancelprefetch</a> events.",
      "functions": [],
      "properties": [
        "section",
        "sectionIndex",
        "itemIndex",
        "itemId"
      ],
      "events": []
    },
    "SelectedItem": {
      "description": "The arguments for the <a href=\"Titanium.UI.ListView.itemsselected\">Titanium.UI.ListView.itemsselected</a> event.",
      "functions": [],
      "properties": [
        "section",
        "sectionIndex",
        "itemIndex"
      ],
      "events": []
    },
    "Ti.UI.ListViewScrollPosition": {
      "description": "A set of constants for the position value that can be used for the <code>position</code> property of\n<a href=\"ListViewAnimationProperties\">ListViewAnimationProperties</a> when invoking the ListView's <code>scrollToItem</code>, <code>appendSection</code>,\n<code>deleteSectionAt</code>, <code>insertSectionAt</code> and <code>replaceSectionAt</code> methods.",
      "functions": [],
      "properties": [
        "apiName",
        "lifecycleContainer",
        "BOTTOM",
        "MIDDLE",
        "NONE",
        "TOP"
      ],
      "events": []
    },
    "Ti.UI.MaskedImage": {
      "description": "A control that displays an image composited with a background image or color.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "mask",
        "image",
        "mode",
        "tint"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap"
      ]
    },
    "Ti.UI.Matrix2D": {
      "description": "The 2D Matrix is an object for holding values for an affine transformation matrix.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "invert",
        "multiply",
        "rotate",
        "scale",
        "translate"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "a",
        "b",
        "c",
        "d",
        "tx",
        "ty"
      ],
      "events": []
    },
    "Matrix2DCreationDict": {
      "description": "Simple object passed to <a href=\"Titanium.UI.createMatrix2D\">Titanium.UI.createMatrix2D</a> to initialize a matrix.",
      "functions": [],
      "properties": [
        "scale",
        "rotate",
        "anchorPoint"
      ],
      "events": []
    },
    "Ti.UI.Matrix3D": {
      "description": "The 3D Matrix is an object for holding values for a 3D affine transform.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "invert",
        "multiply",
        "rotate",
        "scale",
        "translate"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "m11",
        "m12",
        "m13",
        "m14",
        "m21",
        "m22",
        "m23",
        "m24",
        "m31",
        "m32",
        "m33",
        "m34",
        "m41",
        "m42",
        "m43",
        "m44"
      ],
      "events": []
    },
    "Matrix3DCreationDict": {
      "description": "Simple object passed to <a href=\"Titanium.UI.createMatrix3D\">Titanium.UI.createMatrix3D</a> to initialize a matrix.",
      "functions": [],
      "properties": [
        "scale"
      ],
      "events": []
    },
    "Ti.UI.NavigationWindow": {
      "description": "A <code>NavigationWindow</code> implements a specialized view that manages the navigation of hierarchical\ncontent.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "addSharedElement",
        "close",
        "hideNavBar",
        "hideTabBar|deprecated",
        "open",
        "removeAllSharedElements",
        "showNavBar",
        "showTabBar|deprecated",
        "showToolbar",
        "hideToolbar",
        "closeWindow",
        "openWindow",
        "popToRootWindow"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "activity",
        "closed",
        "exitOnClose",
        "extendEdges",
        "flagSecure",
        "focused",
        "includeOpaqueBars",
        "autoAdjustScrollViewInsets",
        "extendSafeArea",
        "fullscreen",
        "homeIndicatorAutoHidden",
        "hidesBarsOnSwipe",
        "hidesBarsOnTap",
        "hidesBarsWhenKeyboardAppears",
        "hidesBackButton",
        "largeTitleEnabled",
        "hidesSearchBarWhenScrolling",
        "largeTitleDisplayMode",
        "leftNavButtons",
        "modal",
        "navigationWindow",
        "onBack",
        "orientationModes",
        "orientation",
        "rightNavButtons",
        "safeAreaPadding",
        "splitActionBar",
        "statusBarStyle",
        "statusBarColor",
        "sustainedPerformanceMode",
        "theme",
        "titleAttributes",
        "windowFlags",
        "uiFlags",
        "windowSoftInputMode",
        "windowPixelFormat",
        "activityExitTransition",
        "activityEnterTransition",
        "activityReturnTransition",
        "activityReenterTransition",
        "activitySharedElementExitTransition",
        "activitySharedElementEnterTransition",
        "activitySharedElementReturnTransition",
        "activitySharedElementReenterTransition",
        "window",
        "interactiveDismissModeEnabled"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "androidback",
        "androidcamera",
        "androidfocus",
        "androidsearch",
        "androidvoldown",
        "androidvolup",
        "blur",
        "close",
        "open"
      ]
    },
    "Ti.UI.Notification": {
      "description": "A toast notification.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "show"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "message",
        "duration",
        "gravity",
        "xOffset",
        "yOffset",
        "horizontalMargin",
        "verticalMargin"
      ],
      "events": []
    },
    "Ti.UI.OptionBar": {
      "description": "A bar of selectable buttons where only 1 can be selected at a time.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "index",
        "labels",
        "selectedBackgroundColor",
        "selectedTextColor",
        "selectedBorderColor",
        "color"
      ],
      "events": [
        "click",
        "focus",
        "keypressed",
        "longpress",
        "pinch",
        "postlayout",
        "rotate"
      ]
    },
    "Ti.UI.OptionDialog": {
      "description": "An option dialog is a modal view that includes a message and one or more option items positioned\nin the middle of the display on Android and at the bottom edge on iOS. On Android, buttons may\nbe added below the options.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "previewContext",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tintColor",
        "tooltip",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "androidView",
        "buttonNames",
        "cancel",
        "destructive",
        "options",
        "opaquebackground",
        "persistent",
        "selectedIndex",
        "title",
        "titleid"
      ],
      "events": [
        "click",
        "rotate"
      ]
    },
    "hideParams": {
      "description": "Dictionary of options for the <a href=\"Titanium.UI.OptionDialog.hide\">Titanium.UI.OptionDialog.hide</a> method.",
      "functions": [],
      "properties": [
        "animated"
      ],
      "events": []
    },
    "HorizontalInsets": {
      "description": "Dictionary object of parameters for horizontal-only insets applied to <a href=\"Titanium.UI.TableView\">Table</a> and <a href=\"Titanium.UI.ListView\">List</a> views. Only <code>left</code> and <code>right</code> properties are used (see <a href=\"Padding\">Padding</a>).",
      "functions": [],
      "properties": [
        "left",
        "right"
      ],
      "events": []
    },
    "Padding": {
      "description": "Dictionary object of parameters for the padding/insets applied to all kinds of views.",
      "functions": [],
      "properties": [
        "left",
        "right",
        "top",
        "bottom"
      ],
      "events": []
    },
    "Ti.UI.Picker": {
      "description": "A control used to select one or more fixed values.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "getSelectedRow",
        "reloadColumn",
        "setSelectedRow",
        "setValue|deprecated",
        "showDatePickerDialog",
        "showTimePickerDialog"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "animatedCenter",
        "backgroundColor",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "keepScreenOn",
        "borderStyle",
        "columns",
        "countDownDuration",
        "dateTimeColor",
        "overrideUserInterfaceStyle",
        "format24",
        "hintText",
        "locale",
        "maxDate",
        "minDate",
        "minuteInterval",
        "selectionIndicator",
        "selectionOpens",
        "textAlign",
        "datePickerStyle",
        "type",
        "useSpinner",
        "nativeSpinner",
        "value",
        "visibleItems",
        "calendarViewShown",
        "font",
        "color"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "change"
      ]
    },
    "Ti.UI.PickerColumn": {
      "description": "A picker column, representing a selectable group of items in a <a href=\"Titanium.UI.Picker\">Titanium.UI.Picker</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "stopAnimation",
        "addRow",
        "removeRow"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "filterTouchesWhenObscured",
        "id",
        "tooltip",
        "rowCount",
        "rows",
        "font"
      ],
      "events": [
        "focus",
        "longclick",
        "postlayout",
        "rotate"
      ]
    },
    "Ti.UI.PickerRow": {
      "description": "A picker row, representing a selectable item in a <a href=\"Titanium.UI.Picker\">Titanium.UI.Picker</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "color",
        "font",
        "title"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap"
      ]
    },
    "Ti.UI.ProgressBar": {
      "description": "A progress bar.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "animated",
        "color",
        "font",
        "max",
        "message",
        "trackTintColor",
        "min",
        "style",
        "value"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap"
      ]
    },
    "Ti.UI.RefreshControl": {
      "description": "The RefreshControl is a representation of the native iOS\n<a href=\"https://developer.apple.com/documentation/uikit/uirefreshcontrol\">UIRefreshControl</a>\nand Android <a href=\"https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html\">SwipeRefreshLayout</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "beginRefreshing",
        "endRefreshing"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "title",
        "tintColor",
        "offset",
        "backgroundColor"
      ],
      "events": [
        "refreshstart",
        "refreshend"
      ]
    },
    "RefreshControlOffset": {
      "description": "Offset of the refresh control view.",
      "functions": [],
      "properties": [
        "start",
        "end"
      ],
      "events": []
    },
    "Ti.UI.ScrollView": {
      "description": "A view that contains a horizontally and/or vertically-scrollable region of content.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "scrollTo",
        "setContentOffset",
        "setZoomScale",
        "scrollToBottom",
        "scrollToTop"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "canCancelEvents",
        "contentHeight",
        "contentOffset",
        "contentWidth",
        "decelerationRate",
        "disableBounce",
        "horizontalBounce",
        "keyboardDismissMode",
        "maxZoomScale",
        "minZoomScale",
        "overScrollMode",
        "refreshControl",
        "scrollsToTop",
        "scrollIndicatorStyle",
        "scrollType",
        "scrollingEnabled",
        "showHorizontalScrollIndicator",
        "showVerticalScrollIndicator",
        "verticalBounce",
        "zoomScale"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "scale",
        "scroll",
        "dragStart",
        "dragEnd",
        "dragstart",
        "dragend"
      ]
    },
    "Ti.UI.ScrollableView": {
      "description": "A view that encapsulates a horizontally-scrolling set of child views, known as pages, navigable\nusing its built-in horizontal swipe gestures.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "insertViewsAt",
        "addView",
        "moveNext",
        "movePrevious",
        "removeView",
        "scrollToView",
        "setIndicatorImageForPage"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "cacheSize",
        "currentPage",
        "currentPageIndicatorColor",
        "disableBounce",
        "overScrollMode",
        "pagingControlColor",
        "preferredIndicatorImage",
        "pagingControlHeight",
        "pageIndicatorColor",
        "showPagingControl",
        "pagingControlTimeout",
        "pagingControlAlpha",
        "pagingControlOnTop",
        "overlayEnabled",
        "scrollingEnabled",
        "views",
        "clipViews",
        "hitRect",
        "padding"
      ],
      "events": [
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longpress",
        "postlayout",
        "rotate",
        "singletap",
        "touchcancel",
        "touchstart",
        "twofingertap",
        "scroll",
        "scrollend",
        "dragend"
      ]
    },
    "Ti.UI.SearchBar": {
      "description": "A specialized text field for entering search text.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "blur",
        "focus",
        "setShowCancel",
        "insertTokenAtIndex",
        "removeTokenAtIndex"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "autocapitalization",
        "autocorrect",
        "barColor",
        "cancelButtonTitle",
        "color",
        "fieldBackgroundImage",
        "fieldBackgroundDisabledImage",
        "focused",
        "hintText",
        "hintTextColor",
        "hinttextid",
        "iconified",
        "iconifiedByDefault",
        "iconColor",
        "keyboardType",
        "keyboardAppearance",
        "prompt",
        "promptid",
        "showBookmark",
        "showCancel",
        "style",
        "value",
        "tokens"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "blur",
        "bookmark",
        "cancel",
        "change",
        "return"
      ]
    },
    "SearchBarToken": {
      "description": "The search bar token for the <a href=\"Titanium.UI.SearchBar.insertTokenAtIndex\">Titanium.UI.SearchBar.insertTokenAtIndex</a> method.",
      "functions": [],
      "properties": [
        "identifier",
        "text",
        "image"
      ],
      "events": []
    },
    "Ti.UI.Shortcut": {
      "description": "Manage application shortcuts.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "remove",
        "removeAll",
        "getById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "items",
        "staticItems"
      ],
      "events": [
        "click"
      ]
    },
    "Ti.UI.ShortcutItem": {
      "description": "An application shortcut item.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "show|deprecated",
        "hide|deprecated",
        "pin"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "id",
        "title",
        "description",
        "icon",
        "data",
        "visible"
      ],
      "events": []
    },
    "Size": {
      "description": "A simple object consisting of size measurements.",
      "functions": [],
      "properties": [
        "height",
        "width"
      ],
      "events": []
    },
    "Ti.UI.Slider": {
      "description": "A slider component with a draggable thumb.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "setValue"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "disabledLeftTrackImage",
        "disabledRightTrackImage",
        "disabledThumbImage",
        "enabled",
        "highlightedLeftTrackImage",
        "highlightedRightTrackImage",
        "highlightedThumbImage",
        "leftTrackImage",
        "leftTrackLeftCap",
        "leftTrackTopCap",
        "max",
        "maxRange",
        "min",
        "minRange",
        "rightTrackImage",
        "rightTrackLeftCap",
        "rightTrackTopCap",
        "selectedLeftTrackImage",
        "selectedRightTrackImage",
        "selectedThumbImage",
        "splitTrack",
        "thumbImage",
        "trackTintColor",
        "value"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "change",
        "start",
        "stop"
      ]
    },
    "Ti.UI.Switch": {
      "description": "An on/off switch control.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "animated",
        "color",
        "enabled",
        "font",
        "style",
        "textAlign",
        "title",
        "titleOff",
        "titleOn",
        "onThumbColor",
        "thumbColor",
        "onTintColor",
        "thumbTintColor",
        "value",
        "verticalAlign"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "change"
      ]
    },
    "Ti.UI.Tab": {
      "description": "A tab instance for a <a href=\"Titanium.UI.TabGroup\">TabGroup</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "clearMotionEffects",
        "insertAt",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "open",
        "close",
        "setWindow|deprecated",
        "popToRootWindow"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundImage",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "tintColor",
        "tooltip",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "active",
        "activeIcon",
        "badge",
        "badgeColor",
        "badgeBackgroundColor",
        "badgeTextColor",
        "icon",
        "iconFamily",
        "iconInsets",
        "iconIsMask",
        "activeIconIsMask",
        "activeTintColor",
        "title",
        "titleid",
        "titleColor",
        "activeTitleColor",
        "window"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "longpress",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "unselected",
        "selected"
      ]
    },
    "TabIconInsets": {
      "description": "Dictionary to specify edge insets for <a href=\"Titanium.UI.Tab.iconInsets\">Titanium.UI.Tab.iconInsets</a>. Difference from typical <a href=\"Padding\">Padding</a> is that <code>right</code> and <code>bottom</code> are ignored and calculated internally from <code>top</code>/<code>left</code> values.",
      "functions": [],
      "properties": [
        "left",
        "top"
      ],
      "events": []
    },
    "Ti.UI.TabGroup": {
      "description": "A tabbed group of windows.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "addSharedElement",
        "close",
        "hideNavBar",
        "hideTabBar|deprecated",
        "open",
        "removeAllSharedElements",
        "showNavBar",
        "showTabBar|deprecated",
        "showToolbar",
        "hideToolbar",
        "addTab",
        "disableTabNavigation|deprecated",
        "getActiveTab|deprecated",
        "removeTab",
        "setActiveTab|deprecated",
        "getTabs|deprecated"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityDisableLongPress",
        "backgroundColor",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "tintColor",
        "tooltip",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "keepScreenOn",
        "activity",
        "backButtonTitle",
        "backButtonTitleImage",
        "barColor",
        "barImage",
        "closed",
        "exitOnClose",
        "extendEdges",
        "flagSecure",
        "focused",
        "includeOpaqueBars",
        "autoAdjustScrollViewInsets",
        "extendSafeArea",
        "fullscreen",
        "homeIndicatorAutoHidden",
        "hideShadow",
        "hidesBarsOnSwipe",
        "hidesBarsOnTap",
        "hidesBarsWhenKeyboardAppears",
        "hidesBackButton",
        "largeTitleEnabled",
        "hidesSearchBarWhenScrolling",
        "largeTitleDisplayMode",
        "leftNavButton",
        "leftNavButtons",
        "modal",
        "navBarHidden",
        "navTintColor",
        "navigationWindow",
        "onBack",
        "orientationModes",
        "orientation",
        "rightNavButton",
        "rightNavButtons",
        "safeAreaPadding",
        "shadowImage",
        "splitActionBar",
        "statusBarStyle",
        "statusBarColor",
        "sustainedPerformanceMode",
        "swipeToClose",
        "tabBarHidden",
        "theme",
        "title",
        "titleAttributes",
        "titleControl",
        "titleImage",
        "titlePrompt",
        "titleid",
        "titlepromptid",
        "toolbar",
        "transitionAnimation",
        "translucent",
        "windowFlags",
        "uiFlags",
        "windowSoftInputMode",
        "windowPixelFormat",
        "activityExitTransition",
        "activityEnterTransition",
        "activityReturnTransition",
        "activityReenterTransition",
        "activitySharedElementExitTransition",
        "activitySharedElementEnterTransition",
        "activitySharedElementReturnTransition",
        "activitySharedElementReenterTransition",
        "activeTab",
        "allowUserCustomization",
        "autoTabTitle",
        "enabled",
        "paddingLeft",
        "paddingRight",
        "paddingBottom",
        "titleColor",
        "activeTitleColor",
        "editButtonTitle",
        "swipeable",
        "smoothScrollOnTabClick",
        "tabs",
        "shiftMode",
        "style",
        "tabsBackgroundColor",
        "tabMode",
        "tabsTintColor",
        "tabsTranslucent",
        "flags",
        "activeTintColor",
        "tabsBackgroundImage",
        "unselectedItemTintColor",
        "activeTabIconTint",
        "tabsBackgroundSelectedColor",
        "activeTabBackgroundImage",
        "tabBarVisible",
        "interactiveDismissModeEnabled",
        "experimental"
      ],
      "events": [
        "focus",
        "rotate",
        "androidback",
        "androidcamera",
        "androidfocus",
        "androidsearch",
        "androidvoldown",
        "androidvolup",
        "blur",
        "close",
        "open"
      ]
    },
    "disableTabOptions": {
      "description": "Dictionary of options for the &lt;Titanium.UI.TabGroup.disableTabOptions&gt; method.",
      "functions": [],
      "properties": [
        "animated",
        "enabled"
      ],
      "events": []
    },
    "Ti.UI.TabbedBar": {
      "description": "A button bar that maintains a selected state.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "index",
        "labels",
        "textColor",
        "selectedBackgroundColor",
        "selectedTextColor",
        "activeTintColor",
        "style"
      ],
      "events": [
        "click",
        "focus",
        "keypressed",
        "longpress",
        "pinch",
        "postlayout",
        "rotate"
      ]
    },
    "Ti.UI.TableView": {
      "description": "A table view is used to present information, organized in sections and rows, in a\nvertically-scrolling view.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "appendRow",
        "appendSection",
        "deleteRow",
        "deleteSection",
        "deselectRow",
        "insertRowAfter",
        "insertSectionAfter",
        "insertRowBefore",
        "insertSectionBefore",
        "scrollToIndex",
        "scrollToTop",
        "setContentInsets",
        "setContentOffset",
        "selectRow",
        "setData",
        "setHeaderPullView|deprecated",
        "updateRow",
        "updateSection"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "allowsSelection",
        "allowsSelectionDuringEditing",
        "contentOffset",
        "data",
        "editable",
        "editing",
        "filterAttribute",
        "filterAnchored",
        "filterCaseInsensitive",
        "fixedSize",
        "footerDividersEnabled",
        "footerTitle",
        "maxClassname",
        "headerPullView",
        "refreshControl",
        "hideSearchOnSelection",
        "allowsMultipleSelectionDuringEditing",
        "allowsMultipleSelectionInteraction",
        "footerView",
        "headerDividersEnabled",
        "headerTitle",
        "headerView",
        "index",
        "maxRowHeight",
        "minRowHeight",
        "moveable",
        "moving",
        "overScrollMode",
        "rowHeight",
        "scrollable",
        "scrollIndicatorStyle",
        "scrollsToTop",
        "search",
        "dimBackgroundForSearch",
        "keyboardDismissMode",
        "showSearchBarInNavBar",
        "searchAsChild",
        "searchHidden",
        "sectionCount",
        "sections",
        "sectionHeaderTopPadding",
        "separatorColor",
        "separatorInsets",
        "tableSeparatorInsets",
        "rowSeparatorInsets",
        "separatorStyle",
        "showSelectionCheck",
        "showVerticalScrollIndicator",
        "style",
        "resultsBackgroundColor",
        "resultsSeparatorColor",
        "resultsSeparatorStyle",
        "resultsSeparatorInsets"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "rowsselected",
        "delete",
        "indexclick",
        "move",
        "scroll",
        "scrollend",
        "dragstart",
        "dragend",
        "editaction"
      ]
    },
    "TableViewAnimationProperties": {
      "description": "A simple object for specifying the animation properties to use when inserting or deleting rows, or scrolling the table.",
      "functions": [],
      "properties": [
        "animated",
        "animationStyle",
        "position"
      ],
      "events": []
    },
    "TableViewIndexEntry": {
      "description": "A simple object that represents an index entry in a <code>TableView</code>.",
      "functions": [],
      "properties": [
        "title",
        "index"
      ],
      "events": []
    },
    "SelectedRowObject": {
      "description": "The arguments for the <a href=\"Titanium.UI.TableView.rowsselected\">Titanium.UI.TableView.rowsselected</a> event.",
      "functions": [],
      "properties": [
        "index",
        "row",
        "rowData",
        "section"
      ],
      "events": []
    },
    "Ti.UI.TableViewRow": {
      "description": "A table view row is an individual item in a table, organized into table view sections.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "className",
        "color",
        "deleteButtonTitle",
        "editable",
        "editActions",
        "filterAlwaysInclude",
        "font",
        "footer",
        "footerTitle",
        "hasCheck",
        "hasChild",
        "hasDetail",
        "header",
        "headerTitle",
        "indentionLevel",
        "leftImage",
        "moveable",
        "rightImage",
        "selectedBackgroundColor",
        "selectedBackgroundImage",
        "selectedColor",
        "selectionStyle",
        "title"
      ],
      "events": [
        "click",
        "keypressed",
        "longclick",
        "postlayout",
        "rotate",
        "swipe",
        "touchcancel",
        "touchend",
        "touchstart"
      ]
    },
    "Ti.UI.TableViewScrollPosition": {
      "description": "A set of constants for the position value that can be used for the <code>position</code> property of\n<a href=\"Titanium.UI.TableView\">Titanium.UI.TableView</a> when invoking <code>scrollToIndex</code>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "BOTTOM",
        "MIDDLE",
        "NONE",
        "TOP"
      ],
      "events": []
    },
    "Ti.UI.TableViewSection": {
      "description": "A table view section is a container within a table used to organize table view rows.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "remove",
        "rowAtIndex"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "footerTitle",
        "footerView",
        "headerTitle",
        "headerView",
        "rowCount",
        "rows"
      ],
      "events": []
    },
    "Ti.UI.TextArea": {
      "description": "A multiline text field that supports editing and scrolling.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "blur",
        "focus",
        "hasText",
        "setSelection"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "keyboardAppearance",
        "attributedHintText",
        "attributedString",
        "autocapitalization",
        "autocorrect",
        "autofillType",
        "autoLink",
        "borderStyle",
        "clearOnEdit",
        "color",
        "editable",
        "ellipsize",
        "enableCopy",
        "enableReturnKey",
        "focused",
        "font",
        "fullscreen",
        "hintText",
        "hinttextid",
        "hintTextColor",
        "hintType",
        "handleLinks",
        "html",
        "keyboardToolbar",
        "keyboardToolbarColor",
        "keyboardToolbarHeight",
        "keyboardType",
        "lines",
        "maxLength",
        "maxLines",
        "padding",
        "returnKeyType",
        "scrollsToTop",
        "showUndoRedoActions",
        "suppressReturn",
        "textAlign",
        "value",
        "scrollable",
        "selection",
        "verticalAlign"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "blur",
        "change",
        "link",
        "return",
        "selected"
      ]
    },
    "textAreaSelectedParams": {
      "description": "Dictionary object of parameters for the <a href=\"Titanium.UI.TextArea.selected\">Titanium.UI.TextArea.selected</a> event and <a href=\"Titanium.UI.TextArea.selection\">Titanium.UI.TextArea.selection</a> property that describes\nposition and length of the selected text.",
      "functions": [],
      "properties": [
        "location",
        "length"
      ],
      "events": []
    },
    "Ti.UI.TextField": {
      "description": "A single line text field.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "blur",
        "focus",
        "hasText",
        "setSelection"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "keyboardAppearance",
        "attributedString",
        "attributedHintText",
        "autocapitalization",
        "autocorrect",
        "autofillType",
        "autoLink",
        "borderStyle",
        "clearButtonMode",
        "clearOnEdit",
        "color",
        "editable",
        "ellipsize",
        "enableCopy",
        "enableReturnKey",
        "focused",
        "font",
        "fullscreen",
        "hintText",
        "hintTextColor",
        "hinttextid",
        "hintType",
        "inputType",
        "keyboardToolbar",
        "keyboardToolbarColor",
        "keyboardToolbarHeight",
        "keyboardType",
        "leftButton",
        "leftButtonMode",
        "leftButtonPadding",
        "minimumFontSize",
        "padding",
        "passwordMask",
        "passwordRules",
        "returnKeyType",
        "rightButton",
        "rightButtonMode",
        "rightButtonPadding",
        "suppressReturn",
        "selection",
        "showUndoRedoActions",
        "textAlign",
        "value",
        "verticalAlign",
        "maxLength"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "blur",
        "change",
        "empty",
        "return"
      ]
    },
    "textFieldSelectedParams": {
      "description": "Dictionary object of parameters for the <a href=\"Titanium.UI.TextField.selection\">Titanium.UI.TextField.selection</a> property that describes\nposition and length of the selected text.",
      "functions": [],
      "properties": [
        "location",
        "length"
      ],
      "events": []
    },
    "TextFieldPadding": {
      "description": "Dictionary object of parameters for the <a href=\"Titanium.UI.TextField.padding\">Titanium.UI.TextField.padding</a> that describes the padding. Most notable difference from typical <a href=\"Padding\">Padding</a> is that <code>top</code>/<code>bottom</code> are only supported on Android.",
      "functions": [],
      "properties": [
        "left",
        "right",
        "top",
        "bottom"
      ],
      "events": []
    },
    "Ti.UI.Toolbar": {
      "description": "A Toolbar can contain buttons, as well as certain other widgets, including text fields and labels.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "collapseActionViews",
        "dismissPopupMenus",
        "getContentInsetEnd",
        "getContentInsetLeft",
        "getContentInsetRight",
        "getContentInsetStart",
        "getCurrentContentInsetEnd",
        "getCurrentContentInsetLeft",
        "getCurrentContentInsetRight",
        "getCurrentContentInsetStart",
        "hasExpandedActionView",
        "hideOverflowMenu",
        "isOverflowMenuShowing",
        "setContentInsetsAbsolute",
        "setContentInsetsRelative",
        "showOverflowMenu"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundGradient",
        "backgroundImage",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "barColor",
        "items",
        "extendBackground",
        "translucent",
        "contentInsetEndWithActions",
        "contentInsetStartWithNavigation",
        "logo",
        "navigationIcon",
        "navigationIconColor",
        "overflowIcon",
        "subtitle",
        "subtitleTextColor",
        "title",
        "titleTextColor"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart"
      ]
    },
    "Ti.UI": {
      "description": "The main <a href=\"Titanium.UI\">Titanium.UI</a> module.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createMatrix2D",
        "createMatrix3D",
        "convertUnits",
        "fetchSemanticColor",
        "createView",
        "createActivityIndicator",
        "createAlertDialog",
        "createAnimation",
        "createAttributedString",
        "createButton",
        "createButtonBar",
        "createColor",
        "createDashboardItem",
        "createDashboardView",
        "createEmailDialog",
        "createImageView",
        "createLabel",
        "createListSection",
        "createListView",
        "createMaskedImage",
        "createNavigationWindow",
        "createNotification",
        "createOptionBar",
        "createOptionDialog",
        "createPicker",
        "createPickerColumn",
        "createPickerRow",
        "createProgressBar",
        "createRefreshControl",
        "createScrollView",
        "createScrollableView",
        "createSearchBar",
        "createShortcut",
        "createShortcutItem",
        "createSlider",
        "createSwitch",
        "createTab",
        "createTabGroup",
        "createTabbedBar",
        "createTableView",
        "createTableViewRow",
        "createTableViewSection",
        "createTextArea",
        "createTextField",
        "createToolbar",
        "createWebView",
        "createWindow"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ANIMATION_CURVE_EASE_IN",
        "ANIMATION_CURVE_EASE_IN_OUT",
        "ANIMATION_CURVE_EASE_OUT",
        "ANIMATION_CURVE_LINEAR",
        "ATTRIBUTE_FONT",
        "ATTRIBUTE_FOREGROUND_COLOR",
        "ATTRIBUTE_BACKGROUND_COLOR",
        "ATTRIBUTE_LIGATURE",
        "ATTRIBUTE_LETTERPRESS_STYLE",
        "ATTRIBUTE_KERN",
        "ATTRIBUTE_STRIKETHROUGH_STYLE",
        "ATTRIBUTE_UNDERLINES_STYLE",
        "ATTRIBUTE_SUPERSCRIPT_STYLE",
        "ATTRIBUTE_SUBSCRIPT_STYLE",
        "ATTRIBUTE_STROKE_COLOR",
        "ATTRIBUTE_PARAGRAPH_STYLE",
        "ATTRIBUTE_STROKE_WIDTH",
        "ATTRIBUTE_SHADOW",
        "ATTRIBUTE_WRITING_DIRECTION",
        "ATTRIBUTE_TEXT_EFFECT",
        "ATTRIBUTE_LINK",
        "ATTRIBUTE_BASELINE_OFFSET",
        "ATTRIBUTE_UNDERLINE_COLOR",
        "ATTRIBUTE_STRIKETHROUGH_COLOR",
        "ATTRIBUTE_OBLIQUENESS",
        "ATTRIBUTE_EXPANSION",
        "ATTRIBUTE_LINE_BREAK",
        "ATTRIBUTE_UNDERLINE_STYLE_NONE",
        "ATTRIBUTE_UNDERLINE_STYLE_SINGLE",
        "ATTRIBUTE_UNDERLINE_STYLE_THICK",
        "ATTRIBUTE_UNDERLINE_STYLE_DOUBLE",
        "ATTRIBUTE_UNDERLINE_PATTERN_SOLID",
        "ATTRIBUTE_UNDERLINE_PATTERN_DOT",
        "ATTRIBUTE_UNDERLINE_PATTERN_DASH",
        "ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT",
        "ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT_DOT",
        "ATTRIBUTE_UNDERLINE_BY_WORD",
        "ATTRIBUTE_WRITING_DIRECTION_EMBEDDING",
        "ATTRIBUTE_WRITING_DIRECTION_OVERRIDE",
        "ATTRIBUTE_WRITING_DIRECTION_NATURAL",
        "ATTRIBUTE_WRITING_DIRECTION_LEFT_TO_RIGHT",
        "ATTRIBUTE_WRITING_DIRECTION_RIGHT_TO_LEFT",
        "ATTRIBUTE_LINE_BREAK_BY_WORD_WRAPPING",
        "ATTRIBUTE_LINE_BREAK_BY_CHAR_WRAPPING",
        "ATTRIBUTE_LINE_BREAK_BY_CLIPPING",
        "ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_HEAD",
        "ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_MIDDLE",
        "ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_TAIL",
        "AUTOFILL_TYPE_USERNAME",
        "AUTOFILL_TYPE_PASSWORD",
        "AUTOFILL_TYPE_NAME",
        "AUTOFILL_TYPE_NAME_PREFIX",
        "AUTOFILL_TYPE_GIVEN_NAME",
        "AUTOFILL_TYPE_MIDDLE_NAME",
        "AUTOFILL_TYPE_FAMILY_NAME",
        "AUTOFILL_TYPE_NAME_SUFFIX",
        "AUTOFILL_TYPE_NICKNAME",
        "AUTOFILL_TYPE_JOB_TITLE",
        "AUTOFILL_TYPE_ORGANIZATION_NAME",
        "AUTOFILL_TYPE_LOCATION",
        "AUTOFILL_TYPE_ADDRESS",
        "AUTOFILL_TYPE_ADDRESS_LINE1",
        "AUTOFILL_TYPE_ADDRESS_LINE2",
        "AUTOFILL_TYPE_ADDRESS_CITY",
        "AUTOFILL_TYPE_ADDRESS_STATE",
        "AUTOFILL_TYPE_ADDRESS_CITY_STATE",
        "AUTOFILL_TYPE_SUBLOCALITY",
        "AUTOFILL_TYPE_COUNTRY_NAME",
        "AUTOFILL_TYPE_POSTAL_CODE",
        "AUTOFILL_TYPE_PHONE",
        "AUTOFILL_TYPE_EMAIL",
        "AUTOFILL_TYPE_URL",
        "AUTOFILL_TYPE_CARD_NUMBER",
        "AUTOFILL_TYPE_CARD_SECURITY_CODE",
        "AUTOFILL_TYPE_CARD_EXPIRATION_DATE",
        "AUTOFILL_TYPE_CARD_EXPIRATION_DAY",
        "AUTOFILL_TYPE_CARD_EXPIRATION_MONTH",
        "AUTOFILL_TYPE_CARD_EXPIRATION_YEAR",
        "AUTOFILL_TYPE_NEW_PASSWORD",
        "AUTOFILL_TYPE_ONE_TIME_CODE",
        "AUTOLINK_MAP_ADDRESSES",
        "AUTOLINK_ALL",
        "AUTOLINK_CALENDAR",
        "AUTOLINK_URLS",
        "AUTOLINK_NONE",
        "AUTOLINK_PHONE_NUMBERS",
        "AUTOLINK_SHIPMENT_TRACKING_NUMBER",
        "AUTOLINK_FLIGHT_NUMBER",
        "AUTOLINK_LOOKUP_SUGGESTION",
        "AUTOLINK_MONEY",
        "AUTOLINK_PHYSICAL_VALUE",
        "AUTOLINK_EMAIL_ADDRESSES",
        "BLEND_MODE_CLEAR",
        "BLEND_MODE_COLOR",
        "BLEND_MODE_COLOR_BURN",
        "BLEND_MODE_COLOR_DODGE",
        "BLEND_MODE_COPY",
        "BLEND_MODE_DARKEN",
        "BLEND_MODE_DESTINATION_ATOP",
        "BLEND_MODE_DESTINATION_IN",
        "BLEND_MODE_DESTINATION_OUT",
        "BLEND_MODE_DESTINATION_OVER",
        "BLEND_MODE_DIFFERENCE",
        "BLEND_MODE_EXCLUSION",
        "BLEND_MODE_HARD_LIGHT",
        "BLEND_MODE_HUE",
        "BLEND_MODE_LIGHTEN",
        "BLEND_MODE_LUMINOSITY",
        "BLEND_MODE_MULTIPLY",
        "BLEND_MODE_NORMAL",
        "BLEND_MODE_OVERLAY",
        "BLEND_MODE_PLUS_DARKER",
        "BLEND_MODE_PLUS_LIGHTER",
        "BLEND_MODE_SATURATION",
        "BLEND_MODE_SCREEN",
        "BLEND_MODE_SOFT_LIGHT",
        "BLEND_MODE_SOURCE_ATOP",
        "BLEND_MODE_SOURCE_IN",
        "BLEND_MODE_SOURCE_OUT",
        "BLEND_MODE_XOR",
        "BUTTON_STYLE_FILLED",
        "BUTTON_STYLE_OUTLINED",
        "BUTTON_STYLE_TEXT",
        "BUTTON_STYLE_OPTION_POSITIVE",
        "BUTTON_STYLE_OPTION_NEGATIVE",
        "BUTTON_STYLE_OPTION_NEUTRAL",
        "DATE_PICKER_STYLE_AUTOMATIC",
        "DATE_PICKER_STYLE_WHEELS",
        "DATE_PICKER_STYLE_COMPACT",
        "DATE_PICKER_STYLE_INLINE",
        "HINT_TYPE_STATIC",
        "HINT_TYPE_ANIMATED",
        "HYPHEN_NONE",
        "HYPHEN_NORMAL",
        "HYPHEN_FULL",
        "HYPHEN_NORMAL_FAST",
        "HYPHEN_FULL_FAST",
        "BREAK_SIMPLE",
        "BREAK_HIGH_QUALITY",
        "BREAK_BALANCED",
        "TEXT_ELLIPSIZE_TRUNCATE_WORD_WRAP",
        "TEXT_ELLIPSIZE_TRUNCATE_CHAR_WRAP",
        "TEXT_ELLIPSIZE_TRUNCATE_CLIP",
        "TEXT_ELLIPSIZE_TRUNCATE_START",
        "TEXT_ELLIPSIZE_TRUNCATE_MIDDLE",
        "TEXT_ELLIPSIZE_TRUNCATE_END",
        "TEXT_ELLIPSIZE_TRUNCATE_MARQUEE",
        "TEXT_ELLIPSIZE_TRUNCATE_NONE",
        "EXTEND_EDGE_TOP",
        "EXTEND_EDGE_BOTTOM",
        "EXTEND_EDGE_LEFT",
        "EXTEND_EDGE_RIGHT",
        "EXTEND_EDGE_NONE",
        "EXTEND_EDGE_ALL",
        "FACE_DOWN",
        "FACE_UP",
        "FILL",
        "HIDDEN_BEHAVIOR_GONE",
        "HIDDEN_BEHAVIOR_INVISIBLE",
        "INPUT_BORDERSTYLE_BEZEL",
        "INPUT_BORDERSTYLE_LINE",
        "INPUT_BORDERSTYLE_NONE",
        "INPUT_BORDERSTYLE_ROUNDED",
        "INPUT_BORDERSTYLE_UNDERLINED",
        "INPUT_BORDERSTYLE_FILLED",
        "INPUT_BUTTONMODE_ALWAYS",
        "INPUT_BUTTONMODE_NEVER",
        "INPUT_BUTTONMODE_ONBLUR",
        "INPUT_BUTTONMODE_ONFOCUS",
        "INPUT_TYPE_CLASS_NUMBER",
        "INPUT_TYPE_CLASS_TEXT",
        "KEYBOARD_APPEARANCE_DEFAULT",
        "KEYBOARD_APPEARANCE_DARK",
        "KEYBOARD_APPEARANCE_LIGHT",
        "KEYBOARD_TYPE_DECIMAL_PAD",
        "KEYBOARD_TYPE_ASCII",
        "KEYBOARD_TYPE_DEFAULT",
        "KEYBOARD_TYPE_EMAIL",
        "KEYBOARD_TYPE_NAMEPHONE_PAD",
        "KEYBOARD_TYPE_NUMBERS_PUNCTUATION",
        "KEYBOARD_TYPE_NUMBER_PAD",
        "KEYBOARD_TYPE_PHONE_PAD",
        "KEYBOARD_TYPE_WEBSEARCH",
        "KEYBOARD_TYPE_TWITTER",
        "KEYBOARD_TYPE_URL",
        "LANDSCAPE_LEFT",
        "LANDSCAPE_RIGHT",
        "LIST_ACCESSORY_TYPE_NONE",
        "LIST_ACCESSORY_TYPE_CHECKMARK",
        "LIST_ACCESSORY_TYPE_DETAIL",
        "LIST_ACCESSORY_TYPE_DISCLOSURE",
        "LIST_ITEM_TEMPLATE_DEFAULT",
        "LIST_ITEM_TEMPLATE_SETTINGS",
        "LIST_ITEM_TEMPLATE_CONTACTS",
        "LIST_ITEM_TEMPLATE_SUBTITLE",
        "NOTIFICATION_DURATION_LONG",
        "NOTIFICATION_DURATION_SHORT",
        "CLIPBOARD_OPTION_LOCAL_ONLY",
        "CLIPBOARD_OPTION_EXPIRATION_DATE",
        "PICKER_TYPE_COUNT_DOWN_TIMER",
        "PICKER_TYPE_DATE",
        "PICKER_TYPE_DATE_AND_TIME",
        "PICKER_TYPE_PLAIN",
        "PICKER_TYPE_TIME",
        "PORTRAIT",
        "RETURNKEY_CONTINUE",
        "RETURNKEY_DEFAULT",
        "RETURNKEY_DONE",
        "RETURNKEY_EMERGENCY_CALL",
        "RETURNKEY_GO",
        "RETURNKEY_GOOGLE",
        "RETURNKEY_JOIN",
        "RETURNKEY_NEXT",
        "RETURNKEY_ROUTE",
        "RETURNKEY_SEARCH",
        "RETURNKEY_SEND",
        "RETURNKEY_YAHOO",
        "SELECTION_STYLE_NONE",
        "SELECTION_STYLE_DEFAULT",
        "SEMANTIC_COLOR_TYPE_DARK",
        "SEMANTIC_COLOR_TYPE_LIGHT",
        "semanticColorType",
        "SIZE",
        "SWITCH_STYLE_CHECKBOX",
        "SWITCH_STYLE_TOGGLE_BUTTON",
        "SWITCH_STYLE_SLIDER",
        "SWITCH_STYLE_CHIP",
        "TABS_STYLE_DEFAULT",
        "TABS_STYLE_BOTTOM_NAVIGATION",
        "TABLE_VIEW_SEPARATOR_STYLE_NONE",
        "TABLE_VIEW_SEPARATOR_STYLE_SINGLE_LINE",
        "TEXT_ALIGNMENT_CENTER",
        "TEXT_ALIGNMENT_JUSTIFY",
        "TEXT_ALIGNMENT_LEFT",
        "TEXT_ALIGNMENT_RIGHT",
        "TEXT_AUTOCAPITALIZATION_ALL",
        "TEXT_AUTOCAPITALIZATION_NONE",
        "TEXT_AUTOCAPITALIZATION_SENTENCES",
        "TEXT_AUTOCAPITALIZATION_WORDS",
        "TEXT_STYLE_HEADLINE",
        "TEXT_STYLE_SUBHEADLINE",
        "TEXT_STYLE_BODY",
        "TEXT_STYLE_FOOTNOTE",
        "TEXT_STYLE_CAPTION1",
        "TEXT_STYLE_CAPTION2",
        "TEXT_STYLE_CALLOUT",
        "TEXT_STYLE_TITLE1",
        "TEXT_STYLE_TITLE2",
        "TEXT_STYLE_TITLE3",
        "TEXT_STYLE_LARGE_TITLE",
        "TEXT_VERTICAL_ALIGNMENT_BOTTOM",
        "TEXT_VERTICAL_ALIGNMENT_CENTER",
        "TEXT_VERTICAL_ALIGNMENT_TOP",
        "UNIT_CM",
        "UNIT_DIP",
        "UNIT_IN",
        "UNIT_MM",
        "UNIT_PX",
        "UNKNOWN",
        "UPSIDE_PORTRAIT",
        "URL_ERROR_AUTHENTICATION",
        "URL_ERROR_BAD_URL",
        "URL_ERROR_CONNECT",
        "URL_ERROR_SSL_FAILED",
        "URL_ERROR_FILE",
        "URL_ERROR_FILE_NOT_FOUND",
        "URL_ERROR_HOST_LOOKUP",
        "URL_ERROR_REDIRECT_LOOP",
        "URL_ERROR_TIMEOUT",
        "URL_ERROR_UNKNOWN",
        "URL_ERROR_UNSUPPORTED_SCHEME",
        "USER_INTERFACE_STYLE_UNSPECIFIED",
        "USER_INTERFACE_STYLE_LIGHT",
        "USER_INTERFACE_STYLE_DARK",
        "availableSystemFontFamilies",
        "backgroundColor",
        "backgroundImage",
        "overrideUserInterfaceStyle",
        "tintColor",
        "userInterfaceStyle",
        "cutoutSize",
        "statusBarHeight"
      ],
      "events": [
        "userinterfacestyle"
      ]
    },
    "CutoutSize": {
      "description": "Dictionary object of parameters for the <a href=\"Titanium.UI.cutoutSize\">Titanium.UI.cutoutSize</a>.",
      "functions": [],
      "properties": [
        "top",
        "left",
        "width",
        "height"
      ],
      "events": []
    },
    "Point": {
      "description": "A pair of coordinates used to describe the location of a <a href=\"Titanium.UI.View\">Titanium.UI.View</a>.",
      "functions": [],
      "properties": [
        "x",
        "y"
      ],
      "events": []
    },
    "Gradient": {
      "description": "A simple object defining a color gradient.",
      "functions": [],
      "properties": [
        "type",
        "startPoint",
        "endPoint",
        "startRadius",
        "endRadius",
        "colors",
        "backfillStart",
        "backfillEnd"
      ],
      "events": []
    },
    "GradientColorRef": {
      "description": "A simple object consisting of a color and an offset.",
      "functions": [],
      "properties": [
        "color",
        "offset"
      ],
      "events": []
    },
    "MinMaxOptions": {
      "description": "An object for setting <code>min</code>/<code>max</code> value pairs.",
      "functions": [],
      "properties": [
        "min",
        "max"
      ],
      "events": []
    },
    "ViewPositionOptions": {
      "description": "Pass an object with the following key-value pairs:\n<ul>\n<li><code>view</code> (Titanium.UI.View): View to insert</li>\n<li><code>position</code> (Number): Position in the <a href=\"Titanium.UI.View.children\">children</a> array of\nthe view elment to replace.</li>\n</ul>",
      "functions": [],
      "properties": [
        "view",
        "position"
      ],
      "events": []
    },
    "Ti.UI.WebView": {
      "description": "The web view allows you to open an HTML5 based view which can load either local or remote content.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "setHtml",
        "canGoBack",
        "canGoForward",
        "evalJS",
        "goBack",
        "goForward",
        "pause",
        "reload",
        "repaint",
        "release",
        "resume",
        "setBasicAuthentication",
        "stopLoading",
        "startListeningToProperties",
        "stopListeningToProperties",
        "takeSnapshot",
        "addUserScript",
        "removeAllUserScripts",
        "addScriptMessageHandler",
        "removeScriptMessageHandler",
        "backForwardList",
        "createPDF",
        "createWebArchive",
        "findString"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "allowFileAccess",
        "allowsLinkPreview",
        "blacklistedURLs",
        "blockedURLs",
        "data",
        "disableBounce",
        "disableContextMenu",
        "enableJavascriptInterface",
        "handlePlatformUrl",
        "configuration",
        "allowedURLSchemes",
        "hideLoadIndicator",
        "assetsDirectory",
        "html",
        "keyboardDisplayRequiresUserAction",
        "ignoreSslError",
        "loading",
        "onCreateWindow",
        "onlink",
        "overScrollMode",
        "cacheMode",
        "pluginState",
        "scrollsToTop",
        "layerType",
        "enableZoomControls",
        "mixedContentMode",
        "scalesPageToFit",
        "url",
        "userAgent",
        "willHandleTouches",
        "lightTouchEnabled",
        "requestHeaders",
        "zoomLevel",
        "scrollbars",
        "allowsBackForwardNavigationGestures",
        "title",
        "progress",
        "cachePolicy",
        "timeout",
        "selectionGranularity",
        "secure",
        "LAYER_TYPE_NONE",
        "LAYER_TYPE_SOFTWARE",
        "LAYER_TYPE_HARDWARE",
        "PDF_PAGE_DIN_A5",
        "PDF_PAGE_DIN_A4",
        "PDF_PAGE_DIN_A3",
        "PDF_PAGE_DIN_A2",
        "PDF_PAGE_DIN_A1"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "beforeload",
        "error",
        "load",
        "onLoadResource",
        "sslerror",
        "blacklisturl|deprecated",
        "blockedurl",
        "message",
        "progress",
        "redirect",
        "handleurl"
      ]
    },
    "SnapshotResult": {
      "description": "The parameter passed to the <a href=\"Titanium.UI.WebView.takeSnapshot\">Titanium.UI.WebView.takeSnapshot</a> callback.",
      "functions": [],
      "properties": [
        "snapshot",
        "success",
        "error"
      ],
      "events": []
    },
    "DataCreationResult": {
      "description": "The parameter passed to the <a href=\"Titanium.UI.WebView.createPDF\">Titanium.UI.WebView.createPDF</a> or <a href=\"Titanium.UI.WebView.createWebArchive\">Titanium.UI.WebView.createWebArchive</a>callback.",
      "functions": [],
      "properties": [
        "data",
        "success",
        "error"
      ],
      "events": []
    },
    "DataCreationResultAndroid": {
      "description": "Success callback in <a href=\"Titanium.UI.WebView.createPDF\">Titanium.UI.WebView.createPDF</a>.",
      "functions": [],
      "properties": [
        "data"
      ],
      "events": []
    },
    "SearchResult": {
      "description": "The parameter passed to the <a href=\"Titanium.UI.WebView.findString\">Titanium.UI.WebView.findString</a>.",
      "functions": [],
      "properties": [
        "success",
        "error"
      ],
      "events": []
    },
    "StringSearchOptions": {
      "description": "The optional options to pass to the <a href=\"Titanium.UI.WebView.findString\">Titanium.UI.WebView.findString</a>. Pass a\ndictionary with one or more of the following string-keys:\n* <code>caseSensitive</code> (Boolean value)\n* <code>backward</code> (Boolean value)\n* <code>wraps</code> (Boolean value)",
      "functions": [],
      "properties": [
        "caseSensitive",
        "backward",
        "wraps"
      ],
      "events": []
    },
    "BackForwardList": {
      "description": "The object returned to the <a href=\"Titanium.UI.WebView.backForwardList\">Titanium.UI.WebView.backForwardList</a> method.",
      "functions": [],
      "properties": [
        "currentItem",
        "backItem",
        "forwardItem",
        "backList",
        "forwardList"
      ],
      "events": []
    },
    "BackForwardListItem": {
      "description": "The object represents a webpage in the back-forward of a web view.",
      "functions": [],
      "properties": [
        "url",
        "initialUrl",
        "title"
      ],
      "events": []
    },
    "OnLinkURLResponse": {
      "description": "An object returned when the <a href=\"Titanium.UI.WebView.onlink\">Titanium.UI.WebView.onlink</a> callback is fired.",
      "functions": [],
      "properties": [
        "url"
      ],
      "events": []
    },
    "UserScriptParams": {
      "description": "Dictionary of options for the <a href=\"Titanium.UI.WebView.addUserScript\">Titanium.UI.WebView.addUserScript</a> method.",
      "functions": [],
      "properties": [
        "source",
        "injectionTime",
        "mainFrameOnly"
      ],
      "events": []
    },
    "setHtmlOptions": {
      "description": "Options used by <a href=\"Titanium.UI.WebView.setHtml\">Titanium.UI.WebView.setHtml</a>",
      "functions": [],
      "properties": [
        "baseURL",
        "mimeType"
      ],
      "events": []
    },
    "Ti.UI.Window": {
      "description": "The Window is an empty drawing surface or container.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "replaceAt",
        "show",
        "stopAnimation",
        "toImage",
        "convertPointToView",
        "getViewById",
        "addSharedElement",
        "close",
        "hideNavBar",
        "hideTabBar|deprecated",
        "open",
        "removeAllSharedElements",
        "setToolbar",
        "showNavBar",
        "showTabBar|deprecated",
        "showToolbar",
        "hideToolbar"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "accessibilityDisableLongPress",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundDisabledColor",
        "backgroundDisabledImage",
        "backgroundFocusedColor",
        "backgroundFocusedImage",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundSelectedColor",
        "backgroundSelectedImage",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "elevation",
        "filterTouchesWhenObscured",
        "focusable",
        "height",
        "hiddenBehavior",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "overrideCurrentAnimation",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "rotationX",
        "rotationY",
        "scaleX",
        "scaleY",
        "size",
        "softKeyboardOnFocus",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "touchFeedback",
        "touchFeedbackColor",
        "transform",
        "translationX",
        "translationY",
        "translationZ",
        "transitionName",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "keepScreenOn",
        "activity",
        "backButtonTitle",
        "backButtonTitleImage",
        "barColor",
        "barImage",
        "closed",
        "exitOnClose",
        "extendEdges",
        "flagSecure",
        "focused",
        "includeOpaqueBars",
        "autoAdjustScrollViewInsets",
        "extendSafeArea",
        "fullscreen",
        "homeIndicatorAutoHidden",
        "hideShadow",
        "hidesBarsOnSwipe",
        "hidesBarsOnTap",
        "hidesBarsWhenKeyboardAppears",
        "hidesBackButton",
        "largeTitleEnabled",
        "hidesSearchBarWhenScrolling",
        "largeTitleDisplayMode",
        "leftNavButton",
        "leftNavButtons",
        "modal",
        "navBarHidden",
        "navTintColor",
        "navigationWindow",
        "onBack",
        "orientationModes",
        "orientation",
        "rightNavButton",
        "rightNavButtons",
        "safeAreaPadding",
        "shadowImage",
        "splitActionBar",
        "statusBarStyle",
        "statusBarColor",
        "sustainedPerformanceMode",
        "swipeToClose",
        "tabBarHidden",
        "theme",
        "title",
        "titleAttributes",
        "titleControl",
        "titleImage",
        "titlePrompt",
        "titleid",
        "titlepromptid",
        "toolbar",
        "transitionAnimation",
        "translucent",
        "windowFlags",
        "uiFlags",
        "windowSoftInputMode",
        "windowPixelFormat",
        "activityExitTransition",
        "activityEnterTransition",
        "activityReturnTransition",
        "activityReenterTransition",
        "activitySharedElementExitTransition",
        "activitySharedElementEnterTransition",
        "activitySharedElementReturnTransition",
        "activitySharedElementReenterTransition"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longclick",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "androidback",
        "androidcamera",
        "androidfocus",
        "androidsearch",
        "androidvoldown",
        "androidvolup",
        "blur",
        "close",
        "open"
      ]
    },
    "openWindowParams": {
      "description": "Dictionary of options for the <a href=\"Titanium.UI.Window.open\">Titanium.UI.Window.open</a> method.",
      "functions": [],
      "properties": [
        "animated",
        "bottom",
        "fullscreen",
        "height",
        "left",
        "modal",
        "forceModal",
        "modalStyle",
        "modalTransitionStyle",
        "navBarHidden",
        "right",
        "top",
        "transition",
        "width",
        "activityEnterAnimation",
        "activityExitAnimation"
      ],
      "events": []
    },
    "windowToolbarParam": {
      "description": "Dictionary of options for the <a href=\"Titanium.UI.Window.setToolbar\">Titanium.UI.Window.setToolbar</a> method.",
      "functions": [],
      "properties": [
        "translucent",
        "animated",
        "barColor",
        "tintColor"
      ],
      "events": []
    },
    "closeWindowParams": {
      "description": "Dictionary of options for the <a href=\"Titanium.UI.Window.close\">Titanium.UI.Window.close</a> method.",
      "functions": [],
      "properties": [
        "animated",
        "animationDuration",
        "animationStyle",
        "activityEnterAnimation",
        "activityExitAnimation"
      ],
      "events": []
    },
    "titleAttributesParams": {
      "description": "Dictionary of options for the <a href=\"Titanium.UI.Window.titleAttributes\">Titanium.UI.Window.titleAttributes</a> property.",
      "functions": [],
      "properties": [
        "color",
        "font",
        "shadow"
      ],
      "events": []
    },
    "shadowDict": {
      "description": "Dictionary describing the shadow effect for text.",
      "functions": [],
      "properties": [
        "blurRadius",
        "color",
        "offset"
      ],
      "events": []
    },
    "Ti.UI.iOS.AlertDialogStyle": {
      "description": "A set of constants for the style that can be used for the <code>style</code> property of\n<a href=\"Titanium.UI.AlertDialog\">Titanium.UI.AlertDialog</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "DEFAULT",
        "PLAIN_TEXT_INPUT",
        "SECURE_TEXT_INPUT",
        "LOGIN_AND_PASSWORD_INPUT"
      ],
      "events": []
    },
    "Ti.UI.iOS.AnchorAttachmentBehavior": {
      "description": "Dynamic behavior to support connections between an anchor point and an item.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "anchor",
        "damping",
        "distance",
        "frequency",
        "item",
        "offset"
      ],
      "events": []
    },
    "Ti.UI.iOS.AnimationStyle": {
      "description": "A set of constants for the animation styles used for view transitions.\nOne of the group of animation style constants\n<ul>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.CURL_DOWN\">CURL_DOWN</a></li>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.CURL_UP\">CURL_UP</a></li>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.FLIP_FROM_LEFT\">FLIP_FROM_LEFT</a></li>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.FLIP_FROM_RIGHT\">FLIP_FROM_RIGHT</a></li>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.FLIP_FROM_TOP\">FLIP_FROM_TOP</a></li>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.FLIP_FROM_BOTTOM\">FLIP_FROM_BOTTOM</a></li>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.CROSS_DISSOLVE\">CROSS_DISSOLVE</a></li>\n<li><a href=\"Titanium.UI.iOS.AnimationStyle.NONE\">NONE</a></li>\n</ul>",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "CURL_DOWN",
        "CURL_UP",
        "FLIP_FROM_LEFT",
        "FLIP_FROM_RIGHT",
        "FLIP_FROM_TOP",
        "FLIP_FROM_BOTTOM",
        "CROSS_DISSOLVE",
        "NONE"
      ],
      "events": []
    },
    "Ti.UI.iOS.Animator": {
      "description": "Provides support for the built-in iOS dynamic animations",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addBehavior",
        "removeAllBehaviors",
        "removeBehavior",
        "startAnimator",
        "stopAnimator",
        "updateItemUsingCurrentState"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "behaviors",
        "referenceView",
        "running"
      ],
      "events": [
        "pause",
        "resume"
      ]
    },
    "ShortcutParams": {
      "description": "Object of options for <a href=\"Titanium.UI.iOS.ApplicationShortcuts.addDynamicShortcut\">Titanium.UI.iOS.ApplicationShortcuts.addDynamicShortcut</a>.",
      "functions": [],
      "properties": [
        "identifier",
        "title",
        "subtitle",
        "icon",
        "userInfo"
      ],
      "events": []
    },
    "Ti.UI.iOS.BlurView": {
      "description": "A <a href=\"Titanium.UI.iOS.BlurView\">Titanium.UI.iOS.BlurView</a> object gives you an easy way implement some complex visual effects.\nThe blur effect is applied to every view the blur view is added to by default. You can also place the\nblur view above other views and all visible views layered under the blur view are blurred as well.\nFor more information on BlurView, please refer to the official <a href=\"https://developer.apple.com/documentation/uikit/uivisualeffectview\">Apple documentation</a>.\nNote: Apple introduced two new constants <a href=\"Titanium.UI.iOS.BLUR_EFFECT_STYLE_REGULAR\">Titanium.UI.iOS.BLUR_EFFECT_STYLE_REGULAR</a> and <a href=\"Titanium.UI.iOS.BLUR_EFFECT_STYLE_PROMINENT\">Titanium.UI.iOS.BLUR_EFFECT_STYLE_PROMINENT</a> in\niOS 10. These are internally mapped to <a href=\"Titanium.UI.iOS.BLUR_EFFECT_STYLE_LIGHT\">Titanium.UI.iOS.BLUR_EFFECT_STYLE_LIGHT</a> and <a href=\"Titanium.UI.iOS.BLUR_EFFECT_STYLE_EXTRA_LIGHT\">Titanium.UI.iOS.BLUR_EFFECT_STYLE_EXTRA_LIGHT</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "height",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "size",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "transform",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "effect"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "keypressed",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap"
      ]
    },
    "Ti.UI.iOS.CollisionBehavior": {
      "description": "Dynamic behavior to support collisions between items and boundaries.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addBoundary",
        "addItem",
        "removeAllBoundaries",
        "removeBoundary",
        "removeItem"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "boundaryIdentifiers",
        "collisionMode",
        "items",
        "referenceInsets",
        "treatReferenceAsBoundary"
      ],
      "events": [
        "boundarycollision",
        "itemcollision"
      ]
    },
    "BoundaryIdentifier": {
      "description": "Dictionary to specify a boundary identifier for <a href=\"Titanium.UI.iOS.CollisionBehavior.addBoundary\">Titanium.UI.iOS.CollisionBehavior.addBoundary</a>.",
      "functions": [],
      "properties": [
        "identifier",
        "point1",
        "point2"
      ],
      "events": []
    },
    "Ti.UI.iOS.CoverFlowView": {
      "description": "The cover flow view is a container showing animated three-dimensional images in a style\nconsistent with the cover flow presentation style used for iPod, iTunes, and file browsing.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "toImage",
        "convertPointToView",
        "getViewById",
        "setImage"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "height",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "size",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "transform",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "images",
        "selected"
      ],
      "events": [
        "click",
        "keypressed",
        "postlayout",
        "rotate",
        "change"
      ]
    },
    "CoverFlowImageType": {
      "description": "Simple object for defining a single image in a cover flow view.",
      "functions": [],
      "properties": [
        "image",
        "width",
        "height"
      ],
      "events": []
    },
    "Ti.UI.iOS.DocumentViewer": {
      "description": "A DocumentViewer provides in-app support for managing user interactions with files on the\nlocal system.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "hide",
        "show"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "name",
        "url",
        "annotation",
        "title"
      ],
      "events": [
        "load",
        "menu",
        "unload"
      ]
    },
    "DocumentViewerOptions": {
      "description": "A simple object for specifying options when showing or dismissing a <a href=\"Titanium.UI.iOS.DocumentViewer\">Titanium.UI.iOS.DocumentViewer</a>.",
      "functions": [],
      "properties": [
        "animated",
        "view"
      ],
      "events": []
    },
    "Ti.UI.iOS.DynamicItemBehavior": {
      "description": "Base dynamic configuration for an item.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addAngularVelocityForItem",
        "addItem",
        "addLinearVelocityForItem",
        "angularVelocityForItem",
        "linearVelocityForItem",
        "removeItem"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "allowsRotation",
        "angularResistance",
        "density",
        "elasticity",
        "friction",
        "items",
        "resistance"
      ],
      "events": []
    },
    "Ti.UI.iOS.FeedbackGenerator": {
      "description": "The feedback generator API is introduced in iOS 10 to handle the haptic feedback when using an iPhone 7 or\nlater devices.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "prepare",
        "selectionChanged",
        "impactOccurred",
        "notificationOccurred"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "type",
        "style"
      ],
      "events": []
    },
    "Ti.UI.iOS.GravityBehavior": {
      "description": "Gravitational force to apply to an item.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addItem",
        "removeItem"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "angle",
        "gravityDirection",
        "items",
        "magnitude"
      ],
      "events": []
    },
    "Ti.UI.iOS.ListViewStyle": {
      "description": "A set of constants for the style that can be used for the <code>style</code> property of\n<a href=\"Titanium.UI.ListView\">Titanium.UI.ListView</a>.",
      "functions": [],
      "properties": [
        "apiName",
        "GROUPED",
        "PLAIN",
        "INSET_GROUPED"
      ],
      "events": []
    },
    "Ti.UI.iOS.LivePhoto": {
      "description": "Abstract object representing a live photo used in <a href=\"Titanium.UI.iOS.LivePhotoView\">Titanium.UI.iOS.LivePhotoView</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.UI.iOS.LivePhotoView": {
      "description": "A view to display a <a href=\"Titanium.UI.iOS.LivePhoto\">Titanium.UI.iOS.LivePhoto</a> object introduced in iOS 9.1.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "removeAllChildren",
        "replaceAt",
        "show",
        "toImage",
        "convertPointToView",
        "getViewById",
        "startPlaybackWithStyle",
        "stopPlayback"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "height",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "size",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "transform",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "livePhoto",
        "muted"
      ],
      "events": [
        "keypressed",
        "rotate",
        "start",
        "stop"
      ]
    },
    "Ti.UI.iOS.MenuPopup": {
      "description": "A menu popup provides the ability to create custom tooltip options using the <code>items</code> property\ncovering the native <code>UIMenuController</code> class.\nSee also:\n<ul>\n<li><a href=\"https://developer.apple.com/documentation/uikit/uimenucontroller\">iOS Developer Library: UIMenuController</a></li>\n</ul>",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "show",
        "hide",
        "isVisible"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "items"
      ],
      "events": [
        "click"
      ]
    },
    "MenuPopupShowParams": {
      "description": "Dictionary of options for showing a menu popup with <a href=\"Titanium.UI.iOS.MenuPopup.show\">Titanium.UI.iOS.MenuPopup.show</a>.",
      "functions": [],
      "properties": [
        "view",
        "animated",
        "arrowDirection"
      ],
      "events": []
    },
    "Ti.UI.iOS.PreviewAction": {
      "description": "A PreviewAction provides options to configure actions used by the iOS 9 3D-Touch &quot;Peek and Pop&quot;\nfeature.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "title",
        "style"
      ],
      "events": [
        "click"
      ]
    },
    "Ti.UI.iOS.PreviewActionGroup": {
      "description": "A PreviewActionGroup provides options to configure a group of actions used by the iOS9 3D-Touch\nfeature &quot;Peek and Pop&quot;.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "title",
        "style",
        "actions"
      ],
      "events": []
    },
    "Ti.UI.iOS.PreviewContext": {
      "description": "A PreviewContext provides options to configure the iOS 9 3D-Touch &quot;Peek and Pop&quot; feature.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "actions",
        "contentHeight",
        "preview"
      ],
      "events": [
        "peek",
        "pop"
      ]
    },
    "Ti.UI.iOS.ProgressBarStyle": {
      "description": "A set of constants for the bar styles used on the <code>style</code> property of <a href=\"Titanium.UI.ProgressBar\">Titanium.UI.ProgressBar</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "BAR",
        "DEFAULT",
        "PLAIN"
      ],
      "events": []
    },
    "Ti.UI.iOS.PushBehavior": {
      "description": "Continuous or instantaneous force to apply to an item.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "addItem",
        "removeItem"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "active",
        "angle",
        "items",
        "magnitude",
        "pushDirection",
        "pushMode"
      ],
      "events": []
    },
    "Ti.UI.iOS.RowAnimationStyle": {
      "description": "A set of constants for the Animation Styles used for transition on table view rows.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "BOTTOM",
        "FADE",
        "LEFT",
        "NONE",
        "RIGHT",
        "TOP"
      ],
      "events": []
    },
    "Ti.UI.iOS.ScrollIndicatorStyle": {
      "description": "A set of constants for the styles available for scrollbars used with <a href=\"Titanium.UI.ScrollView.scrollIndicatorStyle\">Titanium.UI.ScrollView.scrollIndicatorStyle</a> and <a href=\"Titanium.UI.TableView.scrollIndicatorStyle\">Titanium.UI.TableView.scrollIndicatorStyle</a> properties.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "BLACK",
        "DEFAULT",
        "WHITE"
      ],
      "events": []
    },
    "Ti.UI.iOS.SnapBehavior": {
      "description": "Dynamic behavior defining an item's movement to a specific point.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "damping",
        "item",
        "snapPoint"
      ],
      "events": []
    },
    "Ti.UI.iOS.SplitWindow": {
      "description": "A SplitWindow is a window that manages the presentation of two side-by-side view\ncontrollers.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "add",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "remove",
        "replaceAt",
        "show",
        "toImage",
        "convertPointToView",
        "getViewById",
        "close",
        "hideNavBar",
        "hideTabBar|deprecated",
        "open",
        "showNavBar",
        "showTabBar|deprecated",
        "showToolbar",
        "hideToolbar",
        "setShowMasterInPortrait",
        "setMasterIsOverlayed"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "children",
        "clipMode",
        "height",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "size",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "transform",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "backButtonTitle",
        "backButtonTitleImage",
        "barColor",
        "barImage",
        "closed",
        "extendEdges",
        "focused",
        "includeOpaqueBars",
        "autoAdjustScrollViewInsets",
        "extendSafeArea",
        "fullscreen",
        "homeIndicatorAutoHidden",
        "hideShadow",
        "hidesBarsOnSwipe",
        "hidesBarsOnTap",
        "hidesBarsWhenKeyboardAppears",
        "hidesBackButton",
        "largeTitleEnabled",
        "hidesSearchBarWhenScrolling",
        "largeTitleDisplayMode",
        "leftNavButton",
        "leftNavButtons",
        "modal",
        "navBarHidden",
        "navTintColor",
        "navigationWindow",
        "orientationModes",
        "orientation",
        "rightNavButton",
        "rightNavButtons",
        "safeAreaPadding",
        "shadowImage",
        "statusBarStyle",
        "tabBarHidden",
        "title",
        "titleAttributes",
        "titleControl",
        "titleImage",
        "titlePrompt",
        "titleid",
        "titlepromptid",
        "toolbar",
        "translucent",
        "detailView",
        "masterView",
        "showMasterInPortrait",
        "masterIsOverlayed",
        "masterViewVisible",
        "portraitSplit",
        "landscapeSplit"
      ],
      "events": [
        "click",
        "dblclick",
        "doubletap",
        "focus",
        "keypressed",
        "longpress",
        "pinch",
        "postlayout",
        "rotate",
        "singletap",
        "swipe",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "twofingertap",
        "blur",
        "close",
        "open"
      ]
    },
    "Ti.UI.iOS.StatusBar": {
      "description": "A set of constants for the status bar style.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "ANIMATION_STYLE_NONE",
        "ANIMATION_STYLE_SLIDE",
        "ANIMATION_STYLE_FADE",
        "DEFAULT",
        "GRAY",
        "GREY",
        "LIGHT_CONTENT",
        "DARK_CONTENT"
      ],
      "events": []
    },
    "Ti.UI.iOS.Stepper": {
      "description": "A widget used to increment and decrement a value.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "animate",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "toImage",
        "convertPointToView",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "accessibilityHidden",
        "accessibilityHint",
        "accessibilityLabel",
        "accessibilityValue",
        "anchorPoint",
        "animatedCenter",
        "backgroundColor",
        "backgroundGradient",
        "backgroundImage",
        "backgroundRepeat",
        "backgroundLeftCap",
        "backgroundTopCap",
        "borderColor",
        "borderRadius",
        "borderWidth",
        "bottom",
        "center",
        "clipMode",
        "height",
        "horizontalMotionEffect",
        "id",
        "left",
        "layout",
        "opacity",
        "pullBackgroundColor",
        "previewContext",
        "right",
        "rect",
        "rotation",
        "size",
        "tintColor",
        "tooltip",
        "top",
        "touchEnabled",
        "transform",
        "verticalMotionEffect",
        "viewShadowRadius",
        "viewShadowColor",
        "viewShadowOffset",
        "visible",
        "width",
        "horizontalWrap",
        "zIndex",
        "enabled",
        "value",
        "continuous",
        "autorepeat",
        "wraps",
        "minimum",
        "maximum",
        "steps",
        "decrementImage",
        "decrementDisabledImage",
        "incrementImage",
        "incrementDisabledImage"
      ],
      "events": [
        "click",
        "dblclick",
        "rotate",
        "touchcancel",
        "touchend",
        "touchmove",
        "touchstart",
        "change"
      ]
    },
    "Ti.UI.iOS.SystemButton": {
      "description": "A set of constants for creating standard iOS system buttons.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "ACTION",
        "ACTIVITY",
        "ADD",
        "BOOKMARKS",
        "CAMERA",
        "CANCEL",
        "COMPOSE",
        "CONTACT_ADD",
        "DISCLOSURE",
        "DONE",
        "EDIT",
        "FAST_FORWARD",
        "FIXED_SPACE",
        "FLEXIBLE_SPACE",
        "INFO_DARK",
        "INFO_LIGHT",
        "ORGANIZE",
        "PAUSE",
        "PLAY",
        "REFRESH",
        "REPLY",
        "REWIND",
        "SAVE",
        "SPINNER",
        "STOP",
        "TRASH"
      ],
      "events": []
    },
    "Ti.UI.iOS.SystemIcon": {
      "description": "A set of constants for the system icon styles that can be used on a tab group tab.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "BOOKMARKS",
        "CONTACTS",
        "DOWNLOADS",
        "FAVORITES",
        "FEATURED",
        "HISTORY",
        "MORE",
        "MOST_RECENT",
        "MOST_VIEWED",
        "RECENTS",
        "SEARCH",
        "TOP_RATED"
      ],
      "events": []
    },
    "BarItemType": {
      "description": "Object describing a button bar or tabbed bar item.",
      "functions": [],
      "properties": [
        "title",
        "image",
        "width",
        "enabled",
        "accessibilityLabel"
      ],
      "events": []
    },
    "Ti.UI.iOS.TableViewStyle": {
      "description": "A set of constants for the style that can be used for the <code>style</code> property of\n<a href=\"Titanium.UI.TableView\">Titanium.UI.TableView</a> and <a href=\"Titanium.UI.ListView\">Titanium.UI.ListView</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "GROUPED",
        "PLAIN",
        "INSET_GROUPED"
      ],
      "events": []
    },
    "Ti.UI.iOS.TransitionAnimation": {
      "description": "A transition animation when opening or closing windows in a\n<a href=\"Titanium.UI.NavigationWindow\">Titanium.UI.NavigationWindow</a> or <a href=\"Titanium.UI.Tab\">Titanium.UI.Tab</a>.\nUse this proxy with the Window's\n<a href=\"Titanium.UI.Window.transitionAnimation\">transitionAnimation</a> property.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "duration",
        "transitionFrom",
        "transitionTo"
      ],
      "events": []
    },
    "Ti.UI.iOS.ViewAttachmentBehavior": {
      "description": "Dynamic behavior to support connections between two items.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "anchorItem",
        "anchorOffset",
        "damping",
        "distance",
        "frequency",
        "item",
        "itemOffset"
      ],
      "events": []
    },
    "Ti.UI.iOS.WebViewConfiguration": {
      "description": "A collection of properties used to initialize a web view.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "preferences",
        "selectionGranularity",
        "mediaTypesRequiringUserActionForPlayback",
        "suppressesIncrementalRendering",
        "allowsInlineMediaPlayback",
        "allowsAirPlayMediaPlayback",
        "allowsPictureInPictureMediaPlayback",
        "processPool"
      ],
      "events": []
    },
    "WebViewPreferencesObject": {
      "description": "The parameter passed to the <a href=\"Titanium.UI.iOS.WebViewConfiguration.preferences\">Titanium.UI.iOS.WebViewConfiguration.preferences</a> method.",
      "functions": [],
      "properties": [
        "minimumFontSize",
        "javaScriptEnabled",
        "javaScriptCanOpenWindowsAutomatically"
      ],
      "events": []
    },
    "Ti.UI.iOS.WebViewDecisionHandler": {
      "description": "It represents the decision handler to tell to webview, whether allow or cancel the navigation.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "invoke"
      ],
      "properties": [
        "bubbleParent",
        "apiName"
      ],
      "events": []
    },
    "Ti.UI.iOS.WebViewProcessPool": {
      "description": "It represents a pool of Web Content processes.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName"
      ],
      "events": []
    },
    "Ti.UI.iOS": {
      "description": "Apple iOS specific UI capabilities.  All properties, methods and events in this namespace will\nonly work on Apple iOS devices.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createLivePhotoBadge",
        "systemImage",
        "createAnchorAttachmentBehavior",
        "createAnimator",
        "createBlurView",
        "createCollisionBehavior",
        "createCoverFlowView",
        "createDocumentViewer",
        "createDynamicItemBehavior",
        "createGravityBehavior",
        "createLivePhotoView",
        "createMenuPopup",
        "createNavigationWindow|deprecated",
        "createPreviewAction",
        "createPreviewActionGroup",
        "createPreviewContext",
        "createPushBehavior",
        "createSnapBehavior",
        "createSplitWindow",
        "createStepper",
        "createSystemButton",
        "createTabbedBar|deprecated",
        "createToolbar|deprecated",
        "createTransitionAnimation",
        "createViewAttachmentBehavior",
        "createWebViewConfiguration",
        "createWebViewDecisionHandler",
        "createWebViewProcessPool"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "LARGE_TITLE_DISPLAY_MODE_AUTOMATIC",
        "LARGE_TITLE_DISPLAY_MODE_ALWAYS",
        "LARGE_TITLE_DISPLAY_MODE_NEVER",
        "LIVEPHOTO_BADGE_OPTIONS_OVER_CONTENT",
        "LIVEPHOTO_BADGE_OPTIONS_LIVE_OFF",
        "ALERT_SEVERITY_DEFAULT",
        "ALERT_SEVERITY_CRITICAL",
        "BLUR_EFFECT_STYLE_EXTRA_LIGHT",
        "BLUR_EFFECT_STYLE_LIGHT",
        "BLUR_EFFECT_STYLE_DARK",
        "BLUR_EFFECT_STYLE_REGULAR",
        "BLUR_EFFECT_STYLE_PROMINENT",
        "BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL",
        "BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL",
        "BLUR_EFFECT_STYLE_SYSTEM_MATERIAL",
        "BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL",
        "BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL",
        "BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL_LIGHT",
        "BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL_LIGHT",
        "BLUR_EFFECT_STYLE_SYSTEM_MATERIAL_LIGHT",
        "BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL_LIGHT",
        "BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL_LIGHT",
        "BLUR_EFFECT_STYLE_SYSTEM_ULTRA_THIN_MATERIAL_DARK",
        "BLUR_EFFECT_STYLE_SYSTEM_THIN_MATERIAL_DARK",
        "BLUR_EFFECT_STYLE_SYSTEM_MATERIAL_DARK",
        "BLUR_EFFECT_STYLE_SYSTEM_THICK_MATERIAL_DARK",
        "BLUR_EFFECT_STYLE_SYSTEM_CHROME_MATERIAL_DARK",
        "CLIP_MODE_DEFAULT",
        "CLIP_MODE_DISABLED",
        "CLIP_MODE_ENABLED",
        "COLLISION_MODE_ALL",
        "COLLISION_MODE_BOUNDARY",
        "COLLISION_MODE_ITEM",
        "DATE_PICKER_STYLE_AUTOMATIC",
        "DATE_PICKER_STYLE_WHEELS",
        "DATE_PICKER_STYLE_COMPACT",
        "DATE_PICKER_STYLE_INLINE",
        "forceTouchSupported",
        "FEEDBACK_GENERATOR_TYPE_SELECTION",
        "FEEDBACK_GENERATOR_TYPE_IMPACT",
        "FEEDBACK_GENERATOR_TYPE_NOTIFICATION",
        "FEEDBACK_GENERATOR_NOTIFICATION_TYPE_SUCCESS",
        "FEEDBACK_GENERATOR_NOTIFICATION_TYPE_WARNING",
        "FEEDBACK_GENERATOR_NOTIFICATION_TYPE_ERROR",
        "FEEDBACK_GENERATOR_IMPACT_STYLE_LIGHT",
        "FEEDBACK_GENERATOR_IMPACT_STYLE_MEDIUM",
        "FEEDBACK_GENERATOR_IMPACT_STYLE_HEAVY",
        "LIVEPHOTO_PLAYBACK_STYLE_FULL",
        "LIVEPHOTO_PLAYBACK_STYLE_HINT",
        "MENU_POPUP_ARROW_DIRECTION_UP",
        "MENU_POPUP_ARROW_DIRECTION_DOWN",
        "MENU_POPUP_ARROW_DIRECTION_LEFT",
        "MENU_POPUP_ARROW_DIRECTION_RIGHT",
        "MENU_POPUP_ARROW_DIRECTION_DEFAULT",
        "MODAL_PRESENTATION_CURRENT_CONTEXT",
        "MODAL_PRESENTATION_OVER_CURRENT_CONTEXT",
        "MODAL_PRESENTATION_OVER_CURRENT_FULL_SCREEN",
        "MODAL_PRESENTATION_FORMSHEET",
        "MODAL_PRESENTATION_FULLSCREEN",
        "MODAL_PRESENTATION_PAGESHEET",
        "MODAL_TRANSITION_STYLE_COVER_VERTICAL",
        "MODAL_TRANSITION_STYLE_CROSS_DISSOLVE",
        "MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL",
        "MODAL_TRANSITION_STYLE_PARTIAL_CURL",
        "PUSH_MODE_CONTINUOUS",
        "PUSH_MODE_INSTANTANEOUS",
        "PREVIEW_ACTION_STYLE_DEFAULT",
        "PREVIEW_ACTION_STYLE_SELECTED",
        "PREVIEW_ACTION_STYLE_DESTRUCTIVE",
        "ROW_ACTION_STYLE_DEFAULT",
        "ROW_ACTION_STYLE_DESTRUCTIVE",
        "ROW_ACTION_STYLE_NORMAL",
        "SCROLL_DECELERATION_RATE_FAST",
        "SCROLL_DECELERATION_RATE_NORMAL",
        "KEYBOARD_DISMISS_MODE_NONE",
        "KEYBOARD_DISMISS_MODE_ON_DRAG",
        "KEYBOARD_DISMISS_MODE_INTERACTIVE",
        "SEARCH_BAR_STYLE_PROMINENT",
        "SEARCH_BAR_STYLE_MINIMAL",
        "TABLEVIEW_INDEX_SEARCH",
        "SHORTCUT_ICON_TYPE_COMPOSE",
        "SHORTCUT_ICON_TYPE_PLAY",
        "SHORTCUT_ICON_TYPE_PAUSE",
        "SHORTCUT_ICON_TYPE_ADD",
        "SHORTCUT_ICON_TYPE_LOCATION",
        "SHORTCUT_ICON_TYPE_SEARCH",
        "SHORTCUT_ICON_TYPE_SHARE",
        "SHORTCUT_ICON_TYPE_PROHIBIT",
        "SHORTCUT_ICON_TYPE_CONTACT",
        "SHORTCUT_ICON_TYPE_HOME",
        "SHORTCUT_ICON_TYPE_MARK_LOCATION",
        "SHORTCUT_ICON_TYPE_FAVORITE",
        "SHORTCUT_ICON_TYPE_LOVE",
        "SHORTCUT_ICON_TYPE_CLOUD",
        "SHORTCUT_ICON_TYPE_INVITATION",
        "SHORTCUT_ICON_TYPE_CONFIRMATION",
        "SHORTCUT_ICON_TYPE_MAIL",
        "SHORTCUT_ICON_TYPE_MESSAGE",
        "SHORTCUT_ICON_TYPE_DATE",
        "SHORTCUT_ICON_TYPE_TIME",
        "SHORTCUT_ICON_TYPE_CAPTURE_PHOTO",
        "SHORTCUT_ICON_TYPE_CAPTURE_VIDEO",
        "SHORTCUT_ICON_TYPE_TASK",
        "SHORTCUT_ICON_TYPE_TASK_COMPLETED",
        "SHORTCUT_ICON_TYPE_ALARM",
        "SHORTCUT_ICON_TYPE_BOOKMARK",
        "SHORTCUT_ICON_TYPE_SHUFFLE",
        "SHORTCUT_ICON_TYPE_AUDIO",
        "SHORTCUT_ICON_TYPE_UPDATE",
        "appBadge",
        "appSupportsShakeToEdit",
        "statusBarBackgroundColor",
        "CREDENTIAL_PERSISTENCE_NONE",
        "CREDENTIAL_PERSISTENCE_FOR_SESSION",
        "CREDENTIAL_PERSISTENCE_PERMANENT",
        "CREDENTIAL_PERSISTENCE_SYNCHRONIZABLE",
        "AUDIOVISUAL_MEDIA_TYPE_NONE",
        "AUDIOVISUAL_MEDIA_TYPE_AUDIO",
        "AUDIOVISUAL_MEDIA_TYPE_VIDEO",
        "AUDIOVISUAL_MEDIA_TYPE_ALL",
        "CACHE_POLICY_USE_PROTOCOL_CACHE_POLICY",
        "CACHE_POLICY_RELOAD_IGNORING_LOCAL_CACHE_DATA",
        "CACHE_POLICY_RETURN_CACHE_DATA_ELSE_LOAD",
        "CACHE_POLICY_RETURN_CACHE_DATA_DONT_LOAD",
        "SELECTION_GRANULARITY_DYNAMIC",
        "SELECTION_GRANULARITY_CHARACTER",
        "ACTION_POLICY_CANCEL",
        "ACTION_POLICY_ALLOW",
        "INJECTION_TIME_DOCUMENT_START",
        "INJECTION_TIME_DOCUMENT_END"
      ],
      "events": []
    },
    "SystemImageParameters": {
      "description": "Dictionary object of parameters for the 2nd parameter of the &lt;Titanium.UI.iOS.systemButton&gt; method\nto pass additional configuration options like <code>weight</code> and <code>size</code>. Available in Titanium SDK 10.1.0\nand later.",
      "functions": [],
      "properties": [
        "weight",
        "size"
      ],
      "events": []
    },
    "Ti.UI.iPad.Popover": {
      "description": "A Popover is used to manage the presentation of content in a popover.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "clearMotionEffects",
        "hide",
        "insertAt",
        "show",
        "getViewById"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "backgroundColor",
        "height",
        "horizontalMotionEffect",
        "id",
        "rotation",
        "tooltip",
        "verticalMotionEffect",
        "width",
        "arrowDirection",
        "contentView",
        "passthroughViews"
      ],
      "events": [
        "rotate",
        "hide"
      ]
    },
    "ShowPopoverParams": {
      "description": "Dictionary of options for <a href=\"Titanium.UI.iPad.Popover.show\">Titanium.UI.iPad.Popover.show</a>.",
      "functions": [],
      "properties": [
        "animated",
        "rect",
        "view"
      ],
      "events": []
    },
    "Ti.UI.iPad": {
      "description": "iPad specific UI capabilities.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createPopover"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "POPOVER_ARROW_DIRECTION_ANY",
        "POPOVER_ARROW_DIRECTION_DOWN",
        "POPOVER_ARROW_DIRECTION_LEFT",
        "POPOVER_ARROW_DIRECTION_RIGHT",
        "POPOVER_ARROW_DIRECTION_UNKNOWN",
        "POPOVER_ARROW_DIRECTION_UP"
      ],
      "events": []
    },
    "Ti.Utils": {
      "description": "The top-level Utils module, containing a set of JavaScript methods that are often useful when\nbuilding applications.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "base64decode",
        "base64encode",
        "md5HexDigest",
        "sha1",
        "sha256"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.WatchSession": {
      "description": "Used to enable data and file transfers between a watchOS and iOS application.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "activateSession",
        "sendMessage",
        "updateApplicationContext",
        "transferUserInfo",
        "transferFile",
        "transferCurrentComplication",
        "cancelAllUserInfoTransfers",
        "cancelAllFileTransfers",
        "cancelAllTransfers"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "activationState",
        "ACTIVATION_STATE_NOT_ACTIVATED",
        "ACTIVATION_STATE_INACTIVE",
        "ACTIVATION_STATE_ACTIVATED",
        "hasContentPending",
        "remainingComplicationUserInfoTransfers",
        "isSupported",
        "isPaired",
        "isWatchAppInstalled",
        "isComplicationEnabled",
        "isReachable",
        "isActivated",
        "recentApplicationContext"
      ],
      "events": [
        "receivemessage",
        "receiveapplicationcontext",
        "receiveuserinfo",
        "receivefile",
        "watchstatechanged",
        "reachabilitychanged",
        "finishuserinfotransfer",
        "finishfiletransfer",
        "inactive",
        "deactivate",
        "activationCompleted"
      ]
    },
    "MessageReply": {
      "description": "Reply message received from watch app.",
      "functions": [],
      "properties": [
        "message",
        "success",
        "error",
        "code"
      ],
      "events": []
    },
    "Ti.XML.Attr": {
      "description": "Represents an attribute of an <a href=\"Titanium.XML.Element\">Element</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "name",
        "ownerElement",
        "specified",
        "value"
      ],
      "events": []
    },
    "Ti.XML.CDATASection": {
      "description": "Used to include blocks of literal text containing characters that would otherwise need\nto be escaped.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild",
        "appendData",
        "deleteData",
        "insertData",
        "replaceData",
        "substringData",
        "splitText"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "data",
        "length"
      ],
      "events": []
    },
    "Ti.XML.CharacterData": {
      "description": "An interface extending <a href=\"Titanium.XML.Node\">Titanium.XML.Node</a> with a set of attributes and methods for accessing character data in the DOM.\nImplements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-FF21A306\">DOM Level 2 API</a> on Android and iOS. For reasons of compatibility with the javascript engine, text is represented by UTF-8 instead of UTF-16 on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild",
        "appendData",
        "deleteData",
        "insertData",
        "replaceData",
        "substringData"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "data",
        "length"
      ],
      "events": []
    },
    "Ti.XML.Comment": {
      "description": "Represents the contents of an XML comment.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild",
        "appendData",
        "deleteData",
        "insertData",
        "replaceData",
        "substringData"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "data",
        "length"
      ],
      "events": []
    },
    "Ti.XML.DOMImplementation": {
      "description": "The <a href=\"Titanium.XML.DOMImplementation\">Titanium.XML.DOMImplementation</a> interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.Implements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490\">DOM Level 2 API</a> on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "createDocument",
        "createDocumentType",
        "hasFeature"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Ti.XML.Document": {
      "description": "The DOM Document returned from <a href=\"Titanium.XML.parseString\">Titanium.XML.parseString</a>.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild",
        "createAttribute",
        "createAttributeNS",
        "createCDATASection",
        "createComment",
        "createDocumentFragment",
        "createElement",
        "createElementNS",
        "createEntityReference",
        "createProcessingInstruction",
        "createTextNode",
        "getElementById",
        "getElementsByTagName",
        "getElementsByTagNameNS",
        "importNode"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "doctype",
        "documentElement",
        "implementation"
      ],
      "events": []
    },
    "Ti.XML.DocumentFragment": {
      "description": "A lightweight document object used as a container for a group of nodes.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName"
      ],
      "events": []
    },
    "Ti.XML.DocumentType": {
      "description": "Each <a href=\"Titanium.XML.Document\">Titanium.XML.Document</a> has a <code>doctype</code> attribute whose value is either 'null' or a <a href=\"Titanium.XML.DocumentType\">Titanium.XML.DocumentType</a> object.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "entities",
        "internalSubset",
        "name",
        "notations",
        "publicId",
        "systemId"
      ],
      "events": []
    },
    "Ti.XML.Element": {
      "description": "Represents an element in a DOM document, a <a href=\"Titanium.XML.Node\">Titanium.XML.Node</a> defined by a start-tag and end-tag (or an empty tag). Elements may have <a href=\"Titanium.XML.Attr\">attributes</a> associated with them.\nImplements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-745549614\">DOM Level 2 API</a> on Android and iOS with some non-standard extensions.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild",
        "getAttribute",
        "setAttribute",
        "removeAttribute",
        "getAttributeNode",
        "setAttributeNode",
        "removeAttributeNode",
        "getElementsByTagName",
        "getAttributeNS",
        "setAttributeNS",
        "removeAttributeNS",
        "getAttributeNodeNS",
        "setAttributeNodeNS",
        "getElementsByTagNameNS",
        "hasAttribute",
        "hasAttributeNS"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "tagName"
      ],
      "events": []
    },
    "Ti.XML.Entity": {
      "description": "This interface represents an entity, either parsed or unparsed, in an XML document. Note that this models the entity itself not the entity declaration. The nodeName attribute that is inherited from Node contains the name of the entity. An Entity node does not have any parent.\nImplements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-527DCFF2\">DOM Level 2 API</a> on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "notationName",
        "publicId",
        "systemId"
      ],
      "events": []
    },
    "Ti.XML.EntityReference": {
      "description": "Represents an XML entity reference.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName"
      ],
      "events": []
    },
    "Ti.XML.NamedNodeMap": {
      "description": "A key-value paired map that maps String objects to <a href=\"Titanium.XML.Node\">Titanium.XML.Node</a> objects.\nImplements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1780488922\">DOM Level 2 API</a> on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "getNamedItem",
        "setNamedItem",
        "removeNamedItem",
        "item",
        "getNamedItemNS",
        "setNamedItemNS",
        "removeNamedItemNS"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "length"
      ],
      "events": []
    },
    "Ti.XML.Node": {
      "description": "A single node in the <a href=\"Titanium.XML.Document\">Document</a> tree.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName"
      ],
      "events": []
    },
    "Ti.XML.NodeList": {
      "description": "A list of <a href=\"Titanium.XML.Node\">Titanium.XML.Node</a> objects. Implements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-536297177\">DOM Level 2 API</a> on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "item"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "length"
      ],
      "events": []
    },
    "Ti.XML.Notation": {
      "description": "Represents a notation declared in the DTD.  Implements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-5431D1B9\">DOM Level 2 API</a> on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "publicId",
        "systemId"
      ],
      "events": []
    },
    "Ti.XML.ProcessingInstruction": {
      "description": "A way to keep processor-specific information in the text of the document. Implements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1004215813\">DOM Level 2 API</a> on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "data",
        "target"
      ],
      "events": []
    },
    "Ti.XML.Text": {
      "description": "Represents the textual content of an <a href=\"Titanium.XML.Element\">Titanium.XML.Element</a> or <a href=\"Titanium.XML.Attr\">Titanium.XML.Attr</a> Implements the <a href=\"https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1312295772\">DOM Level 2 API</a> on Android and iOS.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "appendChild",
        "cloneNode",
        "hasAttributes",
        "hasChildNodes",
        "insertBefore",
        "isSupported",
        "normalize",
        "removeChild",
        "replaceChild",
        "appendData",
        "deleteData",
        "insertData",
        "replaceData",
        "substringData",
        "splitText"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer",
        "ELEMENT_NODE",
        "ATTRIBUTE_NODE",
        "TEXT_NODE",
        "CDATA_SECTION_NODE",
        "ENTITY_REFERENCE_NODE",
        "ENTITY_NODE",
        "PROCESSING_INSTRUCTION_NODE",
        "COMMENT_NODE",
        "DOCUMENT_NODE",
        "DOCUMENT_TYPE_NODE",
        "DOCUMENT_FRAGMENT_NODE",
        "NOTATION_NODE",
        "nodeName",
        "nodeValue",
        "textContent",
        "text",
        "nodeType",
        "parentNode",
        "childNodes",
        "firstChild",
        "lastChild",
        "previousSibling",
        "nextSibling",
        "attributes",
        "ownerDocument",
        "namespaceURI",
        "prefix",
        "localName",
        "data",
        "length"
      ],
      "events": []
    },
    "Ti.XML": {
      "description": "The top level XML module.  The XML module is used for parsing and processing XML-based content.",
      "functions": [
        "addEventListener",
        "removeEventListener",
        "fireEvent",
        "applyProperties",
        "parseString",
        "serializeToString"
      ],
      "properties": [
        "bubbleParent",
        "apiName",
        "lifecycleContainer"
      ],
      "events": []
    },
    "Dictionary": {
      "description": "Plain JavaScript object.",
      "functions": [],
      "properties": [],
      "events": []
    }
  }
}
